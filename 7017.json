{"post_stream":{"posts":[{"id":32225,"name":"James Henstridge","username":"jamesh","avatar_template":"/user_avatar/forum.snapcraft.io/jamesh/{size}/3947_2.png","created_at":"2018-08-23T11:17:28.921Z","cooked":"\u003cp\u003eAs we are now shipping a number of snaps in the default install on Ubuntu, the question has come up about how to collect and process crash reports for these applications.\u003c/p\u003e\n\u003cp\u003eThe actual collection of core dumps can probably be done with the existing apport/whoopsie infrastructure (once they learn how to identify the core dump as coming from a snap).  But without debug symbols, there is a limit to what we can do to analyse the problem.\u003c/p\u003e\n\u003cp\u003eI know that there were some discussions about how such a system could work at the October 2016 sprint in The Hague (way back in the Ubuntu Phone days), but am I right in thinking that nothing went beyond those vague plans?\u003c/p\u003e\n\u003cp\u003eI’ve been thinking a bit about how Snapcraft could be modified to handle this, so here are my thoughts running roughly top down.  If no one else is working on this I’ll have a go implementing some of this, so would appreciate feedback on the overall design.\u003c/p\u003e\n\u003ch2\u003eDon’t ship debug symbols in the .snap\u003c/h2\u003e\n\u003cp\u003eAs with Debian packages, we don’t want to separate debug symbols from the .snap package: they increase the size of the package while being of little interest to the vast majority of users, and in they could reveal confidential information in the case of proprietary software.\u003c/p\u003e\n\u003cp\u003eSo I propose that the \u003ccode\u003esnapcraft snap\u003c/code\u003e command generate a \u003ccode\u003e$package_$version_$arch.dbgsym.tar.gz\u003c/code\u003e file alongside \u003ccode\u003e$package_$version_$arch.snap\u003c/code\u003e.  This tarball would contain a hierarchy matching what is generally found under \u003ccode\u003e/usr/lib/debug\u003c/code\u003e.  In particular, favouring the \u003ccode\u003e.build-id/NN/...debug\u003c/code\u003e layout.\u003c/p\u003e\n\u003ch2\u003eGathering debug symbols for the archive\u003c/h2\u003e\n\u003cp\u003eWe already have code in place to read information out of the ELF files destined for a snap using pyelftools, so it should be fairly trivial to extend it to collect the build ID found in the \u003ccode\u003e.note.gnu.build-id\u003c/code\u003e section.  It would then iterate through each part searching for debug symbols matching any of the primed build IDs.\u003c/p\u003e\n\u003cp\u003eWe’d probably need some other strategy to handle debug symbols for system libraries that are brought in, not belonging to any part.\u003c/p\u003e\n\u003ch2\u003eParts generating debug symbols\u003c/h2\u003e\n\u003cp\u003ePart plugins will need to be modified to do two things:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eConfigure the build so that debug symbols are generated.\u003c/li\u003e\n\u003cli\u003eAfter the build/install completes, process files in \u003ccode\u003eparts/$part/install\u003c/code\u003e to detach debug symbols and place them in \u003ccode\u003eparts/$part/debug\u003c/code\u003e (again resembling the normal \u003ccode\u003e/usr/lib/debug\u003c/code\u003e hierarchy).\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThe first step is likely to be specific to a particular plugin, but most of the logic for the second can likely be shared.  I’d probably do this as a utility method that can be called by the plugin, so it can be replaced if there are any exotic plugins.\u003c/p\u003e\n\u003cp\u003eOne other area that will need special attention is \u003ccode\u003estage-packages\u003c/code\u003e: the binaries from these staged packages are already stripped of debug symbols so need to be handled specially.  I think something like this should work:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eadd the corresponding ddebs sources to the Apt cache used for retrieving stage packages.\u003c/li\u003e\n\u003cli\u003eiterate through all the staged packages:\n\u003cul\u003e\n\u003cli\u003eIf a \u003ccode\u003e$name-dbgsym\u003c/code\u003e package exists, download it.\u003c/li\u003e\n\u003cli\u003eUnpack the dbgsym package and copy the contents of its \u003ccode\u003e/usr/lib/debug\u003c/code\u003e tree to the part’s debug tree.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eI think it should be possible to implement something equivalent for RPM packages when Snapcraft grows support for building against a Fedora base.\u003c/p\u003e\n\u003cp\u003eFor edge cases, it would probably also be useful to let a scriptlet produce debug symbols too.  Maybe the existing scriptlets are enough if we just let them write to the \u003ccode\u003eparts/$part/debug/\u003c/code\u003e directory directly.  The main use case I can see for this is collecting debug symbols for the core snap (and other base snaps built in a similar fashion).\u003c/p\u003e\n\u003chr\u003e\n\u003cp\u003eThis is clearly only one part of a retracing solution.  Off the top of my head, we’d also need the following:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003esome way to the debug symbols associated with particular revisions of a snap uploaded to the store.  Maybe the store should eventually be responsible for this, but it doesn’t need to be.\u003c/li\u003e\n\u003cli\u003eApport needs to learn about snaps.  In particular:\n\u003cul\u003e\n\u003cli\u003ewhen the core file is for an executable found under \u003ccode\u003e/snap\u003c/code\u003e, recognise it as coming from a snap.\u003c/li\u003e\n\u003cli\u003eRecord the name and revision number of the snap the executable comes from.\u003c/li\u003e\n\u003cli\u003eFor strictly confined snaps, record the name and revision of the base snap in use.\u003c/li\u003e\n\u003cli\u003eCheck for connected content interface plugs, and record the name and revision of the corresponding slot snaps.  This is important for cases like the GNOME platform snap.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eOn the retracing end, somehow retrieve the dbgsym tarballs for each of the snaps referenced in the report.  Unpack those tarballs and configure GDB to use these additional sets of debug symbols when retracing the core dump.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eAny thoughts on this overall design?\u003c/p\u003e","post_number":1,"post_type":1,"updated_at":"2018-08-23T11:17:28.921Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":535,"reads":60,"readers_count":59,"score":2704.0,"yours":false,"topic_id":7017,"topic_slug":"collecting-debug-symbols","display_username":"James Henstridge","primary_group_name":null,"primary_group_flair_url":null,"primary_group_flair_bg_color":null,"primary_group_flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"link_counts":[{"url":"https://forum.snapcraft.io/t/using-gdb-and-gdbserver/20718","internal":true,"reflection":true,"title":"Using gdb and gdbserver","clicks":0}],"read":true,"user_title":null,"bookmarked":false,"actions_summary":[{"id":2,"count":2}],"moderator":false,"admin":false,"staff":false,"user_id":393,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":32231,"name":"Evan","username":"evan","avatar_template":"/user_avatar/forum.snapcraft.io/evan/{size}/4719_2.png","created_at":"2018-08-23T12:02:59.509Z","cooked":"\u003cp\u003eHave you looked at \u003ca href=\"https://sentry.io/_/open-source/\" rel=\"noopener nofollow ugc\"\u003eSentry\u003c/a\u003e and its \u003ca href=\"https://docs.sentry.io/clients/minidump/\" rel=\"noopener nofollow ugc\"\u003eMinidump\u003c/a\u003e support?\u003c/p\u003e","post_number":2,"post_type":1,"updated_at":"2018-08-23T12:02:59.509Z","reply_count":2,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":1,"reads":55,"readers_count":54,"score":26.0,"yours":false,"topic_id":7017,"topic_slug":"collecting-debug-symbols","display_username":"Evan","primary_group_name":null,"primary_group_flair_url":null,"primary_group_flair_bg_color":null,"primary_group_flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"link_counts":[{"url":"https://docs.sentry.io/clients/minidump/","internal":false,"reflection":false,"clicks":13},{"url":"https://sentry.io/_/open-source/","internal":false,"reflection":false,"clicks":7}],"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":12,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":32232,"name":"Sergio Schvezov","username":"sergiusens","avatar_template":"/user_avatar/forum.snapcraft.io/sergiusens/{size}/5621_2.png","created_at":"2018-08-23T12:23:55.080Z","cooked":"\u003cp\u003eI was going to suggest breakpad, but minidump already alludes to it.\u003c/p\u003e","post_number":3,"post_type":1,"updated_at":"2018-08-23T12:23:55.080Z","reply_count":0,"reply_to_post_number":2,"quote_count":0,"incoming_link_count":0,"reads":55,"readers_count":54,"score":11.0,"yours":false,"topic_id":7017,"topic_slug":"collecting-debug-symbols","display_username":"Sergio Schvezov","primary_group_name":null,"primary_group_flair_url":null,"primary_group_flair_bg_color":null,"primary_group_flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":"policy-reviewers","title_is_group":false,"reply_to_user":{"username":"evan","avatar_template":"/user_avatar/forum.snapcraft.io/evan/{size}/4719_2.png"},"bookmarked":false,"actions_summary":[],"moderator":true,"admin":false,"staff":true,"user_id":25,"hidden":false,"trust_level":3,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":32240,"name":"James Henstridge","username":"jamesh","avatar_template":"/user_avatar/forum.snapcraft.io/jamesh/{size}/3947_2.png","created_at":"2018-08-23T13:39:08.253Z","cooked":"\u003caside class=\"quote no-group\" data-username=\"evan\" data-post=\"2\" data-topic=\"7017\"\u003e\n\u003cdiv class=\"title\"\u003e\n\u003cdiv class=\"quote-controls\"\u003e\u003c/div\u003e\n\u003cimg alt=\"\" width=\"20\" height=\"20\" src=\"https://forum.snapcraft.io/user_avatar/forum.snapcraft.io/evan/40/4719_2.png\" class=\"avatar\"\u003e evan:\u003c/div\u003e\n\u003cblockquote\u003e\n\u003cp\u003eHave you looked at \u003ca href=\"https://sentry.io/_/open-source/\" rel=\"noopener nofollow ugc\"\u003eSentry\u003c/a\u003e and its \u003ca href=\"https://docs.sentry.io/clients/minidump/\" rel=\"noopener nofollow ugc\"\u003eMinidump\u003c/a\u003e support?\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/aside\u003e\n\u003cp\u003eI hadn’t looked at that project.  Based on its documentation it still relies on the developer providing them with the debug symbols, so having \u003ccode\u003esnapcraft\u003c/code\u003e produce that data as an artefact of package build still seems like a necessary first step.\u003c/p\u003e\n\u003cp\u003eThat’s the part of the pipeline I’ve looked at in most detail, and would appreciate feedback on.\u003c/p\u003e","post_number":4,"post_type":1,"updated_at":"2018-08-23T13:39:08.253Z","reply_count":1,"reply_to_post_number":2,"quote_count":1,"incoming_link_count":0,"reads":55,"readers_count":54,"score":16.0,"yours":false,"topic_id":7017,"topic_slug":"collecting-debug-symbols","display_username":"James Henstridge","primary_group_name":null,"primary_group_flair_url":null,"primary_group_flair_bg_color":null,"primary_group_flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":393,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":32525,"name":"James Henstridge","username":"jamesh","avatar_template":"/user_avatar/forum.snapcraft.io/jamesh/{size}/3947_2.png","created_at":"2018-08-29T07:37:06.426Z","cooked":"\u003cp\u003eI’ve put together a small pull request with some minor changes to get some of this started.  Namely, extending the \u003ccode\u003eElfFile\u003c/code\u003e class to identify the build ID of files, and whether they contain debug info:\u003c/p\u003e\n\u003caside class=\"onebox githubpullrequest\"\u003e\n  \u003cheader class=\"source\"\u003e\n      \u003ca href=\"https://github.com/snapcore/snapcraft/pull/2229\" target=\"_blank\" rel=\"noopener nofollow ugc\"\u003egithub.com/snapcore/snapcraft\u003c/a\u003e\n  \u003c/header\u003e\n  \u003carticle class=\"onebox-body\"\u003e\n    \u003cdiv class=\"github-row\"\u003e\n  \u003cdiv class=\"github-icon-container\" title=\"Pull Request\"\u003e\n    \u003csvg width=\"60\" height=\"60\" class=\"github-icon\" viewBox=\"0 0 12 16\" aria-hidden=\"true\"\u003e\u003cpath d=\"M11 11.28V5c-.03-.78-.34-1.47-.94-2.06C9.46 2.35 8.78 2.03 8 2H7V0L4 3l3 3V4h1c.27.02.48.11.69.31.21.2.3.42.31.69v6.28A1.993 1.993 0 0 0 10 15a1.993 1.993 0 0 0 1-3.72zm-1 2.92c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zM4 3c0-1.11-.89-2-2-2a1.993 1.993 0 0 0-1 3.72v6.56A1.993 1.993 0 0 0 2 15a1.993 1.993 0 0 0 1-3.72V4.72c.59-.34 1-.98 1-1.72zm-.8 10c0 .66-.55 1.2-1.2 1.2-.65 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z\"\u003e\u003c/path\u003e\u003c/svg\u003e\n  \u003c/div\u003e\n\n  \u003cdiv class=\"github-info-container\"\u003e\n    \u003ch4\u003e\n      \u003ca href=\"https://github.com/snapcore/snapcraft/pull/2229\" target=\"_blank\" rel=\"noopener nofollow ugc\"\u003eelf: extract build ID and presence of debug info\u003c/a\u003e\n    \u003c/h4\u003e\n\n    \u003cdiv class=\"branches\"\u003e\n      \u003ccode\u003esnapcore:master\u003c/code\u003e ← \u003ccode\u003ejhenstridge:elf-build-id\u003c/code\u003e\n    \u003c/div\u003e\n\n    \u003cdiv class=\"github-info\"\u003e\n      \u003cdiv class=\"date\"\u003e\n        opened \u003cspan class=\"discourse-local-date\" data-format=\"ll\" data-date=\"2018-08-29\" data-time=\"03:38:44\" data-timezone=\"UTC\"\u003e03:38AM - 29 Aug 18 UTC\u003c/span\u003e\n      \u003c/div\u003e\n\n      \u003cdiv class=\"user\"\u003e\n        \u003ca href=\"https://github.com/jhenstridge\" target=\"_blank\" rel=\"noopener nofollow ugc\"\u003e\n          \u003cimg alt=\"jhenstridge\" src=\"https://avatars.githubusercontent.com/u/12724165?v=4\" class=\"onebox-avatar-inline\" width=\"20\" height=\"20\"\u003e\n          jhenstridge\n        \u003c/a\u003e\n      \u003c/div\u003e\n\n      \u003cdiv class=\"lines\" title=\"4 commits changed 4 files with 79 additions and 36 deletions\"\u003e\n        \u003ca href=\"https://github.com/snapcore/snapcraft/pull/2229/files\" target=\"_blank\" rel=\"noopener nofollow ugc\"\u003e\n          \u003cspan class=\"added\"\u003e+79\u003c/span\u003e\n          \u003cspan class=\"removed\"\u003e-36\u003c/span\u003e\n        \u003c/a\u003e\n      \u003c/div\u003e\n    \u003c/div\u003e\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\n  \u003c/article\u003e\n  \u003cdiv class=\"onebox-metadata\"\u003e\n    \n    \n  \u003c/div\u003e\n  \u003cdiv style=\"clear: both\"\u003e\u003c/div\u003e\n\u003c/aside\u003e\n\n\u003cp\u003eThe next step would be to get a part to generate separated debug info and strip the executables as part of its build process.\u003c/p\u003e","post_number":5,"post_type":1,"updated_at":"2018-08-29T07:37:06.426Z","reply_count":0,"reply_to_post_number":4,"quote_count":0,"incoming_link_count":1,"reads":48,"readers_count":47,"score":29.6,"yours":false,"topic_id":7017,"topic_slug":"collecting-debug-symbols","display_username":"James Henstridge","primary_group_name":null,"primary_group_flair_url":null,"primary_group_flair_bg_color":null,"primary_group_flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"link_counts":[{"url":"https://github.com/snapcore/snapcraft/pull/2229","internal":false,"reflection":false,"title":"elf: extract build ID and presence of debug info by jhenstridge · Pull Request #2229 · snapcore/snapcraft · GitHub","clicks":5},{"url":"https://github.com/snapcore/snapcraft/pull/2229/files","internal":false,"reflection":false,"title":"elf: extract build ID and presence of debug info by jhenstridge · Pull Request #2229 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/jhenstridge","internal":false,"reflection":false,"title":"jhenstridge (James Henstridge) · GitHub","clicks":0}],"read":true,"user_title":null,"reply_to_user":{"username":"jamesh","avatar_template":"/user_avatar/forum.snapcraft.io/jamesh/{size}/3947_2.png"},"bookmarked":false,"actions_summary":[{"id":2,"count":1}],"moderator":false,"admin":false,"staff":false,"user_id":393,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":32601,"name":"Evan","username":"evan","avatar_template":"/user_avatar/forum.snapcraft.io/evan/{size}/4719_2.png","created_at":"2018-08-30T11:43:31.419Z","cooked":"\u003cp\u003eWe’ve added a session to discuss this in Brussels. We’ll get notes pasted back here for the benefit of all.\u003c/p\u003e","post_number":6,"post_type":1,"updated_at":"2018-08-30T11:43:31.419Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":1,"reads":42,"readers_count":41,"score":43.4,"yours":false,"topic_id":7017,"topic_slug":"collecting-debug-symbols","display_username":"Evan","primary_group_name":null,"primary_group_flair_url":null,"primary_group_flair_bg_color":null,"primary_group_flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[{"id":2,"count":2}],"moderator":false,"admin":false,"staff":false,"user_id":12,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":32932,"name":"James Henstridge","username":"jamesh","avatar_template":"/user_avatar/forum.snapcraft.io/jamesh/{size}/3947_2.png","created_at":"2018-09-04T11:31:51.595Z","cooked":"\u003cp\u003eI’ve been putting together a trial implementation of collecting debug symbols while building a part:\u003cbr\u003e\n\u003c/p\u003e\u003caside class=\"onebox githubpullrequest\"\u003e\n  \u003cheader class=\"source\"\u003e\n      \u003ca href=\"https://github.com/snapcore/snapcraft/pull/2239\" target=\"_blank\" rel=\"noopener nofollow ugc\"\u003egithub.com/snapcore/snapcraft\u003c/a\u003e\n  \u003c/header\u003e\n  \u003carticle class=\"onebox-body\"\u003e\n    \u003cdiv class=\"github-row\"\u003e\n  \u003cdiv class=\"github-icon-container\" title=\"Pull Request\"\u003e\n    \u003csvg width=\"60\" height=\"60\" class=\"github-icon\" viewBox=\"0 0 12 16\" aria-hidden=\"true\"\u003e\u003cpath d=\"M11 11.28V5c-.03-.78-.34-1.47-.94-2.06C9.46 2.35 8.78 2.03 8 2H7V0L4 3l3 3V4h1c.27.02.48.11.69.31.21.2.3.42.31.69v6.28A1.993 1.993 0 0 0 10 15a1.993 1.993 0 0 0 1-3.72zm-1 2.92c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zM4 3c0-1.11-.89-2-2-2a1.993 1.993 0 0 0-1 3.72v6.56A1.993 1.993 0 0 0 2 15a1.993 1.993 0 0 0 1-3.72V4.72c.59-.34 1-.98 1-1.72zm-.8 10c0 .66-.55 1.2-1.2 1.2-.65 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z\"\u003e\u003c/path\u003e\u003c/svg\u003e\n  \u003c/div\u003e\n\n  \u003cdiv class=\"github-info-container\"\u003e\n    \u003ch4\u003e\n      \u003ca href=\"https://github.com/snapcore/snapcraft/pull/2239\" target=\"_blank\" rel=\"noopener nofollow ugc\"\u003eWIP: pluginhandler: after building a part, separate debug info from executables and strip them\u003c/a\u003e\n    \u003c/h4\u003e\n\n    \u003cdiv class=\"branches\"\u003e\n      \u003ccode\u003esnapcore:master\u003c/code\u003e ← \u003ccode\u003ejhenstridge:separate-debug-info\u003c/code\u003e\n    \u003c/div\u003e\n\n    \u003cdiv class=\"github-info\"\u003e\n      \u003cdiv class=\"date\"\u003e\n        opened \u003cspan class=\"discourse-local-date\" data-format=\"ll\" data-date=\"2018-09-01\" data-time=\"01:02:24\" data-timezone=\"UTC\"\u003e01:02AM - 01 Sep 18 UTC\u003c/span\u003e\n      \u003c/div\u003e\n\n      \u003cdiv class=\"user\"\u003e\n        \u003ca href=\"https://github.com/jhenstridge\" target=\"_blank\" rel=\"noopener nofollow ugc\"\u003e\n          \u003cimg alt=\"jhenstridge\" src=\"https://avatars.githubusercontent.com/u/12724165?v=4\" class=\"onebox-avatar-inline\" width=\"20\" height=\"20\"\u003e\n          jhenstridge\n        \u003c/a\u003e\n      \u003c/div\u003e\n\n      \u003cdiv class=\"lines\" title=\"3 commits changed 7 files with 227 additions and 44 deletions\"\u003e\n        \u003ca href=\"https://github.com/snapcore/snapcraft/pull/2239/files\" target=\"_blank\" rel=\"noopener nofollow ugc\"\u003e\n          \u003cspan class=\"added\"\u003e+227\u003c/span\u003e\n          \u003cspan class=\"removed\"\u003e-44\u003c/span\u003e\n        \u003c/a\u003e\n      \u003c/div\u003e\n    \u003c/div\u003e\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\n  \u003c/article\u003e\n  \u003cdiv class=\"onebox-metadata\"\u003e\n    \n    \n  \u003c/div\u003e\n  \u003cdiv style=\"clear: both\"\u003e\u003c/div\u003e\n\u003c/aside\u003e\n\n\u003cp\u003eWhat works:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eusing the previous ElfFile PR, the \u003ccode\u003epluginhandler\u003c/code\u003e code detects ELF files with debug info, and separates it into a file in \u003ccode\u003eparts/$partname/debug\u003c/code\u003e named after the file’s build ID.  Then strip the original file and add a link to the debug info.\u003c/li\u003e\n\u003cli\u003eHandle the cross-compile case by using the appropriate architecture version of \u003ccode\u003eobjcopy\u003c/code\u003e and \u003ccode\u003estrip\u003c/code\u003e.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eWhat doesn’t work:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003ehandle ELF files without a build ID.  Some of the builds in the test suite didn’t seem to be doing this, which might just be tests using an old Go toolchain to build.  I haven’t investigated more deeply.\u003c/li\u003e\n\u003cli\u003elocate debug info for files from \u003ccode\u003estage-packages\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eSnapcraft doesn’t set any default compile/link flags, so I needed to modify my project to build with \u003ccode\u003e-g\u003c/code\u003e.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eIt was enough to get GDB to debug an executable built by \u003ccode\u003esnapcraft build\u003c/code\u003e:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e(gdb) set debug-file-directory ./parts/partname/debug:/usr/lib/debug\n(gdb) file ./parts/partname/install/executable\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eI am now working on extending it to scan the \u003ccode\u003eparts/partname/debug\u003c/code\u003e directories for information linked to primed executables/libraries, so this basic approach seems sound.  This should be a good starting point for what we discuss in Brussels.\u003c/p\u003e","post_number":7,"post_type":1,"updated_at":"2018-09-04T11:31:51.595Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":5,"reads":44,"readers_count":43,"score":63.8,"yours":false,"topic_id":7017,"topic_slug":"collecting-debug-symbols","display_username":"James Henstridge","primary_group_name":null,"primary_group_flair_url":null,"primary_group_flair_bg_color":null,"primary_group_flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"link_counts":[{"url":"https://github.com/snapcore/snapcraft/pull/2239","internal":false,"reflection":false,"title":"WIP: pluginhandler: after building a part, separate debug info from executables and strip them by jhenstridge · Pull Request #2239 · snapcore/snapcraft · GitHub","clicks":11},{"url":"https://github.com/jhenstridge","internal":false,"reflection":false,"title":"jhenstridge (James Henstridge) · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2239/files","internal":false,"reflection":false,"title":"WIP: pluginhandler: after building a part, separate debug info from executables and strip them by jhenstridge · Pull Request #2239 · snapcore/snapcraft · GitHub","clicks":0}],"read":true,"user_title":null,"bookmarked":false,"actions_summary":[{"id":2,"count":2}],"moderator":false,"admin":false,"staff":false,"user_id":393,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":54455,"name":"Alex Murray","username":"alexmurray","avatar_template":"/user_avatar/forum.snapcraft.io/alexmurray/{size}/4397_2.png","created_at":"2019-09-02T23:54:09.481Z","cooked":"\u003cp\u003e\u003ca class=\"mention\" href=\"/u/jamesh\"\u003e@jamesh\u003c/a\u003e  is this something you are still working on?\u003c/p\u003e","post_number":8,"post_type":1,"updated_at":"2019-09-02T23:54:09.481Z","reply_count":1,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":1,"reads":35,"readers_count":34,"score":17.0,"yours":false,"topic_id":7017,"topic_slug":"collecting-debug-symbols","display_username":"Alex Murray","primary_group_name":null,"primary_group_flair_url":null,"primary_group_flair_bg_color":null,"primary_group_flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":"policy-reviewers","title_is_group":false,"bookmarked":false,"actions_summary":[],"moderator":true,"admin":false,"staff":true,"user_id":2432,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":54456,"name":"James Henstridge","username":"jamesh","avatar_template":"/user_avatar/forum.snapcraft.io/jamesh/{size}/3947_2.png","created_at":"2019-09-03T01:38:08.112Z","cooked":"\u003cp\u003eNot actively.  I posted a few pull requests, but it’s been radio silence from the Snapcraft team for almost a year now.\u003c/p\u003e","post_number":9,"post_type":1,"updated_at":"2019-09-03T01:38:08.112Z","reply_count":1,"reply_to_post_number":8,"quote_count":0,"incoming_link_count":3,"reads":34,"readers_count":33,"score":26.8,"yours":false,"topic_id":7017,"topic_slug":"collecting-debug-symbols","display_username":"James Henstridge","primary_group_name":null,"primary_group_flair_url":null,"primary_group_flair_bg_color":null,"primary_group_flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"reply_to_user":{"username":"alexmurray","avatar_template":"/user_avatar/forum.snapcraft.io/alexmurray/{size}/4397_2.png"},"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":393,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":54488,"name":"Sergio Schvezov","username":"sergiusens","avatar_template":"/user_avatar/forum.snapcraft.io/sergiusens/{size}/5621_2.png","created_at":"2019-09-03T18:58:16.872Z","cooked":"\u003cp\u003eIt was decided by the \u003cem\u003ehigh council\u003c/em\u003e that the full implementation for this requires a full story including snapd (\u003ca class=\"mention\" href=\"/u/pedronis\"\u003e@pedronis\u003c/a\u003e and \u003ca class=\"mention\" href=\"/u/mvo\"\u003e@mvo\u003c/a\u003e) and the Snap Store (\u003ca class=\"mention\" href=\"/u/noise\"\u003e@noise\u003c/a\u003e).\u003c/p\u003e\n\u003cp\u003eWe can strip and extract on the snapcraft side but we need the story to determine where to put them and how they will be dealt with at runtime. We have an event shy of two weeks from now, so we could discuss this in person if representatives from those two groups have the bandwidth.\u003c/p\u003e","post_number":10,"post_type":1,"updated_at":"2019-09-03T18:58:16.872Z","reply_count":1,"reply_to_post_number":9,"quote_count":0,"incoming_link_count":0,"reads":36,"readers_count":35,"score":27.2,"yours":false,"topic_id":7017,"topic_slug":"collecting-debug-symbols","display_username":"Sergio Schvezov","primary_group_name":null,"primary_group_flair_url":null,"primary_group_flair_bg_color":null,"primary_group_flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":"policy-reviewers","title_is_group":false,"reply_to_user":{"username":"jamesh","avatar_template":"/user_avatar/forum.snapcraft.io/jamesh/{size}/3947_2.png"},"bookmarked":false,"actions_summary":[{"id":2,"count":1}],"moderator":true,"admin":false,"staff":true,"user_id":25,"hidden":false,"trust_level":3,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":54511,"name":"James Henstridge","username":"jamesh","avatar_template":"/user_avatar/forum.snapcraft.io/jamesh/{size}/3947_2.png","created_at":"2019-09-04T04:15:46.246Z","cooked":"\u003cp\u003eSure, but any system we end up using is going to need to start by extracting the debug symbols from a snap build.  Insisting on a master plan covering the entire stack, seems like an excuse not to work on the parts we know we’ll need.\u003c/p\u003e","post_number":11,"post_type":1,"updated_at":"2019-09-04T04:15:46.246Z","reply_count":0,"reply_to_post_number":10,"quote_count":0,"incoming_link_count":0,"reads":36,"readers_count":35,"score":22.2,"yours":false,"topic_id":7017,"topic_slug":"collecting-debug-symbols","display_username":"James Henstridge","primary_group_name":null,"primary_group_flair_url":null,"primary_group_flair_bg_color":null,"primary_group_flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"reply_to_user":{"username":"sergiusens","avatar_template":"/user_avatar/forum.snapcraft.io/sergiusens/{size}/5621_2.png"},"bookmarked":false,"actions_summary":[{"id":2,"count":1}],"moderator":false,"admin":false,"staff":false,"user_id":393,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false}],"stream":[32225,32231,32232,32240,32525,32601,32932,54455,54456,54488,54511]},"timeline_lookup":[[1,1758],[5,1752],[6,1751],[7,1746],[8,1382],[10,1381]],"suggested_topics":[{"id":34265,"title":"Flutter application and clang error compilation","fancy_title":"Flutter application and clang error compilation","slug":"flutter-application-and-clang-error-compilation","posts_count":1,"reply_count":0,"highest_post_number":1,"image_url":null,"created_at":"2023-03-09T19:51:43.371Z","last_posted_at":"2023-03-09T19:51:43.503Z","bumped":true,"bumped_at":"2023-03-10T09:02:13.882Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags":[],"like_count":0,"views":158,"category_id":13,"featured_link":null,"has_accepted_answer":true,"posters":[{"extras":"latest single","description":"Original Poster, Most Recent Poster","user":{"id":10513,"username":"mmyr","name":"Roman","avatar_template":"/user_avatar/forum.snapcraft.io/mmyr/{size}/7798_2.png"}}]},{"id":31333,"title":"Create snap from only binary files","fancy_title":"Create snap from only binary files","slug":"create-snap-from-only-binary-files","posts_count":11,"reply_count":5,"highest_post_number":11,"image_url":null,"created_at":"2022-08-17T18:02:51.579Z","last_posted_at":"2022-08-18T21:20:48.853Z","bumped":true,"bumped_at":"2022-08-18T21:20:48.853Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags":[],"like_count":2,"views":797,"category_id":13,"featured_link":null,"has_accepted_answer":true,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":13011,"username":"alank","name":"","avatar_template":"/letter_avatar/alank/{size}/5_6d6f4cde2641c35611d5cac2fb97c77e.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":9,"username":"ogra","name":"Oliver Grawert","avatar_template":"/user_avatar/forum.snapcraft.io/ogra/{size}/22_2.png"}}]},{"id":31799,"title":"Kiosk desktop application updates","fancy_title":"Kiosk desktop application updates","slug":"kiosk-desktop-application-updates","posts_count":1,"reply_count":0,"highest_post_number":1,"image_url":null,"created_at":"2022-09-17T08:35:47.485Z","last_posted_at":"2022-09-17T08:35:47.604Z","bumped":true,"bumped_at":"2022-09-17T08:35:47.604Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags":[],"like_count":0,"views":122,"category_id":13,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest single","description":"Original Poster, Most Recent Poster","user":{"id":13203,"username":"matihuf","name":"","avatar_template":"/letter_avatar/matihuf/{size}/5_6d6f4cde2641c35611d5cac2fb97c77e.png"}}]},{"id":32880,"title":"Wayland connection in confined snap","fancy_title":"Wayland connection in confined snap","slug":"wayland-connection-in-confined-snap","posts_count":3,"reply_count":1,"highest_post_number":3,"image_url":null,"created_at":"2022-11-27T12:50:36.345Z","last_posted_at":"2022-11-27T18:39:59.794Z","bumped":true,"bumped_at":"2022-11-27T18:39:59.794Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags":[],"like_count":0,"views":305,"category_id":13,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":5429,"username":"christian","name":"","avatar_template":"/letter_avatar/christian/{size}/5_6d6f4cde2641c35611d5cac2fb97c77e.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":8016,"username":"James-Carroll","name":"James Carroll","avatar_template":"/user_avatar/forum.snapcraft.io/james-carroll/{size}/7921_2.png"}}]},{"id":32822,"title":"Core22 and patchelf - Wrong Linter warnings","fancy_title":"Core22 and patchelf - Wrong Linter warnings","slug":"core22-and-patchelf-wrong-linter-warnings","posts_count":3,"reply_count":1,"highest_post_number":3,"image_url":null,"created_at":"2022-11-22T23:16:22.915Z","last_posted_at":"2022-11-23T12:20:42.475Z","bumped":true,"bumped_at":"2022-11-23T12:20:42.475Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags":[],"like_count":2,"views":272,"category_id":13,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":null,"description":"Original Poster","user":{"id":3086,"username":"hurricanehrndz","name":"Carlos Hernandez","avatar_template":"/letter_avatar/hurricanehrndz/{size}/5_6d6f4cde2641c35611d5cac2fb97c77e.png"}},{"extras":"latest","description":"Most Recent Poster","user":{"id":3793,"username":"cmatsuoka","name":"Claudio Matsuoka","avatar_template":"/user_avatar/forum.snapcraft.io/cmatsuoka/{size}/9338_2.png"}}]}],"tags":[],"id":7017,"title":"Collecting debug symbols","fancy_title":"Collecting debug symbols","posts_count":11,"created_at":"2018-08-23T11:17:28.525Z","views":2099,"reply_count":6,"like_count":9,"last_posted_at":"2019-09-04T04:15:46.246Z","visible":true,"closed":false,"archived":false,"has_summary":false,"archetype":"regular","slug":"collecting-debug-symbols","category_id":13,"word_count":1421,"deleted_at":null,"user_id":393,"featured_link":null,"pinned_globally":false,"pinned_at":null,"pinned_until":null,"image_url":null,"slow_mode_seconds":0,"draft":null,"draft_key":"topic_7017","draft_sequence":null,"unpinned":null,"pinned":false,"current_post_number":1,"highest_post_number":11,"deleted_by":null,"actions_summary":[{"id":4,"count":0,"hidden":false,"can_act":false},{"id":8,"count":0,"hidden":false,"can_act":false},{"id":7,"count":0,"hidden":false,"can_act":false}],"chunk_size":20,"bookmarked":false,"topic_timer":null,"message_bus_last_id":0,"participant_count":4,"show_read_indicator":false,"thumbnails":null,"details":{"notification_level":1,"participants":[{"id":393,"username":"jamesh","name":"James Henstridge","avatar_template":"/user_avatar/forum.snapcraft.io/jamesh/{size}/3947_2.png","post_count":6,"primary_group_name":null,"primary_group_flair_url":null,"primary_group_flair_color":null,"primary_group_flair_bg_color":null},{"id":12,"username":"evan","name":"Evan","avatar_template":"/user_avatar/forum.snapcraft.io/evan/{size}/4719_2.png","post_count":2,"primary_group_name":null,"primary_group_flair_url":null,"primary_group_flair_color":null,"primary_group_flair_bg_color":null},{"id":25,"username":"sergiusens","name":"Sergio Schvezov","avatar_template":"/user_avatar/forum.snapcraft.io/sergiusens/{size}/5621_2.png","post_count":2,"primary_group_name":null,"primary_group_flair_url":null,"primary_group_flair_color":null,"primary_group_flair_bg_color":null},{"id":2432,"username":"alexmurray","name":"Alex Murray","avatar_template":"/user_avatar/forum.snapcraft.io/alexmurray/{size}/4397_2.png","post_count":1,"primary_group_name":null,"primary_group_flair_url":null,"primary_group_flair_color":null,"primary_group_flair_bg_color":null}],"created_by":{"id":393,"username":"jamesh","name":"James Henstridge","avatar_template":"/user_avatar/forum.snapcraft.io/jamesh/{size}/3947_2.png"},"last_poster":{"id":393,"username":"jamesh","name":"James Henstridge","avatar_template":"/user_avatar/forum.snapcraft.io/jamesh/{size}/3947_2.png"},"links":[{"url":"https://docs.sentry.io/clients/minidump/","title":null,"internal":false,"attachment":false,"reflection":false,"clicks":13,"user_id":12,"domain":"docs.sentry.io","root_domain":"sentry.io"},{"url":"https://github.com/snapcore/snapcraft/pull/2239","title":"WIP: pluginhandler: after building a part, separate debug info from executables and strip them by jhenstridge · Pull Request #2239 · snapcore/snapcraft · GitHub","internal":false,"attachment":false,"reflection":false,"clicks":11,"user_id":393,"domain":"github.com","root_domain":"github.com"},{"url":"https://sentry.io/_/open-source/","title":null,"internal":false,"attachment":false,"reflection":false,"clicks":7,"user_id":12,"domain":"sentry.io","root_domain":"sentry.io"},{"url":"https://github.com/snapcore/snapcraft/pull/2229","title":"elf: extract build ID and presence of debug info by jhenstridge · Pull Request #2229 · snapcore/snapcraft · GitHub","internal":false,"attachment":false,"reflection":false,"clicks":5,"user_id":393,"domain":"github.com","root_domain":"github.com"}]}}