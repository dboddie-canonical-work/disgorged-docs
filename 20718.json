{"post_stream":{"posts":[{"id":81094,"name":"Graham Morrison","username":"degville","avatar_template":"/user_avatar/forum.snapcraft.io/degville/{size}/2021_2.png","created_at":"2020-10-23T11:54:46.457Z","cooked":"\u003cp\u003eThe \u003cem\u003egdb\u003c/em\u003e debugging tool is widely used by developers to introspect the execution environment of an application, revealing both its code and data state at any point. Snaps can use gdb to debug both locally and remotely.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"#heading--gdb\"\u003eLocal debugging with gdb\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#heading--debug-symbols\"\u003eGenerate debug symbols\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#heading--gdbserver\"\u003eLocal debugging with gdbserver\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#heading--gdbserver-remote\"\u003eRemote debugging with gdbserver\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#heading--vscode\"\u003eDebugging with VS Code\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch2 id=\"heading--gdb\"\u003eLocal debugging with gdb\u003c/h2\u003e\n\u003cp\u003eAs snaps are run within a \u003ca href=\"/t/snap-confinement/6233\"\u003econfined environment\u003c/a\u003e, running \u003cem\u003egdb\u003c/em\u003e directly against a snap executable would introspect both the snap environment and the application itself, making the identification of any issues specific to the snap application much more difficult.\u003c/p\u003e\n\u003cp\u003eFor this reason, the snap daemon embeds \u003cem\u003egdb\u003c/em\u003e within its own framework, allowing developers to call it directly against an installed snap with the run argument:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003esudo snap run --gdb \u0026lt;snapname\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eWhen GDB is instantiated in this way, it behaves just as it would were it called against the same executable outside of the snap environment.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cimg src=\"https://forum.snapcraft.io/images/emoji/emoji_one/information_source.png?v=9\" title=\":information_source:\" class=\"emoji\" alt=\":information_source:\"\u003e  For general advice on fixing potential issues in running snaps, see \u003ca href=\"/t/debugging-snaps/18420\"\u003eDebugging snaps\u003c/a\u003e. Guidance on using GDB is outside the scope of our documentation, but a good place to start is the \u003ca href=\"https://sourceware.org/gdb/current/onlinedocs/gdb/Sample-Session.html#Sample-Session\"\u003eSample GDB Session\u003c/a\u003e in the \u003ca href=\"https://sourceware.org/gdb/current/onlinedocs/gdb/\"\u003eofficial documentation\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"heading--debug-symbols\"\u003eGenerate debug symbols\u003c/h2\u003e\n\u003cp\u003eThe majority of snaps do not ship with binaries that include debug symbols, and this means GDB can’t typically link to the original source to allow further analysis.\u003c/p\u003e\n\u003cp\u003eOne solution is to build your own snaps with debug symbols enabled, and install them locally with the \u003ccode\u003e--devmode\u003c/code\u003e argument.\u003c/p\u003e\n\u003cp\u003eFor example, to debug a typical C-based project using the \u003ca href=\"/t/the-cmake-plugin/8621\"\u003eCMake plugin\u003c/a\u003e, add \u003ccode\u003eset(CMAKE_BUILD_TYPE Debug)\u003c/code\u003e to its \u003cem\u003eCMakeLists.txt\u003c/em\u003e and rebuild the snap.\u003c/p\u003e\n\u003cp\u003eAfter installing the snap and running GDB, the symbols will be located and the source code can be referenced, as shown below:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003e$ snap install test-gdb_0.1_amd64.snap --devmode\ntest-gdb 0.1 installed\n$ snap run --gdb test-gdb.test-gdb\n[...]\nYou are right before your application is execed():\n- set any options you may need\n- use 'cont' to start\n[...]\n(gdb) dir test-gdb/src/\nSource directories searched: test-gdb/src:$cdir:$cwd\n(gdb) list\n1       #include \u0026lt;stdio.h\u0026gt;\n2\n3       int main (int argc, char *argv[])\n4       {\n5         printf (\"GDB from a snap is working\\n\");\n6\n7         return 0;\n8       }\n(gdb) cont\nContinuing.\nGDB from a snap is working\n[Inferior 1 (process 153259) exited normally]\n(gdb) quit\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eSee \u003ca href=\"/t/collecting-debug-symbols/7017\"\u003eCollecting debug symbols\u003c/a\u003e for the forum discussion related to how snaps might bundle debug symbols.\u003c/p\u003e\n\u003ch2 id=\"heading--gdbserver\"\u003eLocal debugging with gdbserver\u003c/h2\u003e\n\u003cp\u003eIn addition to the gdb command (see above), the snap daemon can work with \u003cem\u003egdbserver\u003c/em\u003e for remote access. This is often a better way to debug because it combines gdb functionality with the convenience of alternative frontends, remote access, and the ability to run applications as a normal user.\u003c/p\u003e\n\u003cp\u003eThe gdbserver executable will need to be installed manually:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003esudo apt install gdbserver\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eTo run \u003cem\u003egdbserver\u003c/em\u003e, issue the following command for your own snap:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003e$ snap run --gdbserver \u0026lt;snapname\u0026gt;\nWelcome to \"snap run --gdbserver\".\nYou are right before your application is run.\nPlease open a different terminal and run:\n\ngdb -ex=\"target remote :43041\" -ex=continue -ex=\"signal SIGCONT\"\n(gdb) continue\n\nor use your favorite gdb frontend and connect to :33597\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eYou may be asked for your \u003ccode\u003e[sudo]\u003c/code\u003e password.\u003c/p\u003e\n\u003cp\u003eUse \u003ccode\u003e--gdbserver=:\u0026lt;my-port\u0026gt;\u003c/code\u003e  to request a specific port and to keep the port from changing with each run, such as \u003ccode\u003e--gdbserver=:43041\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eYou can now access the GDB session from your favourite frontend, or from \u003cem\u003egdb\u003c/em\u003e itself, running outside of the snap:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003e$ gdb -ex=\"target remote :43041\"\nGNU gdb (Ubuntu 12.1-0ubuntu1~22.04) 12.1\n[...]\n(gdb)\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id=\"heading--gdbserver-remote\"\u003eRemote debugging with gdbserver\u003c/h2\u003e\n\u003cp\u003eA gdbserver session can be started remotely via SSH, or by passing the command to through SSH directly:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003essh \u0026lt;username\u0026gt;@\u0026lt;target IP address\u0026gt; \"sudo snap run --gdbserver=:4301 \u0026lt;snapname\u0026gt;\"\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eFor the above, you will need to have  \u003ccode\u003eopenssh-askpass\u003c/code\u003e or equivalent installed and configured, or pass the \u003ccode\u003e-S\u003c/code\u003e option with SSH to enter the password into the terminal.\u003c/p\u003e\n\u003cp\u003eTo now debug a snap remotely, ensure any firewalls are set to permit the relevant ports (or are disabled) and precede the \u003cem\u003egdp\u003c/em\u003e port argument with the IP address of the target system running the snap:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003egdb -ex=\"target remote 192.168.122.138:43041\"\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eAfter connecting to the session, you will need to issue several \u003ccode\u003econt\u003c/code\u003e (continue) commands before reaching the \u003ccode\u003eexec()\u003c/code\u003e of the application. At which point, the original \u003cem\u003egdbserver\u003c/em\u003e session will output the following:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003eWelcome to `snap run --gdb`.\nYou are right before your application is execed():\n- set any options you may need\n- (optionally) set a breakpoint in 'main'\n- use 'cont' to start\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eFrom the above point, you can debug your application normally.\u003c/p\u003e\n\u003ch2 id=\"heading--vscode\"\u003eRemote debugging with VS Code\u003c/h2\u003e\n\u003cp\u003eMost IDEs can be used to visually debug snaps running \u003cem\u003egdbserver\u003c/em\u003e with either \u003ccode\u003egdb\u003c/code\u003e or \u003ccode\u003egdb-multiarch\u003c/code\u003e packages. An IDE needs to be configured to access the target host gdbserver session rather than use its default debug routine, and optionally, to automatically the execution of the snap with gdbserver before the debugger starts.\u003c/p\u003e\n\u003cp\u003eTo create a configuration  for Microsoft’s \u003ca href=\"https://code.visualstudio.com/\"\u003eVisual Studio Code (VS Code)\u003c/a\u003e , for example, you will need a workspace with local access to the same source code as the snap, and the executable, along with the VS Code \u003cem\u003eGDB Debug\u003c/em\u003e extension. The executable can be extracted form the snap package with the \u003ccode\u003eunsquashfs \u0026lt;snap name\u0026gt;\u003c/code\u003e command.\u003c/p\u003e\n\u003cp\u003eIn VS Code, open your workspace and select \u003cem\u003eRun and Debug\u003c/em\u003e from the primary side bar and click \u003ccode\u003ecreate a launch.json file\u003c/code\u003e, then select \u003cem\u003eGDB\u003c/em\u003e from the list of debuggers:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://assets.ubuntu.com/v1/b8187da5-vscode_01.png\" alt=\"VSCode GDB selector\" width=\"444\" height=\"337\"\u003e\u003c/p\u003e\n\u003cp\u003eThis will open a template \u003cem\u003elaunch.json\u003c/em\u003e file in the editor which can be configured to access the remote \u003cem\u003esnap gdb\u003c/em\u003e session. Replace the contents of this file with the following to create a new entry called \u003cem\u003eRemote gdb\u003c/em\u003e:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-json\"\u003e{\n    \"version\": \"0.2.0\",\n    \"configurations\": [{\n      \"name\": \"Remote gdb\",\n      \"type\": \"cppdbg\",\n      \"request\": \"launch\",\n      \"program\": \"${workspaceFolder}/squashfs-root/bin/\u0026lt;executable\u0026gt;\", \n      \"cwd\": \"${workspaceFolder}\",\n  \n      \"stopAtEntry\": true,\n      \"stopAtConnect\": true,\n  \n      \"MIMode\": \"gdb\",\n      \"miDebuggerPath\": \"/usr/bin/gdb\",\n      \"miDebuggerServerAddress\": \"192.168.122.138:43041\",\n      \"setupCommands\": [{\n        \"description\": \"Enable pretty-printing for gdb\",\n        \"text\": \"-enable-pretty-printing\",\n        \"ignoreFailures\": true\n      }]\n    }]\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThe above example uses the target IP address and port of \u003ccode\u003e 192.168.122.138:43041\u003c/code\u003e. This will need to be changed to match your configuration, or to \u003ccode\u003elocalhost:port\u003c/code\u003e to debug a snap with VS Code locally.  Similarly, the \u003ccode\u003e\u0026lt;executable\u0026gt;\u003c/code\u003e path needs to point at the executable from the snap you wish to debug.\u003c/p\u003e\n\u003cp\u003eSave the file and set some breakpoints in the code before returnin to the \u003cem\u003eRun and Debug\u003c/em\u003e window. You should now see the option to run the new \u003ccode\u003eRemote gdb\u003c/code\u003e configuration:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://assets.ubuntu.com/v1/d9434881-vscode_02.png\" alt=\"VS Code run remote GDB\" width=\"557\" height=\"267\"\u003e\u003c/p\u003e\n\u003cp\u003ePress the small \u003cem\u003eplay\u003c/em\u003e icon to connect to an already running snap gdbserver. You can now debug a running snap just as you would a normally built executable.\u003c/p\u003e\n\u003cp\u003e\u003cdiv class=\"lightbox-wrapper\"\u003e\u003ca class=\"lightbox\" href=\"https://assets.ubuntu.com/v1/430a49e2-vscode_03.png\" title=\"VS Code debugging a snap\"\u003e\u003cimg src=\"https://assets.ubuntu.com/v1/430a49e2-vscode_03.png\" alt=\"VS Code debugging a snap\" width=\"625\" height=\"500\"\u003e\u003cdiv class=\"meta\"\u003e\u003csvg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"\u003e\u003cuse xlink:href=\"#far-image\"\u003e\u003c/use\u003e\u003c/svg\u003e\u003cspan class=\"filename\"\u003eVS Code debugging a snap\u003c/span\u003e\u003cspan class=\"informations\"\u003e1056×844\u003c/span\u003e\u003csvg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"\u003e\u003cuse xlink:href=\"#discourse-expand\"\u003e\u003c/use\u003e\u003c/svg\u003e\u003c/div\u003e\u003c/a\u003e\u003c/div\u003e\u003c/p\u003e","post_number":1,"post_type":1,"updated_at":"2023-05-17T16:42:23.050Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":152,"reads":26,"readers_count":25,"score":770.2,"yours":false,"topic_id":20718,"topic_slug":"using-gdb-and-gdbserver","display_username":"Graham Morrison","primary_group_name":null,"primary_group_flair_url":null,"primary_group_flair_bg_color":null,"primary_group_flair_color":null,"version":10,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"link_counts":[{"url":"https://forum.snapcraft.io/t/the-cmake-plugin/8621","internal":true,"reflection":false,"title":"The cmake plugin","clicks":4},{"url":"https://forum.snapcraft.io/t/collecting-debug-symbols/7017","internal":true,"reflection":false,"title":"Collecting debug symbols","clicks":2},{"url":"https://forum.snapcraft.io/t/debugging-snaps/18420","internal":true,"reflection":false,"title":"Debugging snaps","clicks":2},{"url":"https://sourceware.org/gdb/current/onlinedocs/gdb/Sample-Session.html#Sample-Session","internal":false,"reflection":false,"clicks":2},{"url":"https://forum.snapcraft.io/t/snap-confinement/6233","internal":true,"reflection":false,"title":"Snap confinement","clicks":0},{"url":"https://code.visualstudio.com/","internal":false,"reflection":false,"clicks":0},{"url":"https://sourceware.org/gdb/current/onlinedocs/gdb/","internal":false,"reflection":false,"clicks":0},{"url":"https://assets.ubuntu.com/v1/430a49e2-vscode_03.png","internal":false,"reflection":false,"title":"430a49e2-vscode_03.png","clicks":0},{"url":"https://forum.snapcraft.io/t/whats-new/20117","internal":true,"reflection":true,"title":"What's new","clicks":0},{"url":"https://forum.snapcraft.io/t/new-experimental-snap-run-experimental-gdbserver-option/18227/4","internal":true,"reflection":true,"title":"New experimental \"snap run --experimental-gdbserver\" option","clicks":0},{"url":"https://forum.snapcraft.io/t/snap-documentation/11127","internal":true,"reflection":true,"title":"Snap documentation","clicks":0}],"read":true,"user_title":null,"bookmarked":false,"actions_summary":[{"id":2,"count":1}],"moderator":true,"admin":true,"staff":true,"user_id":2772,"hidden":false,"trust_level":4,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":true,"last_wiki_edit":"2023-05-17T16:42:23.076Z","can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":81096,"name":"Maciej Borzecki","username":"mborzecki","avatar_template":"/user_avatar/forum.snapcraft.io/mborzecki/{size}/4382_2.png","created_at":"2020-10-23T12:07:14.857Z","cooked":"\u003cp\u003eThis looks really nice. A couple of tips worth adding:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eyou can pass \u003ccode\u003e--experimental-gdbserver=\":\u0026lt;my-port\u0026gt;\"\u003c/code\u003e to keep the port from changing on each run\u003c/li\u003e\n\u003cli\u003ein theory you can debug over network, make sure that firewall is disabled or the relevant ports are open, execute:\u003cbr\u003e\n\u003ccode\u003esnap run --experimental-gdbserver=\"\u0026lt;some-ip\u0026gt;:\u0026lt;port\u0026gt;\"\u003c/code\u003e\u003cbr\u003e\nand then from another host run:\u003cbr\u003e\n\u003ccode\u003egdb -ex=\"target remote \u0026lt;some-ip\u0026gt;:\u0026lt;port\u0026gt;\" ..\u003c/code\u003e and proceed as usual\u003c/li\u003e\n\u003c/ul\u003e","post_number":2,"post_type":1,"updated_at":"2020-10-23T12:07:14.857Z","reply_count":1,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":0,"reads":20,"readers_count":19,"score":69.0,"yours":false,"topic_id":20718,"topic_slug":"using-gdb-and-gdbserver","display_username":"Maciej Borzecki","primary_group_name":null,"primary_group_flair_url":null,"primary_group_flair_bg_color":null,"primary_group_flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[{"id":2,"count":2}],"moderator":false,"admin":false,"staff":false,"user_id":1497,"hidden":false,"trust_level":3,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":81101,"name":"Graham Morrison","username":"degville","avatar_template":"/user_avatar/forum.snapcraft.io/degville/{size}/2021_2.png","created_at":"2020-10-23T13:23:04.525Z","cooked":"\u003cp\u003eThanks for the tips! I’ve incorporated them into the documentation!\u003c/p\u003e","post_number":3,"post_type":1,"updated_at":"2020-10-23T13:23:04.525Z","reply_count":0,"reply_to_post_number":2,"quote_count":0,"incoming_link_count":0,"reads":18,"readers_count":17,"score":3.6,"yours":false,"topic_id":20718,"topic_slug":"using-gdb-and-gdbserver","display_username":"Graham Morrison","primary_group_name":null,"primary_group_flair_url":null,"primary_group_flair_bg_color":null,"primary_group_flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"reply_to_user":{"username":"mborzecki","avatar_template":"/user_avatar/forum.snapcraft.io/mborzecki/{size}/4382_2.png"},"bookmarked":false,"actions_summary":[],"moderator":true,"admin":true,"staff":true,"user_id":2772,"hidden":false,"trust_level":4,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false}],"stream":[81094,81096,81101]},"timeline_lookup":[[1,966]],"suggested_topics":[{"id":34548,"title":"ROS distributions with no extensions","fancy_title":"ROS distributions with no extensions","slug":"ros-distributions-with-no-extensions","posts_count":3,"reply_count":1,"highest_post_number":3,"image_url":null,"created_at":"2023-03-30T20:47:55.438Z","last_posted_at":"2023-03-31T14:22:33.616Z","bumped":true,"bumped_at":"2023-03-31T14:22:33.616Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags":[],"like_count":0,"views":398,"category_id":15,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":null,"description":"Original Poster","user":{"id":13647,"username":"giusebar18","name":"","avatar_template":"/letter_avatar/giusebar18/{size}/5_6d6f4cde2641c35611d5cac2fb97c77e.png"}},{"extras":"latest","description":"Most Recent Poster","user":{"id":2772,"username":"degville","name":"Graham Morrison","avatar_template":"/user_avatar/forum.snapcraft.io/degville/{size}/2021_2.png"}}]},{"id":35643,"title":"Cross-compile an autotools project","fancy_title":"Cross-compile an autotools project","slug":"cross-compile-an-autotools-project","posts_count":1,"reply_count":0,"highest_post_number":1,"image_url":null,"created_at":"2023-06-15T14:56:04.836Z","last_posted_at":"2023-06-15T14:56:05.012Z","bumped":true,"bumped_at":"2023-06-15T14:56:05.012Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags":["how-to","autotools","cross-compile"],"like_count":0,"views":31,"category_id":15,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest single","description":"Original Poster, Most Recent Poster","user":{"id":14015,"username":"dboddie","name":"David Boddie","avatar_template":"/user_avatar/forum.snapcraft.io/dboddie/{size}/9564_2.png"}}]},{"id":34629,"title":"Release notes: Snapcraft 7.3","fancy_title":"Release notes: Snapcraft 7.3","slug":"release-notes-snapcraft-7-3","posts_count":1,"reply_count":0,"highest_post_number":1,"image_url":null,"created_at":"2023-04-05T17:27:18.665Z","last_posted_at":"2023-04-05T17:27:18.809Z","bumped":true,"bumped_at":"2023-04-05T17:27:18.809Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags":[],"like_count":0,"views":236,"category_id":15,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest single","description":"Original Poster, Most Recent Poster","user":{"id":2772,"username":"degville","name":"Graham Morrison","avatar_template":"/user_avatar/forum.snapcraft.io/degville/{size}/2021_2.png"}}]},{"id":34099,"title":"Set up classic confinement for an autotools project","fancy_title":"Set up classic confinement for an autotools project","slug":"set-up-classic-confinement-for-an-autotools-project","posts_count":3,"reply_count":1,"highest_post_number":3,"image_url":null,"created_at":"2023-02-27T17:10:47.688Z","last_posted_at":"2023-03-29T11:52:25.139Z","bumped":true,"bumped_at":"2023-03-29T11:52:25.139Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags":["how-to"],"like_count":2,"views":807,"category_id":15,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":14015,"username":"dboddie","name":"David Boddie","avatar_template":"/user_avatar/forum.snapcraft.io/dboddie/{size}/9564_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":14252,"username":"zhsj","name":"Shengjing Zhu","avatar_template":"/user_avatar/forum.snapcraft.io/zhsj/{size}/9689_2.png"}}]},{"id":31668,"title":"The posix-mq interface","fancy_title":"The posix-mq interface","slug":"the-posix-mq-interface","posts_count":1,"reply_count":0,"highest_post_number":1,"image_url":null,"created_at":"2022-09-08T12:00:35.327Z","last_posted_at":"2022-09-08T12:00:35.467Z","bumped":true,"bumped_at":"2023-04-14T09:29:21.981Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags":[],"like_count":0,"views":888,"category_id":15,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest single","description":"Original Poster, Most Recent Poster","user":{"id":2772,"username":"degville","name":"Graham Morrison","avatar_template":"/user_avatar/forum.snapcraft.io/degville/{size}/2021_2.png"}}]}],"tags":[],"id":20718,"title":"Using gdb and gdbserver","fancy_title":"Using gdb and gdbserver","posts_count":3,"created_at":"2020-10-23T11:54:46.308Z","views":3337,"reply_count":1,"like_count":3,"last_posted_at":"2020-10-23T13:23:04.525Z","visible":true,"closed":false,"archived":false,"has_summary":false,"archetype":"regular","slug":"using-gdb-and-gdbserver","category_id":15,"word_count":1327,"deleted_at":null,"user_id":2772,"featured_link":null,"pinned_globally":false,"pinned_at":null,"pinned_until":null,"image_url":null,"slow_mode_seconds":0,"draft":null,"draft_key":"topic_20718","draft_sequence":null,"unpinned":null,"pinned":false,"current_post_number":1,"highest_post_number":3,"deleted_by":null,"actions_summary":[{"id":4,"count":0,"hidden":false,"can_act":false},{"id":8,"count":0,"hidden":false,"can_act":false},{"id":7,"count":0,"hidden":false,"can_act":false}],"chunk_size":20,"bookmarked":false,"topic_timer":null,"message_bus_last_id":0,"participant_count":2,"show_read_indicator":false,"thumbnails":null,"details":{"notification_level":1,"participants":[{"id":2772,"username":"degville","name":"Graham Morrison","avatar_template":"/user_avatar/forum.snapcraft.io/degville/{size}/2021_2.png","post_count":2,"primary_group_name":null,"primary_group_flair_url":null,"primary_group_flair_color":null,"primary_group_flair_bg_color":null},{"id":1497,"username":"mborzecki","name":"Maciej Borzecki","avatar_template":"/user_avatar/forum.snapcraft.io/mborzecki/{size}/4382_2.png","post_count":1,"primary_group_name":null,"primary_group_flair_url":null,"primary_group_flair_color":null,"primary_group_flair_bg_color":null}],"created_by":{"id":2772,"username":"degville","name":"Graham Morrison","avatar_template":"/user_avatar/forum.snapcraft.io/degville/{size}/2021_2.png"},"last_poster":{"id":2772,"username":"degville","name":"Graham Morrison","avatar_template":"/user_avatar/forum.snapcraft.io/degville/{size}/2021_2.png"},"links":[{"url":"https://forum.snapcraft.io/t/the-cmake-plugin/8621","title":"The cmake plugin","internal":true,"attachment":false,"reflection":false,"clicks":4,"user_id":2772,"domain":"forum.snapcraft.io","root_domain":"snapcraft.io"},{"url":"https://forum.snapcraft.io/t/collecting-debug-symbols/7017","title":"Collecting debug symbols","internal":true,"attachment":false,"reflection":false,"clicks":2,"user_id":2772,"domain":"forum.snapcraft.io","root_domain":"snapcraft.io"},{"url":"https://forum.snapcraft.io/t/debugging-snaps/18420","title":"Debugging snaps","internal":true,"attachment":false,"reflection":false,"clicks":2,"user_id":2772,"domain":"forum.snapcraft.io","root_domain":"snapcraft.io"},{"url":"https://sourceware.org/gdb/current/onlinedocs/gdb/Sample-Session.html#Sample-Session","title":null,"internal":false,"attachment":false,"reflection":false,"clicks":2,"user_id":2772,"domain":"sourceware.org","root_domain":"sourceware.org"}]}}