{"post_stream":{"posts":[{"id":46025,"name":"Graham Morrison","username":"degville","avatar_template":"/user_avatar/forum.snapcraft.io/degville/{size}/2021_2.png","created_at":"2019-04-02T19:45:00.952Z","cooked":"\u003cp\u003eThese are the release notes for \u003ca href=\"https://github.com/snapcore/snapcraft/releases/tag/3.0\"\u003eSnapcraft 3.0\u003c/a\u003e, a major overhaul of the snap build environment.\u003c/p\u003e\n\u003cp\u003eFor general details, including installation instructions, see \u003ca href=\"/t/snapcraft-overview/8940\"\u003eSnapcraft overview\u003c/a\u003e, or take a look at \u003ca href=\"/t/snapcraft-release-notes/10721\"\u003eSnapcraft release notes\u003c/a\u003e for other \u003cem\u003eSnapcraft\u003c/em\u003e releases.\u003c/p\u003e\n\u003ch2\u003eBuild environments\u003c/h2\u003e\n\u003cp\u003eThis release adds specific build environments for each snapcraft project you work on. These environments are tuned for each project, and ensure both API and ABI compatibility are in place for every binary built within each respective environment.\u003c/p\u003e\n\u003cp\u003eSnapcraft’s build environments leverage a snap architecture feature called \u003ca href=\"/t/base-snaps/11198\"\u003ebases\u003c/a\u003e. At build time, the \u003cem\u003esnapcraft\u003c/em\u003e tool ensures you are creating your applications inside an environment specifically tailored for the specified base.\u003c/p\u003e\n\u003cp\u003eTo make the transition to Snapcraft 3.0 easy, the entire functionality for this new tool behavior is triggered by making use of the \u003ccode\u003ebase\u003c/code\u003e keyword in \u003ccode\u003esnapcraft.yaml\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eSnapcraft 3.0 also remains backwards compatible. This means you can omit the \u003ccode\u003ebase\u003c/code\u003e keyword and continue working as you did previously until you are ready to move to a newer or different stack provided by a different \u003cem\u003ebase\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eThe environment runs in a container, which means it’s isolated from the user during normal operation. However, the following commands enable you to step into this encapsulated environment:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003e--shell\u003c/code\u003e: builds your snap to the \u003ca href=\"/t/parts-lifecycle/12231#heading--steps\"\u003elifecycle step\u003c/a\u003e prior to that specified and opens a shell into the environment (e.g. running \u003ccode\u003esnapcraft prime --shell\u003c/code\u003e will run up to the \u003ccode\u003estage\u003c/code\u003e step and open a shell).\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003e--shell-after\u003c/code\u003e: builds your snap to the \u003ca href=\"/t/parts-lifecycle/12231#heading--steps\"\u003elifecycle step\u003c/a\u003e specified and opens a shell into the environment. (eg. running \u003ccode\u003esnapcraft prime --shell-after\u003c/code\u003e will run up to the \u003ccode\u003eprime\u003c/code\u003e step and then drop into a shell).\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003e--debug\u003c/code\u003e, opens a shell inside the environment after an error occur.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThe below video shows an example of how the system behaves with the new functionality in place:\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://asciinema.org/a/t547f0ItBy6pW3kCSLxdV0JVL\"\u003e\u003cimg src=\"https://camo.githubusercontent.com/e31b1f2e1d5512c3fc67993c17630e0ce7f945d4/68747470733a2f2f61736369696e656d612e6f72672f612f74353437663049744279367057336b43534c786456304a564c2e737667\" alt=\"asciicast\" width=\"644\" height=\"499\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003ch2\u003emacOS support\u003c/h2\u003e\n\u003cp\u003eWith this release of Snapcraft 3.0, we are happy to announce support for macOS via \u003ca href=\"https://formulae.brew.sh/formula/snapcraft\"\u003eHomebrew\u003c/a\u003e. Moreover, the experience is transparent thanks to the use of build environments and its underlying technology.\u003c/p\u003e\n\u003cp\u003eSee \u003ca href=\"/t/installing-snapcraft/20334#heading--macos\"\u003eInstall snapcraft on macOS\u003c/a\u003e for further details.\u003c/p\u003e\n\u003ch3 id=\"heading--base-exceptions\"\u003eFeatures incompatible with bases\u003c/h3\u003e\n\u003cp\u003eWhen using the \u003ccode\u003ebase\u003c/code\u003e keyword in \u003ccode\u003esnapcraft.yaml\u003c/code\u003e the following (long deprecated) features become unavailable:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cem\u003ewiki parts\u003c/em\u003e, and their quirks in the code base, that enabled specific corner cases, such as allowing \u003ccode\u003e/\u003c/code\u003e in parts.\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003esnapcraft cleanbuild\u003c/code\u003e and triggering builds with LXD in certain environment variables.\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eprepare\u003c/code\u003e, \u003ccode\u003ebuild\u003c/code\u003e and \u003ccode\u003einstall\u003c/code\u003e in parts. These have been replaced by \u003ccode\u003eoverride-build\u003c/code\u003e and \u003ccode\u003esnapcraftctl\u003c/code\u003e. These offer \u003ccode\u003eoverride-\u003c/code\u003e for \u003ccode\u003epull\u003c/code\u003e, \u003ccode\u003estage\u003c/code\u003e and \u003ccode\u003eprime\u003c/code\u003e too.\u003c/li\u003e\n\u003cli\u003eThe \u003ccode\u003esnap\u003c/code\u003e keyword has been superseded by the \u003ccode\u003eprime\u003c/code\u003e keyword.\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003e--disable-parallel-build\u003c/code\u003e is no longer available when calling build commands through \u003cem\u003esnapcraft\u003c/em\u003e. It can be setup, per part, using the \u003ccode\u003ebuild-attributes\u003c/code\u003e property.\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003e--use-geoip\u003c/code\u003e is no longer available when calling build commands through \u003cem\u003esnapcraft\u003c/em\u003e. This affected \u003ccode\u003estage-packages\u003c/code\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eIn addition to the above, the following plugins also become unavailable when using the \u003ccode\u003ebase\u003c/code\u003e keyword:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003etar-content\u003c/code\u003e, superseded by the \u003ccode\u003edump\u003c/code\u003e plugin.\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003ecopy\u003c/code\u003e, superseded by the \u003ccode\u003edump\u003c/code\u003e plugin.\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003ejhbuild\u003c/code\u003e, it has too many dependencies against \u003ccode\u003ecore\u003c/code\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eNew \u003cem\u003ecore\u003c/em\u003e features\u003c/h2\u003e\n\u003cp\u003eThe following are new when using \u003ccode\u003ebase\u003c/code\u003e:\u003c/p\u003e\n\u003ch3\u003eLicense\u003c/h3\u003e\n\u003cp\u003eA snap’s license can now be defined using the new \u003cem\u003elicense\u003c/em\u003e keyword and a \u003ca href=\"https://spdx.org/licenses/\"\u003eSPDX 2.0 format\u003c/a\u003e value within \u003cem\u003esnapcraft.yaml\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eValidation of the license syntax is done using \u003ccode\u003esnap pack\u003c/code\u003e schema validation to ensure consistency across the snap ecosystem.\u003c/p\u003e\n\u003ch3\u003eWrapperless-snaps\u003c/h3\u003e\n\u003cp\u003eWhen originally introduced, \u003cem\u003ewrappers\u003c/em\u003e were useful when setting up the environment appropriately. However, the runtime architecture has now evolved in such a way that wrappers no longer make sense.\u003c/p\u003e\n\u003cp\u003eAlthough it is not the default today, the intention is to make the \u003ccode\u003eadapter\u003c/code\u003e value (\u003ccode\u003efull\u003c/code\u003e) the default behaviour. The advantage with this design is that when entering a shell through \u003ccode\u003esnap run --shell\u003c/code\u003e, the environment would be properly loaded through use of \u003ccode\u003ecommand-chain\u003c/code\u003e entries in \u003ccode\u003esnap.yaml\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eThe recording below shows how the original \u003ccode\u003ecommand\u003c/code\u003e, defined in \u003ccode\u003esnapcraft.yaml\u003c/code\u003e, is still the \u003ccode\u003ecommand\u003c/code\u003ethat makes it to \u003ccode\u003esnap.yaml\u003c/code\u003e (and the \u003ccode\u003ecommand-chain\u003c/code\u003e feature is used instead):\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://asciinema.org/a/tq8D2RhEXbsNYkVDVz5EzYDH0\"\u003e\u003cimg src=\"https://camo.githubusercontent.com/d59f96e630f91f32d4ba690af9238717ad3aeaed/68747470733a2f2f61736369696e656d612e6f72672f612f74713844325268455862734e596b5644567a35457a594448302e737667\" alt=\"asciicast\" width=\"644\" height=\"499\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003ch3 id=\"heading--extensions\"\u003eExtensions\u003c/h3\u003e\n\u003cp\u003eThe architecture and framework has been cemented into the \u003ccode\u003esnapcraft\u003c/code\u003e tool to help \u003cem\u003esnapcraft.yaml\u003c/em\u003e grow declarative* functionality we’re calling \u003cem\u003eExtensions\u003c/em\u003e. We have done this to avoid repetitive tasks, and to avoid snap builders needing deep knowledge of a target software stack.\u003c/p\u003e\n\u003cp\u003eExtensions have the unique property of being applied to \u003ccode\u003esnapcraft.yaml\u003c/code\u003e itself, where they can be expanded upon and, potentially, used in lieu of the extension itself. This would allow for project-specific modifications of the extension.\u003c/p\u003e\n\u003cp\u003eYou can interact with extensions using the following new commands:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003elist-extensions\u003c/code\u003e, to view the available extensions.\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eextension\u003c/code\u003e, to show information about the extension.\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eexpand-extensions\u003c/code\u003e, to display how the \u003ccode\u003esnapcraft.yaml\u003c/code\u003e will look like with the extensions applied.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLifecycle cleaning\u003c/h3\u003e\n\u003cp\u003ePrior to Snapcraft 3.0, you needed to manually clean any \u003cem\u003epart\u003c/em\u003e that was found to be dirty due to modifications in the code itself, or because modifications had been made to the \u003cem\u003epart\u003c/em\u003e definition in \u003ccode\u003esnapcraft.yaml\u003c/code\u003e. This become an unnecessary burden for developers.\u003c/p\u003e\n\u003cp\u003eThe default action for \u003cem\u003esnapcraft\u003c/em\u003e to now rebuild parts, either by re-running a lifecycle step without cleaning, for plugins that allow for it (through their underlying architecture), or automatically cleaning and re-running the necessary lifecycle steps for that part.\u003c/p\u003e\n\u003cp\u003eYou can see this in action below:\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://asciinema.org/a/l3gN5QyQy3Dgq0KzP52SdNv1q\"\u003e\u003cimg src=\"https://camo.githubusercontent.com/4309e0614246524ff2bff73ea44170bb83bc2935/68747470733a2f2f61736369696e656d612e6f72672f612f6c33674e355179517933446771304b7a50353253644e7631712e737667\" alt=\"asciicast\" width=\"644\" height=\"499\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003ch3\u003eImplicit source\u003c/h3\u003e\n\u003cp\u003ePreviously, if a part did not specify a source, an implicit default source of \u003ccode\u003e.\u003c/code\u003e was set by default. This caused considerable confusion.\u003c/p\u003e\n\u003cp\u003eStarting with Snapcraft 3.0, if a plugins requires a source to be specified, it will be required through the schema and an appropriate error message will be generated.\u003c/p\u003e\n\u003cp\u003eFor plugins where a source isn’t a requirement, such as \u003ccode\u003enil\u003c/code\u003e, no action will be taken and no default will be set.\u003c/p\u003e\n\u003ch2\u003ePlugins\u003c/h2\u003e\n\u003cp\u003eWith the exception of deprecated and removed plugins, the majority of plugins have been reworked to be \u003ccode\u003ebase\u003c/code\u003e aware.\u003c/p\u003e\n\u003cp\u003eSince the declaration of the \u003ccode\u003ebase\u003c/code\u003e keyword is done manually by the user, some plugins have introduced semantic changes for how they operate.\u003c/p\u003e\n\u003cp\u003eBelow is the set of plugins with interesting changes and new properties available to the user:\u003c/p\u003e\n\u003ch3\u003eant\u003c/h3\u003e\n\u003cp\u003eThese are the properties the \u003ccode\u003eant\u003c/code\u003e plugin now operates with:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e    - ant-properties:\n      (object)\n      A dictionary of key-value pairs. Set the following properties when\n      running ant.\n\n    - ant-build-targets:\n      (list of strings)\n      Run the given ant targets.\n\n    - ant-version:\n      (string)\n      The version of ant you want to use to build the source artifacts.\n      Defaults to the current release downloadable from\n      https://archive.apache.org/dist/ant/binaries/.\n\n    - ant-version-checksum:\n      (string)\n      The checksum for ant-version in the form of \u0026lt;digest-type\u0026gt;/\u0026lt;digest\u0026gt;.\n      As an example \"sha512/2a803f578f341e164f6753e410413d16ab60fab...\".\n\n    - ant-openjdk-version:\n      (string)\n      openjdk version available to the base to use. If not set the latest\n      version available to the base will be used.\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3\u003e\u003ccode\u003ecatkin\u003c/code\u003e\u003c/h3\u003e\n\u003cp\u003eThese are the properties the \u003ccode\u003ecatkin\u003c/code\u003e plugin now operates with:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e    - catkin-packages:\n      (list of strings)\n      List of catkin packages to build.\n    - source-space:\n      (string)\n      The source space containing Catkin packages. By default this is 'src'.\n    - include-roscore:\n      (boolean)\n      Whether or not to include roscore with the part. Defaults to true.\n    - rosinstall-files:\n      (list of strings)\n      List of rosinstall files to merge while pulling. Paths are relative to\n      the source.\n    - recursive-rosinstall:\n      (boolean)\n      Whether or not to recursively merge/update rosinstall files from fetched\n      sources. Will continue until all rosinstall files have been merged.\n      Defaults to false.\n    - catkin-cmake-args:\n      (list of strings)\n      Configure flags to pass onto the cmake invocation from catkin.\n    - underlay:\n      (object)\n      Used to inform Snapcraft that this snap isn't standalone, and is actually\n      overlaying a workspace from another snap via content sharing. Made up of\n      two properties:\n      - build-path:\n        (string)\n        Build-time path to existing workspace to underlay the one being built,\n        for example '$SNAPCRAFT_STAGE/opt/ros/kinetic'.\n      - run-path:\n        (string)\n        Run-time path of the underlay workspace (e.g. a subdirectory of the\n        content interface's 'target' attribute.)\n    - catkin-ros-master-uri:\n      (string)\n      The URI to ros master setting the env variable ROS_MASTER_URI. Defaults\n      to http://localhost:11311.\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3\u003e\u003ccode\u003ego\u003c/code\u003e\u003c/h3\u003e\n\u003cp\u003eThese are the properties the \u003ccode\u003ego\u003c/code\u003e plugin now operates with:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e    - go-channel:\n      (string, default: latest/stable)\n      The Snap Store channel to install go from. If set to an empty string,\n      go will be installed using the system's traditional package manager.\n\n    - go-packages:\n      (list of strings)\n      Go packages to fetch, these must be a \"main\" package. Dependencies\n      are pulled in automatically by `go get`.\n      Packages that are not \"main\" will not cause an error, but would\n      not be useful either.\n      If the package is a part of the go-importpath the local package\n      corresponding to those sources will be used.\n\n    - go-importpath:\n      (string)\n      This entry tells the checked out `source` to live within a certain path\n      within `GOPATH`.\n      This is not needed and does not affect `go-packages`.\n\n    - go-buildtags:\n      (list of strings)\n      Tags to use during the go build. Default is not to use any build tags.\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3\u003e\u003ccode\u003egodeps\u003c/code\u003e\u003c/h3\u003e\n\u003cp\u003eThese are the properties the \u003ccode\u003egodeps\u003c/code\u003e plugin now operates with:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e    - go-channel:\n      (string, default: latest/stable)\n      The Snap Store channel to install go from. If set to an empty string,\n      go will be installed using the system's traditional package manager.\n\n    - go-packages:\n      (list of strings)\n      Go packages to build/install, these must be a \"main\" package.\n      Dependencies should have already been retrieved by the `godeps-file`\n      used for this part.\n      Packages that are not \"main\" will not cause an error, but would\n      not be useful either.\n\n    - godeps-file:\n      (string)\n      Path to the godeps dependencies file contained within the source\n      (default: dependencies.tsv)\n\n    - go-importpath:\n      (string)\n      This entry tells the checked out `source` to live within a certain path\n      within `GOPATH`. This is required in order to work with absolute imports\n      and import path checking.\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3\u003e\u003ccode\u003egradle\u003c/code\u003e\u003c/h3\u003e\n\u003cp\u003eThese are the properties the \u003ccode\u003egradle\u003c/code\u003e plugin now operates with:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e    - gradle-options:\n      (list of strings)\n      Flags to pass to the build using the gradle semantics for parameters.\n      The 'jar' option is always passed in as the last parameter.\n\n    - gradle-output-dir:\n      (string; default: 'build/libs')\n      The output directory where the resulting jar or war files from gradle[w]\n      are generated.\n\n    - gradle-version:\n      (string)\n      The version of gradle you want to use to build the source artifacts.\n      Defaults to the current release downloadable from\n      https://services.gradle.org/distributions/\n      The entry is ignored if gradlew is found.\n\n    - gradle-version-checksum:\n      (string)\n      The checksum for gradle-version in the form of \u0026lt;digest-type\u0026gt;/\u0026lt;digest\u0026gt;.\n      As an example \"sha512/2a803f578f341e164f6753e410413d16ab60fab...\".\n\n    - gradle-openjdk-version:\n      (string)\n      openjdk version available to the base to use. If not set the latest\n      version available to the base will be used.\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3\u003e\u003ccode\u003emeson\u003c/code\u003e\u003c/h3\u003e\n\u003cp\u003eThese are the properties the \u003ccode\u003emeson\u003c/code\u003e plugin now operates with:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e    - meson-version:\n      (string)\n      The version of meson to install from PyPI.\n      If unspecified, the latest released version of meson will be used.\n    - meson-parameters:\n      (list of strings)\n      Pass the given parameters to the meson command.\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3\u003e\u003ccode\u003enodejs\u003c/code\u003e\u003c/h3\u003e\n\u003cp\u003eThese are the properties the \u003ccode\u003enodejs\u003c/code\u003e plugin now operates with:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e    - nodejs-version:\n      (string)\n      The version of nodejs you want the snap to run on.\n      This includes npm, as would be downloaded from https://nodejs.org\n      Defaults to the current LTS release.\n\n    - nodejs-package-manager\n      (string; default: yarn)\n      The language package manager to use to drive installation\n      of node packages. Can be either `npm` or `yarn` (default).\n\n    - nodejs-yarn-version:\n      (string)\n      Applicable when using yarn. Defaults to the latest if not set.\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3\u003e\u003ccode\u003epython\u003c/code\u003e\u003c/h3\u003e\n\u003cp\u003eThese are the properties the \u003ccode\u003epython\u003c/code\u003e plugin now operates with:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e    - requirements:\n      (list of strings)\n      List of paths to requirements files.\n\n    - constraints:\n      (list of strings)\n      List of paths to constraint files.\n\n    - process-dependency-links:\n      (bool; default: false)\n      Enable the processing of dependency links in pip, which allow one\n      project to provide places to look for another project\n\n    - python-packages:\n      (list)\n      A list of dependencies to get from PyPI\n\n    - python-version:\n      (string; default: python3)\n      The python version to use. Valid options are: python2 and python3\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2\u003eFull list of changes\u003c/h2\u003e\n\u003cp\u003eThe issues and features worked on for 3.0 can be seen on the \u003ca href=\"https://launchpad.net/snapcraft/+milestone/3.0\"\u003e3.0 launchpad milestone\u003c/a\u003e which are reflected in the following change list:\u003c/p\u003e\n\u003cdetails\u003e\n\u003csummary\u003e\nList of changes for Snapcraft 3.0\u003c/summary\u003e\n\u003cul\u003e\n\u003cli\u003esnap: add the https transport (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2244\"\u003e#2244\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003ebuild providers: environment setup for projects (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2225\"\u003e#2225\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003ebuild providers: provide support to shell in (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2249\"\u003e#2249\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003ebuild providers: shell in provider if debug is used (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2252\"\u003e#2252\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003ebuild-providers: add support for --shell-after (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2253\"\u003e#2253\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003ebuild providers: add support for --shell (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2254\"\u003e#2254\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003ebuild providers: snapcraft images for multipass (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2258\"\u003e#2258\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003ebuild providers: allow setting ram and disk size (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2260\"\u003e#2260\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003ebuild providers: inject the base for classic (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2261\"\u003e#2261\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003ebuild providers: allow snapcraft channel selection (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2265\"\u003e#2265\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003ebuild providers: refresh packages on bring up (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2267\"\u003e#2267\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003ebuild providers: let the implementor pick the image (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2269\"\u003e#2269\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003ereporting: fail gracefully on submit errors (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2271\"\u003e#2271\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003emeta: friendlier message for incorrect app command (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2272\"\u003e#2272\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003esnap: use a newer PyYAML and drop patches (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2274\"\u003e#2274\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003ebuild providers: use the best CPU configuration (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2273\"\u003e#2273\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003ebuild providers: use the provider if exported (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2275\"\u003e#2275\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003esnap: move to a newer pysha3 (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2277\"\u003e#2277\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003espread: move legacy wiki tests to spread (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2276\"\u003e#2276\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003esnap: pull early (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2278\"\u003e#2278\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003ebuild providers: re-exec as root (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2281\"\u003e#2281\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003ebuild providers: cleaner start and launch messaging (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2282\"\u003e#2282\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003ebuild providers: make use of time for multipass stop (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2284\"\u003e#2284\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003emeta: support relocatable prime for path verification (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2287\"\u003e#2287\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003ebuild providers: use multipass automatically when on darwin (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2288\"\u003e#2288\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003esnap: workaround the dirty tree (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2294\"\u003e#2294\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003etests: use SNAPCRAFT_PACKAGE_TYPE everywhere (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2295\"\u003e#2295\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003etests: move most tests to spread and reorder travis.yaml (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2301\"\u003e#2301\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003esnap: improve early base detection logic (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2309\"\u003e#2309\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003emeta: link the icon correctly across filesystems (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2313\"\u003e#2313\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003eproject loader: remove remote parts support for bases (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2304\"\u003e#2304\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003etests: use mocked plugins for list-plugins (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2315\"\u003e#2315\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003etests: add spread suite for plainbox plugin (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2317\"\u003e#2317\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003eplugins: remove the tar-content plugin when using a base (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2319\"\u003e#2319\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003eplugins: remove the copy plugin when using a base (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2308\"\u003e#2308\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003emeta: add support for the license field (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2318\"\u003e#2318\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003ebuild providers: use the new snapcraft: remote for multipass (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2293\"\u003e#2293\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003eplugins: remove the python2 and python3 plugin when using a base (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2325\"\u003e#2325\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003eplugins: remove the ament plugin when using a base (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2324\"\u003e#2324\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003eplugins: remove implicit source (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2326\"\u003e#2326\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003ego plugin: support for bases (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2323\"\u003e#2323\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003epluginhandler: remove legacy plugin loading without project (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2329\"\u003e#2329\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003egodeps plugin: support for bases (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2328\"\u003e#2328\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003epluginhandler: remove big solidus workaround (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2330\"\u003e#2330\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003epluginhandler: remove prepare, build and install scriptlets (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2327\"\u003e#2327\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003ewaf plugin: support for bases (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2332\"\u003e#2332\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003emeson plugin: add support for bases (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2331\"\u003e#2331\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003elifecycle: remove lxd support for bases (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2335\"\u003e#2335\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003etests: remove dependency on snapcraft for integration tests (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2353\"\u003e#2353\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003eschema: enfore string for versions (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2334\"\u003e#2334\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003elifecycle: switch to multipass by default (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2339\"\u003e#2339\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003eschema: remove the deprecated snap keyword for bases (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2344\"\u003e#2344\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003etests: use valid snap names in unit tests (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2352\"\u003e#2352\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003escons plugin: add support for bases (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2357\"\u003e#2357\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003enodejs plugin: add support for bases (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2356\"\u003e#2356\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003epluginhandler: library detection instead of injection (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2337\"\u003e#2337\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003edotnet plugin: add support for bases (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2358\"\u003e#2358\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003eschema: remove deprecated plugin pull and build-properties (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2361\"\u003e#2361\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003eplainbox-provider plugin: add support for bases (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2360\"\u003e#2360\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003emultipass: change default CPU value (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2365\"\u003e#2365\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003epython plugin: add support for bases (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2362\"\u003e#2362\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003emaven plugin: add support for bases (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2364\"\u003e#2364\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003egradle plugin: add support for bases (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2372\"\u003e#2372\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003eant plugin: add support for bases (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2370\"\u003e#2370\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003ejdk plugin: remove jdk (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2376\"\u003e#2376\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003ebuild providers: destroy on create failures (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2374\"\u003e#2374\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003ecli: remove disable-parallel-build and geoip toggles (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2377\"\u003e#2377\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003eyaml loading: properly handle unhashable types (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2247\"\u003e#2247\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003epluginhandler: stop using alias for snapcraftctl (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2251\"\u003e#2251\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003elocal source: don’t include .snapcraft directory (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2256\"\u003e#2256\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003emeta: take charge of environment used to run commands (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2257\"\u003e#2257\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003ecli: show trace if no tty (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2259\"\u003e#2259\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003ecatkin plugin: use SnapcraftException (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2255\"\u003e#2255\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003eproject_loader: add preflight check (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2250\"\u003e#2250\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003eproject: catch parent YAML exceptions (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2263\"\u003e#2263\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003etests: disable integration tests using snaps in bionic container (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2266\"\u003e#2266\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003ecatkin, rosdep: stop using FileNotFoundErrors (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2270\"\u003e#2270\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003ecoherence checks: allow snap/local dir (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2268\"\u003e#2268\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003ecoherence checks: run properly on build VMs (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2279\"\u003e#2279\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003esnapcraft snap: refactor override-build into a script (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2283\"\u003e#2283\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003econfig: change default outdated action to clean (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2286\"\u003e#2286\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003esnapcraft snap: vendor legacy snapcraft (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2285\"\u003e#2285\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003eschema: add “legacy” adapter type (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2262\"\u003e#2262\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003esources: properly handle pull failures (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2292\"\u003e#2292\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003epackaging: pin click to v6 in requirements.txt (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2298\"\u003e#2298\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003emeta: put environment into runner instead of app wrapper (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2291\"\u003e#2291\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003epart grammar processor: lazily capture attributes from plugin (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2296\"\u003e#2296\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003epluginhandler: update build should overwrite organize (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2290\"\u003e#2290\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003erequirements.txt: stop using pymacaroons-pynacl (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2302\"\u003e#2302\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003eproject_loader: add build-environment part property (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2322\"\u003e#2322\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003ecatkin, catkin-tools plugins: add support for bases (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2333\"\u003e#2333\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003eschema, meta: support layout (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2338\"\u003e#2338\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003eschema, meta: support app command-chain (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2341\"\u003e#2341\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003eschema, meta: add “full” app adapter (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2343\"\u003e#2343\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003eruby plugin: add support for base (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2346\"\u003e#2346\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003eextensions: support adding root properties (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2347\"\u003e#2347\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003eextensions: remove root extensions (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2348\"\u003e#2348\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003eextensions: use extension docstring (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2349\"\u003e#2349\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003eextensions: parse all declared extensions before applying (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2350\"\u003e#2350\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003eextensions: cleanup and generic tests (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2355\"\u003e#2355\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003e{make,cmake,autotools} plugin: add support for bases (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2363\"\u003e#2363\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003eqmake plugin: add support for bases (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2366\"\u003e#2366\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003e{kbuild,kernel} plugin: add support for bases (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2368\"\u003e#2368\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003etests: add spread test exercising multipass build VMs (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2367\"\u003e#2367\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003eplugins: remove jhbuild (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2371\"\u003e#2371\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003erust plugin: add support for bases (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2373\"\u003e#2373\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003ecoherence checks: verify that command-chain is not used with legacy adapter (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2375\"\u003e#2375\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003ecli: use the better \u003ca href=\"http://snapcraft.io/account\"\u003esnapcraft.io/account\u003c/a\u003e URL (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2280\"\u003e#2280\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003estoreapi: use structured data for the conflicted current value (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2316\"\u003e#2316\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003erust plugin: do not ignore the cross compile target (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2264\"\u003e#2264\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003enodejs plugin: add support for ppc64el and s390x (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2310\"\u003e#2310\u003c/a\u003e) (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2310\"\u003e#2310\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003enodejs plugin: update to the latest 8.x LTS version (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2342\"\u003e#2342\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003eyaml: replace yaml.safe_load() with CSafeLoader (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2218\"\u003e#2218\u003c/a\u003e)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/details\u003e","post_number":1,"post_type":1,"updated_at":"2021-12-08T18:00:28.679Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":238,"reads":49,"readers_count":48,"score":1214.8,"yours":false,"topic_id":10704,"topic_slug":"release-notes-snapcraft-3-0","display_username":"Graham Morrison","primary_group_name":null,"primary_group_flair_url":null,"primary_group_flair_bg_color":null,"primary_group_flair_color":null,"version":7,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"link_counts":[{"url":"https://github.com/snapcore/snapcraft/releases/tag/3.0","internal":false,"reflection":false,"title":"Release Presenting snapcraft 3.0 · snapcore/snapcraft · GitHub","clicks":22},{"url":"https://asciinema.org/a/t547f0ItBy6pW3kCSLxdV0JVL","internal":false,"reflection":false,"clicks":19},{"url":"https://asciinema.org/a/tq8D2RhEXbsNYkVDVz5EzYDH0","internal":false,"reflection":false,"clicks":13},{"url":"https://asciinema.org/a/l3gN5QyQy3Dgq0KzP52SdNv1q","internal":false,"reflection":false,"clicks":5},{"url":"https://spdx.org/licenses/","internal":false,"reflection":false,"clicks":5},{"url":"https://launchpad.net/snapcraft/+milestone/3.0","internal":false,"reflection":false,"clicks":4},{"url":"https://forum.snapcraft.io/t/snapcraft-overview/8940","internal":true,"reflection":false,"title":"Snapcraft overview","clicks":3},{"url":"https://forum.snapcraft.io/t/base-snaps/11198","internal":true,"reflection":false,"title":"Base snaps","clicks":2},{"url":"https://forum.snapcraft.io/t/parts-lifecycle/12231","internal":true,"reflection":false,"title":"Parts lifecycle","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2350","internal":false,"reflection":false,"title":"extensions: parse all declared extensions before applying by kyrofa · Pull Request #2350 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2363","internal":false,"reflection":false,"title":"{make,cmake,autotools} plugin: add support for bases by kyrofa · Pull Request #2363 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2280","internal":false,"reflection":false,"title":"Use the better snapcraft.io/account URL by evandandrea · Pull Request #2280 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2316","internal":false,"reflection":false,"clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2264","internal":false,"reflection":false,"clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2218","internal":false,"reflection":false,"clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2310","internal":false,"reflection":false,"title":"nodejs plugin: add support for ppc64el and s390x by anthonyfok · Pull Request #2310 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2342","internal":false,"reflection":false,"title":"nodejs plugin: update to the latest 8.x LTS version by anthonyfok · Pull Request #2342 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2355","internal":false,"reflection":false,"title":"extensions: cleanup and generic tests by kyrofa · Pull Request #2355 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://forum.snapcraft.io/t/installing-snapcraft/20334","internal":true,"reflection":false,"title":"Installing snapcraft","clicks":0},{"url":"https://formulae.brew.sh/formula/snapcraft","internal":false,"reflection":false,"title":"snapcraft — Homebrew Formulae","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2254","internal":false,"reflection":false,"clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2249","internal":false,"reflection":false,"title":"build providers: provide support to shell in by sergiusens · Pull Request #2249 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2225","internal":false,"reflection":false,"clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2269","internal":false,"reflection":false,"clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2261","internal":false,"reflection":false,"clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2253","internal":false,"reflection":false,"clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2272","internal":false,"reflection":false,"clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2260","internal":false,"reflection":false,"clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2258","internal":false,"reflection":false,"clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2252","internal":false,"reflection":false,"clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2274","internal":false,"reflection":false,"title":"snap: use a newer PyYAML and drop patches by sergiusens · Pull Request #2274 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2275","internal":false,"reflection":false,"clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2277","internal":false,"reflection":false,"clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2276","internal":false,"reflection":false,"clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2278","internal":false,"reflection":false,"title":"snap: pull early by sergiusens · Pull Request #2278 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2281","internal":false,"reflection":false,"clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2284","internal":false,"reflection":false,"clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2288","internal":false,"reflection":false,"title":"build providers: use multipass automatically when on darwin by sergiusens · Pull Request #2288 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2301","internal":false,"reflection":false,"title":"tests: move most tests to spread and reorder travis.yaml by sergiusens · Pull Request #2301 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2295","internal":false,"reflection":false,"clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2313","internal":false,"reflection":false,"clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2304","internal":false,"reflection":false,"clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2315","internal":false,"reflection":false,"clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2309","internal":false,"reflection":false,"clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2308","internal":false,"reflection":false,"clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2318","internal":false,"reflection":false,"clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2324","internal":false,"reflection":false,"clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2325","internal":false,"reflection":false,"clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2293","internal":false,"reflection":false,"clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2323","internal":false,"reflection":false,"clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2328","internal":false,"reflection":false,"clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2329","internal":false,"reflection":false,"title":"pluginhandler: remove legacy plugin loading without project by sergiusens · Pull Request #2329 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2331","internal":false,"reflection":false,"clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2353","internal":false,"reflection":false,"clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2335","internal":false,"reflection":false,"clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2334","internal":false,"reflection":false,"clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2339","internal":false,"reflection":false,"clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2357","internal":false,"reflection":false,"title":"scons plugin: add support for bases by sergiusens · Pull Request #2357 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2317","internal":false,"reflection":false,"clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2287","internal":false,"reflection":false,"title":"meta: support relocatable prime for path verification by sergiusens · Pull Request #2287 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2330","internal":false,"reflection":false,"title":"pluginhandler: remove big solidus workaround by sergiusens · Pull Request #2330 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2327","internal":false,"reflection":false,"clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2337","internal":false,"reflection":false,"clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2361","internal":false,"reflection":false,"title":"schema: remove deprecated plugin pull and build-properties by sergiusens · Pull Request #2361 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2360","internal":false,"reflection":false,"clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2362","internal":false,"reflection":false,"clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2364","internal":false,"reflection":false,"clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2376","internal":false,"reflection":false,"title":"jdk plugin: remove jdk by sergiusens · Pull Request #2376 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2370","internal":false,"reflection":false,"clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2377","internal":false,"reflection":false,"title":"cli: remove disable-parallel-build and geoip toggles by sergiusens · Pull Request #2377 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2256","internal":false,"reflection":false,"title":"local source: don't include .snapcraft directory by kyrofa · Pull Request #2256 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2251","internal":false,"reflection":false,"clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2259","internal":false,"reflection":false,"clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2255","internal":false,"reflection":false,"clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2250","internal":false,"reflection":false,"clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2263","internal":false,"reflection":false,"title":"project: catch parent YAML exceptions by kyrofa · Pull Request #2263 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2266","internal":false,"reflection":false,"clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2279","internal":false,"reflection":false,"title":"sanity checks: run properly on build VMs by kyrofa · Pull Request #2279 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2268","internal":false,"reflection":false,"clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2286","internal":false,"reflection":false,"clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2285","internal":false,"reflection":false,"clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2262","internal":false,"reflection":false,"clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2298","internal":false,"reflection":false,"title":"requirements.txt: pin click to v6 by kyrofa · Pull Request #2298 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2296","internal":false,"reflection":false,"clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2292","internal":false,"reflection":false,"clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2302","internal":false,"reflection":false,"title":"requirements.txt: stop using pymacaroons-pynacl by kyrofa · Pull Request #2302 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2322","internal":false,"reflection":false,"clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2333","internal":false,"reflection":false,"title":"catkin, catkin-tools: add support for bases by kyrofa · Pull Request #2333 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2343","internal":false,"reflection":false,"clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2346","internal":false,"reflection":false,"clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2347","internal":false,"reflection":false,"title":"extensions: support adding root properties by kyrofa · Pull Request #2347 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2348","internal":false,"reflection":false,"title":"extensions: remove root extensions by kyrofa · Pull Request #2348 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2349","internal":false,"reflection":false,"clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2366","internal":false,"reflection":false,"title":"qmake plugin: add support for bases by kyrofa · Pull Request #2366 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2368","internal":false,"reflection":false,"clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2367","internal":false,"reflection":false,"clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2371","internal":false,"reflection":false,"title":"plugins: remove jhbuild by kyrofa · Pull Request #2371 · snapcore/snapcraft · GitHub","clicks":0},{"url":"http://snapcraft.io/account","internal":false,"reflection":false,"clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2373","internal":false,"reflection":false,"clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2375","internal":false,"reflection":false,"clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2374","internal":false,"reflection":false,"title":"build providers: destroy on create failures by sergiusens · Pull Request #2374 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2244","internal":false,"reflection":false,"title":"snap: add the https transport by sergiusens · Pull Request #2244 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2265","internal":false,"reflection":false,"title":"build providers: allow snapcraft channel selection by sergiusens · Pull Request #2265 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2267","internal":false,"reflection":false,"clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2271","internal":false,"reflection":false,"title":"reporting: fail gracefully on submit errors by sergiusens · Pull Request #2271 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2273","internal":false,"reflection":false,"title":"build providers: use the best CPU configuration by sergiusens · Pull Request #2273 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2282","internal":false,"reflection":false,"title":"build providers: cleaner start and launch messaging by sergiusens · Pull Request #2282 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2294","internal":false,"reflection":false,"title":"snap: workaround the dirty tree by sergiusens · Pull Request #2294 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2319","internal":false,"reflection":false,"clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2326","internal":false,"reflection":false,"clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2332","internal":false,"reflection":false,"title":"waf plugin: support for bases by sergiusens · Pull Request #2332 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2344","internal":false,"reflection":false,"clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2352","internal":false,"reflection":false,"clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2358","internal":false,"reflection":false,"clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2356","internal":false,"reflection":false,"title":"nodejs plugin: add support for bases by sergiusens · Pull Request #2356 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2365","internal":false,"reflection":false,"title":"multipass: change default CPU value by sergiusens · Pull Request #2365 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2372","internal":false,"reflection":false,"title":"gradle plugin: add support for bases by sergiusens · Pull Request #2372 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2247","internal":false,"reflection":false,"title":"yaml loading: properly handle unhashable types by kyrofa · Pull Request #2247 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2257","internal":false,"reflection":false,"title":"meta: take charge of environment used to run commands by kyrofa · Pull Request #2257 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2270","internal":false,"reflection":false,"title":"catkin, rosdep: stop using FileNotFoundErrors by kyrofa · Pull Request #2270 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2283","internal":false,"reflection":false,"title":"snapcraft snap: refactor override-build into a script by kyrofa · Pull Request #2283 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2291","internal":false,"reflection":false,"clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2290","internal":false,"reflection":false,"clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2338","internal":false,"reflection":false,"title":"schema, meta: support layout by kyrofa · Pull Request #2338 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2341","internal":false,"reflection":false,"clicks":0},{"url":"https://forum.snapcraft.io/t/snapcraft-release-notes/10721","internal":true,"reflection":true,"title":"Snapcraft release notes","clicks":2},{"url":"https://forum.snapcraft.io/t/snapcraft-yaml-reference/4276","internal":true,"reflection":true,"title":"Snapcraft.yaml reference","clicks":0},{"url":"https://forum.snapcraft.io/t/the-jdk-plugin/8508","internal":true,"reflection":true,"title":"The jdk plugin","clicks":0},{"url":"https://forum.snapcraft.io/t/build-on-docker/4158","internal":true,"reflection":true,"title":"Build on Docker","clicks":0},{"url":"https://forum.snapcraft.io/t/install-snapcraft-on-macos/9607","internal":true,"reflection":true,"title":"Install snapcraft on macOS","clicks":0},{"url":"https://forum.snapcraft.io/t/migrating-between-bases/23455","internal":true,"reflection":true,"title":"Migrating between bases","clicks":0},{"url":"https://forum.snapcraft.io/t/release-notes-snapcraft-3-1/10719","internal":true,"reflection":true,"title":"Release notes: Snapcraft 3.1","clicks":0},{"url":"https://forum.snapcraft.io/t/snap-documentation/11127","internal":true,"reflection":true,"title":"Snap documentation","clicks":0},{"url":"https://forum.snapcraft.io/t/build-options/14250","internal":true,"reflection":true,"title":"Build options","clicks":0},{"url":"https://forum.snapcraft.io/t/snapcraft-parts-metadata/8336","internal":true,"reflection":true,"title":"Snapcraft parts metadata","clicks":0}],"read":true,"user_title":null,"bookmarked":false,"actions_summary":[{"id":2,"count":1}],"moderator":true,"admin":true,"staff":true,"user_id":2772,"hidden":false,"trust_level":4,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":true,"last_wiki_edit":"2021-12-08T18:00:28.721Z","can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false}],"stream":[46025]},"timeline_lookup":[[1,1535]],"suggested_topics":[{"id":30851,"title":"Snap How-to guides","fancy_title":"Snap How-to guides","slug":"snap-how-to-guides","posts_count":1,"reply_count":0,"highest_post_number":1,"image_url":null,"created_at":"2022-07-12T10:45:54.942Z","last_posted_at":"2022-07-12T10:45:55.061Z","bumped":true,"bumped_at":"2022-07-12T10:45:55.061Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags":[],"like_count":0,"views":1546,"category_id":15,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest single","description":"Original Poster, Most Recent Poster","user":{"id":2772,"username":"degville","name":"Graham Morrison","avatar_template":"/user_avatar/forum.snapcraft.io/degville/{size}/2021_2.png"}}]},{"id":32197,"title":"Core 22 QT 5 enabled snaps","fancy_title":"Core 22 QT 5 enabled snaps","slug":"core-22-qt-5-enabled-snaps","posts_count":1,"reply_count":0,"highest_post_number":1,"image_url":null,"created_at":"2022-10-16T21:41:22.367Z","last_posted_at":"2022-10-16T21:41:22.512Z","bumped":true,"bumped_at":"2022-10-16T21:41:22.512Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags":[],"like_count":0,"views":235,"category_id":15,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest single","description":"Original Poster, Most Recent Poster","user":{"id":13367,"username":"coalman321","name":"","avatar_template":"/letter_avatar/coalman321/{size}/5_6d6f4cde2641c35611d5cac2fb97c77e.png"}}]},{"id":32986,"title":"Snapcraft installation and setup","fancy_title":"Snapcraft installation and setup","slug":"snapcraft-installation-and-setup","posts_count":2,"reply_count":0,"highest_post_number":2,"image_url":null,"created_at":"2022-12-07T12:49:10.746Z","last_posted_at":"2022-12-15T10:43:52.370Z","bumped":true,"bumped_at":"2022-12-07T12:49:10.898Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags":[],"like_count":0,"views":819,"category_id":15,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest single","description":"Original Poster, Most Recent Poster","user":{"id":2772,"username":"degville","name":"Graham Morrison","avatar_template":"/user_avatar/forum.snapcraft.io/degville/{size}/2021_2.png"}}]},{"id":30982,"title":"The acrn interface","fancy_title":"The acrn interface","slug":"the-acrn-interface","posts_count":3,"reply_count":1,"highest_post_number":3,"image_url":null,"created_at":"2022-07-21T14:25:57.164Z","last_posted_at":"2022-08-05T17:30:59.540Z","bumped":true,"bumped_at":"2022-08-05T17:30:59.540Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags":[],"like_count":1,"views":1003,"category_id":15,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":2772,"username":"degville","name":"Graham Morrison","avatar_template":"/user_avatar/forum.snapcraft.io/degville/{size}/2021_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":9753,"username":"gvancuts","name":"Geoffroy","avatar_template":"/letter_avatar/gvancuts/{size}/5_6d6f4cde2641c35611d5cac2fb97c77e.png"}}]},{"id":35223,"title":"How to perform a reboot from a snap with strict confinement","fancy_title":"How to perform a reboot from a snap with strict confinement","slug":"how-to-perform-a-reboot-from-a-snap-with-strict-confinement","posts_count":3,"reply_count":1,"highest_post_number":3,"image_url":null,"created_at":"2023-05-19T14:33:58.466Z","last_posted_at":"2023-05-21T10:37:46.676Z","bumped":true,"bumped_at":"2023-05-21T10:37:46.676Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags":[],"like_count":3,"views":106,"category_id":15,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":null,"description":"Original Poster","user":{"id":14015,"username":"dboddie","name":"David Boddie","avatar_template":"/user_avatar/forum.snapcraft.io/dboddie/{size}/9564_2.png"}},{"extras":"latest","description":"Most Recent Poster","user":{"id":14590,"username":"apklu","name":"Arjun Suhass","avatar_template":"/letter_avatar/apklu/{size}/5_6d6f4cde2641c35611d5cac2fb97c77e.png"}}]}],"tags":[],"id":10704,"title":"Release notes: Snapcraft 3.0","fancy_title":"Release notes: Snapcraft 3.0","posts_count":1,"created_at":"2019-04-02T19:44:59.558Z","views":6015,"reply_count":0,"like_count":1,"last_posted_at":"2019-04-02T19:45:00.952Z","visible":true,"closed":false,"archived":false,"has_summary":false,"archetype":"regular","slug":"release-notes-snapcraft-3-0","category_id":15,"word_count":3788,"deleted_at":null,"user_id":2772,"featured_link":null,"pinned_globally":false,"pinned_at":null,"pinned_until":null,"image_url":null,"slow_mode_seconds":0,"draft":null,"draft_key":"topic_10704","draft_sequence":null,"unpinned":null,"pinned":false,"current_post_number":1,"highest_post_number":1,"deleted_by":null,"actions_summary":[{"id":4,"count":0,"hidden":false,"can_act":false},{"id":8,"count":0,"hidden":false,"can_act":false},{"id":7,"count":0,"hidden":false,"can_act":false}],"chunk_size":20,"bookmarked":false,"topic_timer":null,"message_bus_last_id":0,"participant_count":1,"show_read_indicator":false,"thumbnails":null,"details":{"notification_level":1,"participants":[{"id":2772,"username":"degville","name":"Graham Morrison","avatar_template":"/user_avatar/forum.snapcraft.io/degville/{size}/2021_2.png","post_count":1,"primary_group_name":null,"primary_group_flair_url":null,"primary_group_flair_color":null,"primary_group_flair_bg_color":null}],"created_by":{"id":2772,"username":"degville","name":"Graham Morrison","avatar_template":"/user_avatar/forum.snapcraft.io/degville/{size}/2021_2.png"},"last_poster":{"id":2772,"username":"degville","name":"Graham Morrison","avatar_template":"/user_avatar/forum.snapcraft.io/degville/{size}/2021_2.png"},"links":[{"url":"https://github.com/snapcore/snapcraft/releases/tag/3.0","title":"Release Presenting snapcraft 3.0 · snapcore/snapcraft · GitHub","internal":false,"attachment":false,"reflection":false,"clicks":22,"user_id":2772,"domain":"github.com","root_domain":"github.com"},{"url":"https://asciinema.org/a/t547f0ItBy6pW3kCSLxdV0JVL","title":null,"internal":false,"attachment":false,"reflection":false,"clicks":19,"user_id":2772,"domain":"asciinema.org","root_domain":"asciinema.org"},{"url":"https://asciinema.org/a/tq8D2RhEXbsNYkVDVz5EzYDH0","title":null,"internal":false,"attachment":false,"reflection":false,"clicks":13,"user_id":2772,"domain":"asciinema.org","root_domain":"asciinema.org"},{"url":"https://asciinema.org/a/l3gN5QyQy3Dgq0KzP52SdNv1q","title":null,"internal":false,"attachment":false,"reflection":false,"clicks":5,"user_id":2772,"domain":"asciinema.org","root_domain":"asciinema.org"},{"url":"https://spdx.org/licenses/","title":null,"internal":false,"attachment":false,"reflection":false,"clicks":5,"user_id":2772,"domain":"spdx.org","root_domain":"spdx.org"},{"url":"https://launchpad.net/snapcraft/+milestone/3.0","title":null,"internal":false,"attachment":false,"reflection":false,"clicks":4,"user_id":2772,"domain":"launchpad.net","root_domain":"launchpad.net"},{"url":"https://forum.snapcraft.io/t/snapcraft-overview/8940","title":"Snapcraft overview","internal":true,"attachment":false,"reflection":false,"clicks":3,"user_id":2772,"domain":"forum.snapcraft.io","root_domain":"snapcraft.io"},{"url":"https://forum.snapcraft.io/t/snapcraft-release-notes/10721","title":"Snapcraft release notes","internal":true,"attachment":false,"reflection":true,"clicks":2,"user_id":2772,"domain":"forum.snapcraft.io","root_domain":"snapcraft.io"},{"url":"https://forum.snapcraft.io/t/base-snaps/11198","title":"Base snaps","internal":true,"attachment":false,"reflection":false,"clicks":2,"user_id":2772,"domain":"forum.snapcraft.io","root_domain":"snapcraft.io"}]}}