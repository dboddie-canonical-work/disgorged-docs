{"post_stream":{"posts":[{"id":62256,"name":"Merlijn Sebrechts","username":"galgalesh","avatar_template":"/user_avatar/forum.snapcraft.io/galgalesh/{size}/9283_2.png","created_at":"2020-01-30T21:13:17.163Z","cooked":"\u003cp\u003eA snap can process modifiable options that allow its user to change application settings, and the behaviour of applications, within the snap.\u003c/p\u003e\n\u003cp\u003eThe \u003ca href=\"https://snapcraft.io/nextcloud\"\u003eNextcloud snap\u003c/a\u003e, for example, allows users to \u003ca href=\"https://github.com/nextcloud/nextcloud-snap#configuration\"\u003econfigure\u003c/a\u003e the hostname, ports, php memory limit, using the \u003ccode\u003esnap set\u003c/code\u003e command:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003esudo snap set nextcloud ports.http=81\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThis page describes how a snap developer can add configuration options, such as the above, to an already working \u003ca href=\"/t/creating-snapcraft-yaml/11666\"\u003esnapcraft.yaml\u003c/a\u003e:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e\u003ca href=\"#heading--interpreting\"\u003eInterpreting options\u003c/a\u003e\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e\u003ca href=\"#heading--default\"\u003eDefault values\u003c/a\u003e\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e\u003ca href=\"#heading--nested\"\u003eNested values\u003c/a\u003e\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003e\u003ca href=\"#heading--example\"\u003eExample implementation\u003c/a\u003e\u003c/strong\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"#heading--management\"\u003eManagement script\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#heading--default-configure\"\u003eDefault-configure script\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#heading--configure\"\u003eConfigure hook script\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#heading--wrapper\"\u003eWrapper script\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#heading--snapcraft\"\u003eSnapcraft.yaml\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"p-notification\"\u003e\n\u003cdiv class=\"p-notification__response\"\u003e\n\u003cp\u003e\u003cimg src=\"https://forum.snapcraft.io/images/emoji/emoji_one/information_source.png?v=9\" title=\":information_source:\" class=\"emoji\" alt=\":information_source:\"\u003e For more information on how to change a snap’s configuration, rather than adding the functionality to a snap, see \u003ca href=\"/t/managing-snap-configuration/510\"\u003eManaging snap configuration\u003c/a\u003e.\u003c/p\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\u003chr\u003e\n\u003ch2 id=\"heading--interpreting\"\u003eInterpreting options\u003c/h2\u003e\n\u003cp\u003eInternally, snaps view and change their configuration using the \u003ca href=\"/t/using-the-snapctl-tool/15002\"\u003esnapctl tool\u003c/a\u003e and its \u003ccode\u003eget\u003c/code\u003e, \u003ccode\u003eset\u003c/code\u003e and \u003ccode\u003eunset\u003c/code\u003e arguments.\u003c/p\u003e\n\u003cp\u003eConfiguration options are not defined when a snap is created because any (valid) option name is accepted.  Instead, any set values need to be interpreted and converted into an action by the snap developer.\u003c/p\u003e\n\u003cp\u003eA snap developer is free to implement this process however they prefer, however it’s most commonly accomplished with a purpose built script or function for each option, as defined by a snap’s \u003ca href=\"/t/creating-snapcraft-yaml/11666\"\u003esnapcraft.yaml\u003c/a\u003e and its associated scripts and \u003ca href=\"/t/supported-snap-hooks/3795\"\u003ehooks\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003ePermitted values should then be documented in the snap description so that users know which values are supported.\u003c/p\u003e\n\u003ch2 id=\"heading--default\"\u003eDefault values\u003c/h2\u003e\n\u003cp\u003eThe snap daemon has no concept of \u003cem\u003edefault values\u003c/em\u003e for configuration options. Actions for these values need to be implemented by the snap developer using the \u003ca href=\"/t/supported-snap-hooks/3795#heading--the-configure-hook\"\u003e\u003ccode\u003econfigure\u003c/code\u003e hook\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eWhen a user resets a configuration option with \u003ccode\u003esnap unset\u003c/code\u003e, or installs a snap, the \u003cem\u003econfigure hook\u003c/em\u003e is run and the snap developer can therefore use this hook to check when these values are unset and, if so, use \u003ccode\u003esnapctl set\u003c/code\u003e to restore that option to its default value.\u003c/p\u003e\n\u003cp\u003eSetting these values explicitly is preferred over using implicit defaults in the snap, because this way, users can easily discover which configuration options your snap supports.\u003c/p\u003e\n\u003cp\u003eOn Ubuntu Core, a device’s \u003ca href=\"/t/gadget-snaps/696\"\u003egadget snap\u003c/a\u003e can share default configuration options with the snaps listed in its \u003ccode\u003egadget.yaml\u003c/code\u003e. These options are shared when a snap is first installed using either the \u003ca href=\"/t/supported-snap-hooks/3795#heading--default-configure\"\u003edefault-configure hook\u003c/a\u003e, which is run before services are started, or with the \u003ca href=\"/t/supported-snap-hooks/3795#heading--the-configure-hook\"\u003econfigure hook\u003c/a\u003e, which runs after services are started.\u003c/p\u003e\n\u003cp\u003eThe example implementation below includes managing a default value.\u003c/p\u003e\n\u003ch2 id=\"heading--nested\"\u003eNested values\u003c/h2\u003e\n\u003cp\u003eYou can group configuration options using a dotted path:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003esnapctl set my-snap server.protocol=tcp server.port=4242\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eEach configuration option can be retrieved by using the same dotted path, or you can retrieve the entire collection as a json document by specifying their common key:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003e$ snapctl get server\n{\n    \"protocol\": \"tcp\",\n    \"port\": \"4242\"\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id=\"heading--example\"\u003eImplementation\u003c/h2\u003e\n\u003cp\u003eA typical implementation will use the options set by the user to change environment variables within the snap environment which are then used by the snap application.\u003c/p\u003e\n\u003cp\u003eThis kind of implementation can be split into 3 scripts:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cstrong\u003ewrapper script\u003c/strong\u003e calls the application with the necessary environment variables\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003emanagement script\u003c/strong\u003e sets values, checks their validity, and restarts the application\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003edefault-configure hook script\u003c/strong\u003e calls the management functions on first install before services are started\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003econfigure hook script\u003c/strong\u003e calls the management functions on installation and changes\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThe above scripts will also need to be linked to a snap’s \u003cstrong\u003esnapcraft.yaml\u003c/strong\u003e.\u003c/p\u003e\n\u003cp\u003eWhen a user changes the configuration of a snap, the \u003ca href=\"/t/supported-snap-hooks/3795#heading--the-configure-hook\"\u003econfigure hook script\u003c/a\u003e is always executed. Through functions in the management script, this hook will typically validate the configuration and, for example, update environment variables or write to the necessary configuration files.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cimg src=\"https://forum.snapcraft.io/images/emoji/emoji_one/warning.png?v=9\" title=\":warning:\" class=\"emoji\" alt=\":warning:\"\u003e Snaps that use configuration options need to have a \u003ccode\u003econfigure\u003c/code\u003e hook defined. Otherwise, users will not be able to change the configuration.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eThe following example scripts show how to set and manage a port setting for a snap running an executable called \u003ccode\u003eexample-server\u003c/code\u003e.\u003c/p\u003e\n\u003ch4 id=\"heading--management\"\u003eExample management script\u003c/h4\u003e\n\u003cp\u003eA separate script for management functions allows those functions to be accessible from both the wrapper and the configure hook scripts.\u003c/p\u003e\n\u003cp\u003eIn the following example, we simply define a default HTTP port and two functions:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003ehttp_port\u003c/code\u003e requests the default port if nothing is yet set and returns the port value\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eset_http_port\u003c/code\u003esets the port value\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003e#!/bin/sh\n\nDEFAULT_HTTP_PORT=\"80\"\n\nhttp_port()\n{\n        port=\"$(snapctl get ports.http)\"\n        if [ -z \"$port\" ]; then\n                port=\"$DEFAULT_HTTP_PORT\"\n                set_http_port $port\n        fi\n        echo \"$port\"\n}\n\nset_http_port()\n{\n        snapctl set ports.http=\"$1\"\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThe above script should be expanded to manage the running process and also to check whether the new port value is any different from the old, avoiding a potentially unnecessary service restart.\u003c/p\u003e\n\u003ch4 id=\"heading--default-configure\"\u003eExample default-configure hook script\u003c/h4\u003e\n\u003cp\u003eThe default-configure-hook is an optional extension to the \u003ca href=\"#heading--configure\"\u003econfigure hook\u003c/a\u003e (see below) that executes only on snap installation and before services are started.\u003c/p\u003e\n\u003cp\u003eThe following example attempts to retrieve a default configuration option from a gadget and either writes this to a file, or writes a fallback value if the gadget option doesn’t exist:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003e#!/bin/sh\n\nDEFAULT_GADGET_OPTION=”123”\n\ngadget_option=\"$(snapctl get gadget_option)\"\nif [ -z \"$gadget_option\" ]; then\n   gadget_option=\"$DEFAULT_GADGET_OPTION\"\nfi\n\nmkdir -m 0600 $SNAP_DATA/options\necho \"option: $gadget_option\" \u0026gt; $SNAP_DATA/options/gadget\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThe \u003ccode\u003esnapctl get|set|unset\u003c/code\u003e command, used in the management script works anywhere within the snap context: during execution of your applications and services, and in all the hooks of your snap.\u003c/p\u003e\n\u003cp\u003eHowever, when you change configuration during a hook, if the hook exits with a non-zero status code the configuration will \u003cem\u003enot\u003c/em\u003e be applied. This is because the hook context is transactional - either every change is applied, or none are.\u003c/p\u003e\n\u003ch4 id=\"heading--configure\"\u003eExample configure hook script\u003c/h4\u003e\n\u003cp\u003eThe configure script is run by the snap daemon when a snap is installed and when any option is set or changed.\u003c/p\u003e\n\u003cp\u003eThe below example checks the validity of the value set for the port and runs the \u003cem\u003eset_http_port\u003c/em\u003e function before making sure any changes are reflected in the server by restarting it:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003e#!/bin/sh\n\n# source the management script\n. \"$SNAP/management-script\"\n\nhandle_port_config()\n{\n        http_port=\"$(http_port)\"\n\n        # Validate HTTP port\n        if ! expr \"$http_port\" : '^[0-9]\\+$' \u0026gt; /dev/null; then\n                echo \"\\\"$http_port\\\" is not a valid HTTP port\" \u0026gt;\u0026amp;2\n                return 1\n        fi\n\n       # run function from management script\n        set_http_port \"$http_port\"\n\n        # Restart example-server to apply new config\n        snapctl restart example-server\n}\nhandle_port_config\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThe \u003ccode\u003esnapctl get|set|unset\u003c/code\u003e command used in the management script works anywhere within the snap context: during execution of your applications and services, and in all the hooks of your snap.\u003c/p\u003e\n\u003cp\u003eHowever, when you change configuration during a hook, if the hook exits with a non-zero status code the configuration will \u003cem\u003enot\u003c/em\u003e be applied. This is because the hook context is transactional - either every change is applied, or none are.\u003c/p\u003e\n\u003ch4 id=\"heading--wrapper\"\u003eExample wrapper script\u003c/h4\u003e\n\u003cp\u003eThe wrapper script is used to retrieve whatever options have been set,  and in our example, use these to set environment variables which can be used as arguments when running \u003ccode\u003eexample-server\u003c/code\u003e.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003e#!/bin/sh\n# source the management script\n. \"$SNAP/bin/management-script\"\n\n# call the http_port function from the management script\nHTTP_PORT=\"$(http_port)\"\nexport HTTP_PORT\n\n\"$SNAP/bin/example-server\" -www \"$HTTP_PORT\" \n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eRather than using set options as environment variables for an executable, they could just as easily be written to a configuration file.\u003c/p\u003e\n\u003cp\u003eFor more details on the environment variables accessible from within a snap, such as \u003ccode\u003e$SNAP\u003c/code\u003e used above, see \u003ca href=\"/t/environment-variables/7983\"\u003eEnvironment variables\u003c/a\u003e.\u003c/p\u003e\n\u003ch4 id=\"heading--snapcraft\"\u003eExample snapcraft.yaml\u003c/h4\u003e\n\u003cp\u003eTo incorporate options, hooks and scripts into a pre-existing \u003ca href=\"/t/the-snapcraft-format/8337\"\u003esnapcraft.yaml\u003c/a\u003e the executable needs to be replaced with the wrapper script, and both the hook and management scripts need to be brought into the snap from external  \u003ccode\u003esrc/hooks/bin\u003c/code\u003e and \u003ccode\u003esrc/utilities/bin\u003c/code\u003e directories respectively:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-yaml\"\u003eapps:\n  example-server:\n      command: bin/example-server-wrapper\n      daemon: simple\n      plugs: [..]\n[...]\n  hooks:\n      plugin: dump\n      source: src/hooks/\n      organize:\n           bin/: snap/hooks/\n[...]\n  scripts:\n      plugin: dump\n      source: src/utilities\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eWith the above snap built and deployed, its port can be changed and retrieved with the following command:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003esnap set example-server ports.http=8090\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eA setting can be verified with the \u003cem\u003eget\u003c/em\u003e command:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e$ snap get domoticz-gm ports.http\n8090\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eFor a complete options and configuration hook example, take a look at the \u003ca href=\"https://github.com/nextcloud/nextcloud-snap\"\u003eNextcloud snap\u003c/a\u003e.\u003c/p\u003e","post_number":1,"post_type":1,"updated_at":"2023-05-04T14:44:33.306Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":359,"reads":49,"readers_count":48,"score":1789.8,"yours":false,"topic_id":15246,"topic_slug":"adding-snap-configuration","display_username":"Merlijn Sebrechts","primary_group_name":null,"primary_group_flair_url":null,"primary_group_flair_bg_color":null,"primary_group_flair_color":null,"version":12,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"link_counts":[{"url":"https://github.com/nextcloud/nextcloud-snap#configuration","internal":false,"reflection":false,"title":"GitHub - nextcloud/nextcloud-snap: ☁️📦 Nextcloud packaged as a snap","clicks":9},{"url":"https://snapcraft.io/nextcloud","internal":false,"reflection":false,"title":"Install Nextcloud for Linux using the Snap Store | Snapcraft","clicks":9},{"url":"https://forum.snapcraft.io/t/managing-snap-configuration/510","internal":true,"reflection":false,"title":"Managing snap configuration","clicks":8},{"url":"https://github.com/nextcloud/nextcloud-snap","internal":false,"reflection":false,"title":"GitHub - nextcloud/nextcloud-snap: ☁️📦 Nextcloud packaged as a snap","clicks":7},{"url":"https://forum.snapcraft.io/t/using-the-snapctl-tool/15002","internal":true,"reflection":false,"title":"Using the snapctl tool","clicks":5},{"url":"https://forum.snapcraft.io/t/creating-snapcraft-yaml/11666","internal":true,"reflection":false,"title":"Creating snapcraft.yaml","clicks":3},{"url":"https://forum.snapcraft.io/t/supported-snap-hooks/3795","internal":true,"reflection":false,"title":"Supported snap hooks","clicks":1},{"url":"https://forum.snapcraft.io/t/environment-variables/7983","internal":true,"reflection":false,"title":"Environment variables","clicks":1},{"url":"https://forum.snapcraft.io/t/the-snapcraft-yaml-schema/8337","internal":true,"reflection":false,"title":"The snapcraft.yaml schema","clicks":0},{"url":"https://forum.snapcraft.io/t/gadget-snaps/696","internal":true,"reflection":false,"title":"Gadget snaps","clicks":0},{"url":"https://forum.snapcraft.io/t/snap-documentation/11127","internal":true,"reflection":true,"title":"Snap documentation","clicks":3},{"url":"https://forum.snapcraft.io/t/services-and-daemons/12601","internal":true,"reflection":true,"title":"Services and daemons","clicks":1},{"url":"https://forum.snapcraft.io/t/whats-new/20117","internal":true,"reflection":true,"title":"What's new","clicks":1},{"url":"https://forum.snapcraft.io/t/defining-a-command/12060","internal":true,"reflection":true,"title":"Defining a command","clicks":0}],"read":true,"user_title":null,"bookmarked":false,"actions_summary":[{"id":2,"count":1}],"moderator":false,"admin":false,"staff":false,"user_id":1418,"hidden":false,"trust_level":3,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":true,"last_wiki_edit":"2023-05-04T14:44:33.341Z","can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false}],"stream":[62256]},"timeline_lookup":[[1,1232]],"suggested_topics":[{"id":30809,"title":"The ROS 2 Humble extension","fancy_title":"The ROS 2 Humble extension","slug":"the-ros-2-humble-extension","posts_count":1,"reply_count":0,"highest_post_number":1,"image_url":null,"created_at":"2022-07-08T20:12:10.035Z","last_posted_at":"2022-07-08T20:12:10.192Z","bumped":true,"bumped_at":"2023-03-13T13:44:02.640Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags":[],"like_count":0,"views":1244,"category_id":15,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest single","description":"Original Poster, Most Recent Poster","user":{"id":6739,"username":"artivis","name":"Jeremie Deray","avatar_template":"/user_avatar/forum.snapcraft.io/artivis/{size}/5695_2.png"}}]},{"id":33074,"title":"Basic snapcraft.yaml example","fancy_title":"Basic snapcraft.yaml example","slug":"basic-snapcraft-yaml-example","posts_count":2,"reply_count":0,"highest_post_number":2,"image_url":null,"created_at":"2022-12-13T10:53:46.449Z","last_posted_at":"2022-12-15T10:45:49.975Z","bumped":true,"bumped_at":"2022-12-13T10:53:46.598Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags":[],"like_count":0,"views":887,"category_id":15,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest single","description":"Original Poster, Most Recent Poster","user":{"id":2772,"username":"degville","name":"Graham Morrison","avatar_template":"/user_avatar/forum.snapcraft.io/degville/{size}/2021_2.png"}}]},{"id":32983,"title":"Snapcraft quickstart","fancy_title":"Snapcraft quickstart","slug":"snapcraft-quickstart","posts_count":3,"reply_count":0,"highest_post_number":3,"image_url":null,"created_at":"2022-12-07T10:11:58.985Z","last_posted_at":"2022-12-15T10:43:36.422Z","bumped":true,"bumped_at":"2022-12-15T10:43:08.332Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags":[],"like_count":6,"views":914,"category_id":15,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest single","description":"Original Poster, Most Recent Poster","user":{"id":2772,"username":"degville","name":"Graham Morrison","avatar_template":"/user_avatar/forum.snapcraft.io/degville/{size}/2021_2.png"}}]},{"id":35613,"title":"Revisions","fancy_title":"Revisions","slug":"revisions","posts_count":1,"reply_count":0,"highest_post_number":1,"image_url":null,"created_at":"2023-06-14T12:00:32.246Z","last_posted_at":"2023-06-14T12:00:32.397Z","bumped":true,"bumped_at":"2023-06-15T11:10:36.858Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags":[],"like_count":0,"views":44,"category_id":15,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest single","description":"Original Poster, Most Recent Poster","user":{"id":2772,"username":"degville","name":"Graham Morrison","avatar_template":"/user_avatar/forum.snapcraft.io/degville/{size}/2021_2.png"}}]},{"id":31051,"title":"Snapcraft Reference","fancy_title":"Snapcraft Reference","slug":"snapcraft-reference","posts_count":5,"reply_count":1,"highest_post_number":5,"image_url":null,"created_at":"2022-07-27T11:51:00.654Z","last_posted_at":"2023-04-24T17:52:24.772Z","bumped":true,"bumped_at":"2023-04-25T05:31:27.608Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags":[],"like_count":0,"views":1238,"category_id":15,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":null,"description":"Original Poster","user":{"id":2772,"username":"degville","name":"Graham Morrison","avatar_template":"/user_avatar/forum.snapcraft.io/degville/{size}/2021_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":14015,"username":"dboddie","name":"David Boddie","avatar_template":"/user_avatar/forum.snapcraft.io/dboddie/{size}/9564_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":11710,"username":"rpjday","name":"Robert P. J. Day","avatar_template":"/user_avatar/forum.snapcraft.io/rpjday/{size}/8457_2.png"}},{"extras":"latest","description":"Most Recent Poster","user":{"id":2185,"username":"abitrolly","name":"Anatoli Babenia","avatar_template":"/user_avatar/forum.snapcraft.io/abitrolly/{size}/4528_2.png"}}]}],"tags":[],"id":15246,"title":"Adding snap configuration","fancy_title":"Adding snap configuration","posts_count":1,"created_at":"2020-01-30T21:13:17.006Z","views":5751,"reply_count":0,"like_count":1,"last_posted_at":"2020-01-30T21:13:17.163Z","visible":true,"closed":false,"archived":false,"has_summary":false,"archetype":"regular","slug":"adding-snap-configuration","category_id":15,"word_count":1507,"deleted_at":null,"user_id":1418,"featured_link":null,"pinned_globally":false,"pinned_at":null,"pinned_until":null,"image_url":null,"slow_mode_seconds":0,"draft":null,"draft_key":"topic_15246","draft_sequence":null,"unpinned":null,"pinned":false,"current_post_number":1,"highest_post_number":1,"deleted_by":null,"actions_summary":[{"id":4,"count":0,"hidden":false,"can_act":false},{"id":8,"count":0,"hidden":false,"can_act":false},{"id":7,"count":0,"hidden":false,"can_act":false}],"chunk_size":20,"bookmarked":false,"topic_timer":null,"message_bus_last_id":0,"participant_count":1,"show_read_indicator":false,"thumbnails":null,"details":{"notification_level":1,"participants":[{"id":1418,"username":"galgalesh","name":"Merlijn Sebrechts","avatar_template":"/user_avatar/forum.snapcraft.io/galgalesh/{size}/9283_2.png","post_count":1,"primary_group_name":null,"primary_group_flair_url":null,"primary_group_flair_color":null,"primary_group_flair_bg_color":null}],"created_by":{"id":1418,"username":"galgalesh","name":"Merlijn Sebrechts","avatar_template":"/user_avatar/forum.snapcraft.io/galgalesh/{size}/9283_2.png"},"last_poster":{"id":1418,"username":"galgalesh","name":"Merlijn Sebrechts","avatar_template":"/user_avatar/forum.snapcraft.io/galgalesh/{size}/9283_2.png"},"links":[{"url":"https://github.com/nextcloud/nextcloud-snap#configuration","title":"GitHub - nextcloud/nextcloud-snap: ☁️📦 Nextcloud packaged as a snap","internal":false,"attachment":false,"reflection":false,"clicks":9,"user_id":1418,"domain":"github.com","root_domain":"github.com"},{"url":"https://snapcraft.io/nextcloud","title":"Install Nextcloud for Linux using the Snap Store | Snapcraft","internal":false,"attachment":false,"reflection":false,"clicks":9,"user_id":1418,"domain":"snapcraft.io","root_domain":"snapcraft.io"},{"url":"https://forum.snapcraft.io/t/managing-snap-configuration/510","title":"Managing snap configuration","internal":true,"attachment":false,"reflection":false,"clicks":8,"user_id":1418,"domain":"forum.snapcraft.io","root_domain":"snapcraft.io"},{"url":"https://github.com/nextcloud/nextcloud-snap","title":"GitHub - nextcloud/nextcloud-snap: ☁️📦 Nextcloud packaged as a snap","internal":false,"attachment":false,"reflection":false,"clicks":7,"user_id":1418,"domain":"github.com","root_domain":"github.com"},{"url":"https://forum.snapcraft.io/t/using-the-snapctl-tool/15002","title":"Using the snapctl tool","internal":true,"attachment":false,"reflection":false,"clicks":5,"user_id":1418,"domain":"forum.snapcraft.io","root_domain":"snapcraft.io"},{"url":"https://forum.snapcraft.io/t/creating-snapcraft-yaml/11666","title":"Creating snapcraft.yaml","internal":true,"attachment":false,"reflection":false,"clicks":3,"user_id":1418,"domain":"forum.snapcraft.io","root_domain":"snapcraft.io"},{"url":"https://forum.snapcraft.io/t/snap-documentation/11127","title":"Snap documentation","internal":true,"attachment":false,"reflection":true,"clicks":3,"user_id":898,"domain":"forum.snapcraft.io","root_domain":"snapcraft.io"},{"url":"https://forum.snapcraft.io/t/whats-new/20117","title":"What's new","internal":true,"attachment":false,"reflection":true,"clicks":1,"user_id":2772,"domain":"forum.snapcraft.io","root_domain":"snapcraft.io"},{"url":"https://forum.snapcraft.io/t/supported-snap-hooks/3795","title":"Supported snap hooks","internal":true,"attachment":false,"reflection":false,"clicks":1,"user_id":1418,"domain":"forum.snapcraft.io","root_domain":"snapcraft.io"},{"url":"https://forum.snapcraft.io/t/services-and-daemons/12601","title":"Services and daemons","internal":true,"attachment":false,"reflection":true,"clicks":1,"user_id":2772,"domain":"forum.snapcraft.io","root_domain":"snapcraft.io"},{"url":"https://forum.snapcraft.io/t/environment-variables/7983","title":"Environment variables","internal":true,"attachment":false,"reflection":false,"clicks":1,"user_id":1418,"domain":"forum.snapcraft.io","root_domain":"snapcraft.io"}]}}