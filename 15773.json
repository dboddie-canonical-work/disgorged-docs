{"post_stream":{"posts":[{"id":64085,"name":"Graham Morrison","username":"degville","avatar_template":"/user_avatar/forum.snapcraft.io/degville/{size}/2021_2.png","created_at":"2020-03-03T09:13:25.218Z","cooked":"\u003cp\u003eThese are the release notes for \u003ca href=\"https://github.com/snapcore/snapcraft/releases/tag/3.10\"\u003eSnapcraft 3.10\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eFor general details, including installation instructions, see \u003ca href=\"/t/snapcraft-overview/8940\"\u003eSnapcraft overview\u003c/a\u003e, or take a look at \u003ca href=\"/t/snapcraft-release-notes/10721\"\u003eSnapcraft release notes\u003c/a\u003e for other \u003cem\u003eSnapcraft\u003c/em\u003e releases.\u003c/p\u003e\n\u003ch2\u003eNew \u003cem\u003ecore\u003c/em\u003e features\u003c/h2\u003e\n\u003ch3\u003eConfigurable system usernames\u003c/h3\u003e\n\u003cp\u003eSnapcraft now supports the configuration of \u003ca href=\"/t/system-usernames/13386\"\u003esystem usernames\u003c/a\u003e for daemons. This functionality was recently added to snapd, and enables a daemon to run as the user specified within an application’s ‘command’ entry, for example, among other functions.\u003c/p\u003e\n\u003ch3\u003ePrimed stage packages\u003c/h3\u003e\n\u003cp\u003eSnapcraft now tracks the files within a snap that are derived from those listed under \u003ccode\u003estaged-packages\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eA build manifest already includes the set of all staged packages in \u003ccode\u003estaged-packages\u003c/code\u003e, but the build manifest also includes files that were installed, then removed or filtered out, from the resulting snap.\u003c/p\u003e\n\u003cp\u003eThe resulting list of staged and tracked packages is maintained within \u003ccode\u003eprimed-stage-packages\u003c/code\u003e. Security notices will eventually use \u003ccode\u003eprimed-stage-packages\u003c/code\u003e to reduce the number of false positive alerts that are caused by staged-packages listing packages that are not eventually present in the snap.\u003c/p\u003e\n\u003ch2\u003eCLI improvements\u003c/h2\u003e\n\u003ch3\u003eNew CLI configuration file\u003c/h3\u003e\n\u003cp\u003eSnapcraft now reads a configuration file to populate the default \u003cem\u003esnapcraft\u003c/em\u003e command-line options.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eLocation: \u003ccode\u003e$HOME/.config/snapcraft/config.yaml\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eSyntax: \u003ccode\u003eYAML\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eValid configuration options: Anything that matches a snapcraft CLI command\noption (e.g. provider, bind-ssh, debug, http-proxy, https-proxy) for arguments. The configuration file uses YAML syntax and supports any option that matches a valid snapcraft argument.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eFor example, a config like:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-yaml\"\u003euse-lxd: true\nbind-ssh: true\nhttp-proxy: http://192.168.1.10:3128\nhttps-proxy: http://192.168.1.10:3128 ```\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eMatches:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003esnapcraft --use-lxd \\\n          --bind-ssh \\\n          --http-proxy http://10.155.149.232:3128 \\\n          --https-proxy http://10.155.149.232:3128\n\u003c/code\u003e\u003c/pre\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cimg src=\"https://forum.snapcraft.io/images/emoji/emoji_one/information_source.png?v=9\" title=\":information_source:\" class=\"emoji\" alt=\":information_source:\"\u003e While an argument can be overridden, it cannot be unset. For instance, if using \u003ccode\u003ehttp-proxy\u003c/code\u003e or \u003ccode\u003edebug\u003c/code\u003e, there is no method to currently unset these values.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3\u003eRemote Build\u003c/h3\u003e\n\u003cp\u003eMany improvements have been made to \u003ca href=\"/t/remote-build/14400\"\u003eRemote build\u003c/a\u003e, including the removal of unnecessary options such as entering a Launchpad ID, which is provided via the login process.\u003c/p\u003e\n\u003cp\u003eTo build snaps, \u003ccode\u003eremote build\u003c/code\u003e previously used snapcraft from the \u003ccode\u003eedge\u003c/code\u003echannel. From this release, snaps are created using snapcraft from the \u003ccode\u003estable\u003c/code\u003e channel.\u003c/p\u003e\n\u003cp\u003eThe user interface has also been cleaned-up, with more changes on the way.\u003c/p\u003e\n\u003ch2\u003eBuild providers\u003c/h2\u003e\n\u003ch3\u003eHTTP proxies\u003c/h3\u003e\n\u003cp\u003eSnapcraft now supports passing \u003ccode\u003ehttp_proxy\u003c/code\u003e and \u003ccode\u003ehttps_proxy\u003c/code\u003e through to LXD and Multipass build environments. Options have also been added to specify these using \u003ccode\u003e--http-proxy \u0026lt;proxy\u0026gt;\u003c/code\u003e and \u003ccode\u003e-https-proxy \u0026lt;proxy\u0026gt;\u003c/code\u003e.\u003c/p\u003e\n\u003ch3\u003eBind SSH\u003c/h3\u003e\n\u003cp\u003eLocal SSH configuration can now be passed through to LXD and Multipass environments.\u003c/p\u003e\n\u003cp\u003eThe user’s SSH directory, (eg. \u003ccode\u003e${HOME}/.ssh\u003c/code\u003e), is bind-mounted to the build-environment, enabling SSH configuration within that build environment. This option is enabled by using  \u003ccode\u003e--bind-ssh\u003c/code\u003e with the LXD or Multipass providers.\u003c/p\u003e\n\u003ch2\u003ePlugins\u003c/h2\u003e\n\u003ch3\u003eRust\u003c/h3\u003e\n\u003cp\u003eThe Rust plugin now correctly works with \u003ca href=\"https://doc.rust-lang.org/book/ch14-03-cargo-workspaces.html\"\u003ecargo workspaces\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eFrom this release, the default is to now use the minimal rust profile for building, which solves a problem of generally building on s390x, arm64 and Ppcel64 architectures.\u003c/p\u003e\n\u003cp\u003eA few smaller issues, such as using the same path for \u003ccode\u003eCARGO_HOME\u003c/code\u003e and \u003ccode\u003eRUSTUP_HOME\u003c/code\u003e, have been fixes with this release, and \u003ccode\u003eCargo.lock\u003c/code\u003e files are now also properly respected.\u003c/p\u003e\n\u003ch3\u003eGo\u003c/h3\u003e\n\u003cp\u003eThe Go plugin has been cleaned-up and, as part of this release, now includes support for \u003ca href=\"https://blog.golang.org/using-go-modules\"\u003eGo Mod\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eIf a project makes use of the Go Modules feature, the \u003cstrong\u003eright\u003c/strong\u003e things will happen.\u003c/p\u003e\n\u003ch3\u003eCatkin\u003c/h3\u003e\n\u003cp\u003eA long lived workaround has been removed from the robotics tooling. This includes the\n‘rospack’ workaround now that \u003ccode\u003erosdep -i\u003c/code\u003e works correctly.\u003c/p\u003e\n\u003cp\u003eAnother improvement to the plugin includes fixing an issue when using ‘–destructive-mode`, where some installation paths from the host machine leaked into the list of paths,considered by the Catkin plugin. This resulted in dependencies being found in the host path and consequently not being installed by the plugin in the expected \u003cstrong\u003eparts\u003c/strong\u003e path.\u003c/p\u003e\n\u003ch3\u003ePython\u003c/h3\u003e\n\u003cp\u003eFrom this release, the Python plugin will process its requirements separately from \u003ccode\u003esetup.py. This helps to better satisfying local dependencies declared in \u003c/code\u003einstall_requires`. As a result, building becomes less costly as wheels are not unnecessarily generated with every build.\u003c/p\u003e\n\u003cp\u003eThe Python plugin also creates a cleaner \u003ccode\u003esitecustomize\u003c/code\u003e that no longer leaks Snapcraft’s \u003ccode\u003esite-packages\u003c/code\u003e into the part that the plugin processes.\u003c/p\u003e\n\u003ch2\u003eExtensions\u003c/h2\u003e\n\u003cp\u003eProjects using extensions will gain better performance with this release, thanks to the scaffolding to bring up desktop applications being improved. These improvements include pre-checks being run before spawning shells to run some setup commands (even if they were idempotent  - pre-checking avoids their cost).\u003c/p\u003e\n\u003cp\u003eIcon caching pre-checks are now also in place, and can reduce the time to bring up an application by up to 10 seconds.\u003c/p\u003e\n\u003ch2\u003eInformation Parsing\u003c/h2\u003e\n\u003ch3\u003eAppStream\u003c/h3\u003e\n\u003cp\u003eSeveral AppStream fixes arrive with this release. These include a fix related to silently breaking XSLT transformations, when comments were present in the AppStream file, and support for the recently specced \u003ccode\u003e\u0026lt;em\u0026gt;\u003c/code\u003e and \u003ccode\u003e\u0026lt;code\u0026gt;\u003c/code\u003e tags. These are now supported by Snapcraft when using the \u003ccode\u003eparse-info\u003c/code\u003e functionality with AppStream files.\u003c/p\u003e\n\u003ch2\u003eFull list of changes\u003c/h2\u003e\n\u003cp\u003eThe issues and features worked on for Snapcraft 3.10 are reflected in the following change list:\u003c/p\u003e\n\u003cdetails\u003e\n\u003csummary\u003e\nList of changes for Snapcraft 3.10\u003c/summary\u003e\n\u003ch2\u003eAdam Collard:\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003esnap: add license to snapcraft.yaml\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eAnatoli Babenia:\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003edocker: test image builds with Travis CI (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2851\"\u003e#2851\u003c/a\u003e)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eAnton Maminov:\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003ecrystal plugin: add flags to use during shards build (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2740\"\u003e#2740\u003c/a\u003e)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eChris Patterson:\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003ecli: add new YAML configuration file support\u003c/li\u003e\n\u003cli\u003ecli: enable experimental snapcraft configuration file\u003c/li\u003e\n\u003cli\u003ecli: introduce --provider\u003c/li\u003e\n\u003cli\u003espread tests: unset SNAPCRAFT_BUILD_ENVIRONMENT=host for lxd tests\u003c/li\u003e\n\u003cli\u003ecli: explicitly set show_envvar=False for --provider\u003c/li\u003e\n\u003cli\u003espread tests: ensure multipass tests use multipass for clean\u003c/li\u003e\n\u003cli\u003exattrs: introduce internal xattrs support\u003c/li\u003e\n\u003cli\u003exattrs: handle case where attribute may be too long\u003c/li\u003e\n\u003cli\u003emanifest: track and annotate \u003ccode\u003eprimed-stage-packages\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003ecli: treat “managed-host” as separate provider than “host”\u003c/li\u003e\n\u003cli\u003ecli: annotate return type for _sanity_check_build_provider_flags()\u003c/li\u003e\n\u003cli\u003ecli: generic handling for provider-specific flag errors\u003c/li\u003e\n\u003cli\u003ecli: introduce get_build_provider_flags\u003c/li\u003e\n\u003cli\u003ecli: introduce http and https proxy options\u003c/li\u003e\n\u003cli\u003ecli: introduce apply_host_provider_flags for host providers\u003c/li\u003e\n\u003cli\u003ecli: apply provider flags for each provider\u003c/li\u003e\n\u003cli\u003ebuild providers: introduce build provider flags\u003c/li\u003e\n\u003cli\u003ebuild providers: set configured environment flags in \u003ccode\u003erun()\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003ebuild providers: add \u003ccode\u003ehide_output\u003c/code\u003e flag to abstract _run() definition\u003c/li\u003e\n\u003cli\u003ebuild providers: passthrough flags for http_proxy and https_proxy\u003c/li\u003e\n\u003cli\u003etests: introduce unit tests for options\u003c/li\u003e\n\u003cli\u003etests: mock patch sys.argv for CLI runner\u003c/li\u003e\n\u003cli\u003ecli: exempt containers from requiring --destructive-mode\u003c/li\u003e\n\u003cli\u003etests: add env-passthrough spread tests for LXD and host\u003c/li\u003e\n\u003cli\u003ebase provider: introduce generalized _get_home_directory()\u003c/li\u003e\n\u003cli\u003emultipass provider: rename _mount to __mount\u003c/li\u003e\n\u003cli\u003ebuild providers: introduce _mount() and _is_mounted()\u003c/li\u003e\n\u003cli\u003ebuild providers: unify per-provider mount_project()\u003c/li\u003e\n\u003cli\u003ebuild providers: unify per-provider _mount_prime_directory()\u003c/li\u003e\n\u003cli\u003emultipass provider: remove now-unused __mount() method\u003c/li\u003e\n\u003cli\u003ebuild providers: implement support for bind-ssh\u003c/li\u003e\n\u003cli\u003ecli: introduce --bind-ssh option\u003c/li\u003e\n\u003cli\u003emeta: fix string comparison operator in Snap validate\u003c/li\u003e\n\u003cli\u003esnapcraft: add missing imports for typing\u003c/li\u003e\n\u003cli\u003erequirements-devel: uprev flake8 to 3.7.9\u003c/li\u003e\n\u003cli\u003erequirements-devel: uprev coverage to 4.5.4\u003c/li\u003e\n\u003cli\u003ecodespell: various spelling fixes\u003c/li\u003e\n\u003cli\u003ecodespell: add snapcraft.spec to ignore list\u003c/li\u003e\n\u003cli\u003ecodespell: address codespell error in test_common unit test\u003c/li\u003e\n\u003cli\u003ecodespell: address codespell error in circular-dependencies test\u003c/li\u003e\n\u003cli\u003erequirements-devel: uprev codespell to 1.16.0\u003c/li\u003e\n\u003cli\u003erequirements-devel: uprev pycodestyle to 2.5.0\u003c/li\u003e\n\u003cli\u003erequirements-devel: uprev pyflakes to 2.1.1\u003c/li\u003e\n\u003cli\u003erequirements-devel: uprev pyftpdlib to 1.5.5\u003c/li\u003e\n\u003cli\u003erequirements-devel: uprev pyramid to 1.10.4\u003c/li\u003e\n\u003cli\u003eproject loader: remove noqa on import that’s no longer required\u003c/li\u003e\n\u003cli\u003econda plugin: simplify source url/checksum handling\u003c/li\u003e\n\u003cli\u003erepo: fix fetch_binary()'s return type for deb repo\u003c/li\u003e\n\u003cli\u003ecli: add missing argument to click.BadOptionUsage()\u003c/li\u003e\n\u003cli\u003ecli: label Optional types in lifecycle\u003c/li\u003e\n\u003cli\u003emeta: declare optional types for Snap\u003c/li\u003e\n\u003cli\u003emeta: fix Slot from_dict() to handle case where interface is undefined\u003c/li\u003e\n\u003cli\u003emeta: fix Plug’s from_dict() if interface is undefined\u003c/li\u003e\n\u003cli\u003emeta: fix typing error in ContentPlug’s from_dict()\u003c/li\u003e\n\u003cli\u003emeta: various fixes to better annotate type definitions and optionals\u003c/li\u003e\n\u003cli\u003ecmake plugin: declare type for _Flag.value\u003c/li\u003e\n\u003cli\u003epython plugin: declare return type Optional for _find_file()\u003c/li\u003e\n\u003cli\u003epython plugin: declare Optional arguments for _process_package_args()\u003c/li\u003e\n\u003cli\u003eextractors: ensure valid loader available in setuppy’s extract()\u003c/li\u003e\n\u003cli\u003eappstream: fix mypy typing error in _get_icon_from_theme()\u003c/li\u003e\n\u003cli\u003eextractors: set Optional types in ExtractedMetadata\u003c/li\u003e\n\u003cli\u003eextractors: use None as default parameter value for ExtractedMetadata\u003c/li\u003e\n\u003cli\u003estore: remove incorrect default for \u003ccode\u003estore\u003c/code\u003e parameter in (_try)_login()\u003c/li\u003e\n\u003cli\u003etests: fix incorrect regex format strings in test_store_push\u003c/li\u003e\n\u003cli\u003estoreapi: verify snap information before using\u003c/li\u003e\n\u003cli\u003estoreapi: only use errors with codes in StoreErrorList\u003c/li\u003e\n\u003cli\u003estoreapi: update return definition in acl()\u003c/li\u003e\n\u003cli\u003estoreapi: annotate Optional types in Channel\u003c/li\u003e\n\u003cli\u003estore: validate type for snap_ids in _human_readable_acls()\u003c/li\u003e\n\u003cli\u003eplugin handler: annotate Optionals in PluginHandler\u003c/li\u003e\n\u003cli\u003eplugin handler: address mypy errors in _handle_dependencies()\u003c/li\u003e\n\u003cli\u003emultipass provider: improve safety in _requests_exception_hint()\u003c/li\u003e\n\u003cli\u003emultipass provider: fix except in _fetch_installer_url()\u003c/li\u003e\n\u003cli\u003elxd provider: fix _run() return when hide_output is False\u003c/li\u003e\n\u003cli\u003elxd provider: address mypy uprev errrors\u003c/li\u003e\n\u003cli\u003elxd provider: fix incorrectly formatted error message\u003c/li\u003e\n\u003cli\u003esnap provider: add assertions to address mypy errors\u003c/li\u003e\n\u003cli\u003emultipass provider: label _instance_info as Optional\u003c/li\u003e\n\u003cli\u003ebase provider: address mypy errors in cached_home_directory()\u003c/li\u003e\n\u003cli\u003etests: fix type definition for Provider mock in test_build_providers\u003c/li\u003e\n\u003cli\u003etests: annotate get_version_codename() return type as Optional\u003c/li\u003e\n\u003cli\u003esteps: label return types as Optional\u003c/li\u003e\n\u003cli\u003edirs: ensure SNAP is defined when running as snap\u003c/li\u003e\n\u003cli\u003eyaml_utils: fix type annotations for dump()\u003c/li\u003e\n\u003cli\u003efile utils: ensure SNAP is defined in get_tool_path()\u003c/li\u003e\n\u003cli\u003econfig: label Optionals to address mypy errors\u003c/li\u003e\n\u003cli\u003eproject: minor refactoring for is_host_compatible_with_base()\u003c/li\u003e\n\u003cli\u003ecache: label Optional return for cache()\u003c/li\u003e\n\u003cli\u003eelf: minor type fix in _extract()\u003c/li\u003e\n\u003cli\u003etests: fix invalid format string in fake_servers\u003c/li\u003e\n\u003cli\u003elifecycle: minor type annotation fixes\u003c/li\u003e\n\u003cli\u003etests: fix format string in HookTestCase\u003c/li\u003e\n\u003cli\u003eremote-build: minor type fixes for LaunchpadClient\u003c/li\u003e\n\u003cli\u003eproject_loader: check latest_step is valid before returning\u003c/li\u003e\n\u003cli\u003eextensions: raise KeyError if kde or gnome are initialized without base\u003c/li\u003e\n\u003cli\u003eproject loader: explicitly check match in ToStatement grammar processing\u003c/li\u003e\n\u003cli\u003eproject loader: explicitly check match in OnStatement grammar processing\u003c/li\u003e\n\u003cli\u003eextensions: correctly annotate base as Optional\u003c/li\u003e\n\u003cli\u003egrammar: address GrammarProcessor typing issues\u003c/li\u003e\n\u003cli\u003einspection: annotate state_getter as Optional\u003c/li\u003e\n\u003cli\u003egrammar: annotate that statement’s else_bodies allows None\u003c/li\u003e\n\u003cli\u003egrammar: address mypy-detected type issues in Statement\u003c/li\u003e\n\u003cli\u003elifecycle: add optionals to StatusCache reports\u003c/li\u003e\n\u003cli\u003eproject: label get_build_base() return as optional\u003c/li\u003e\n\u003cli\u003eproject: ignore project.info’s Optional[ProjectInfo] type\u003c/li\u003e\n\u003cli\u003erequirements-devel: uprev mypy to 0.740\u003c/li\u003e\n\u003cli\u003eCODE_STYLE: update command to install black\u003c/li\u003e\n\u003cli\u003etools: add shellcheck to developer environment\u003c/li\u003e\n\u003cli\u003eHACKING: use code blocks rather than indents for commands\u003c/li\u003e\n\u003cli\u003eHACKING: remove odd blockquote\u003c/li\u003e\n\u003cli\u003exattrs: switch to python’s os package for reading/writing xattrs\u003c/li\u003e\n\u003cli\u003exattrs: ignore errors if SNAPCRAFT_BUILD_INFO is unset\u003c/li\u003e\n\u003cli\u003eremote-build: remove option to specify launchpad username\u003c/li\u003e\n\u003cli\u003eremote-build: login automatically when initialized\u003c/li\u003e\n\u003cli\u003eremote-build: fix AcceptPublicUploadError option\u003c/li\u003e\n\u003cli\u003eremote-build: remove _waiting from LaunchpadClient\u003c/li\u003e\n\u003cli\u003esources: disable gpg signing for git commit\u003c/li\u003e\n\u003cli\u003esources: improve command quoting in SnapcraftPullError\u003c/li\u003e\n\u003cli\u003esources: introduce GitCommandError for improved user-facing errors\u003c/li\u003e\n\u003cli\u003eremote-build: use easier to read git commit message format\u003c/li\u003e\n\u003cli\u003erust plugin: split RUSTUP_HOME and CARGO_HOME\u003c/li\u003e\n\u003cli\u003ehooks: enable command-chain in snapcraft.yaml (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2850\"\u003e#2850\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003ebase plugin: use shlex quoting for logged command in run() (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2846\"\u003e#2846\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003eproject: remove unused errors (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2855\"\u003e#2855\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003erust: add support for workspaces (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2842\"\u003e#2842\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003eremote-build: configurable timeout/deadline for starting and monitoring build (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2845\"\u003e#2845\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003emeta: enable Snap to be fully initialized with init parameters (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2857\"\u003e#2857\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003ecommon: generate run scripts which can execute independently (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2848\"\u003e#2848\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003emeta: remove Application’s \u003ccode\u003eprepend_command_chain\u003c/code\u003e (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2861\"\u003e#2861\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003eadd support for system-usernames (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2858\"\u003e#2858\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003eelf: remove return parameters for ElfFile’s _extract() (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2867\"\u003e#2867\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003eextensions: change extension merge-strategy to fix build-environment (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2882\"\u003e#2882\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003eelf: read ELF type when extracting attributes (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2888\"\u003e#2888\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003emeta: always generate snapcraft-runner to workaround classic PATH bug (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2889\"\u003e#2889\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003elifecycle: raise detailed error if mksquashfs fails (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2895\"\u003e#2895\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003emeta: include environment in hook wrappers (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2897\"\u003e#2897\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003emeta: remove dead code from snap packaging (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2898\"\u003e#2898\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003erequirements: uprev pyinstaller to 3.6 (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2905\"\u003e#2905\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003emeta: move Snap’s from_dict() system-username parsing into SystemUser (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2904\"\u003e#2904\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003emeta: do not prime commands with adapter == “none” (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2912\"\u003e#2912\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003espread: disable journal debug dump unless configured (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2913\"\u003e#2913\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003emeta: ensure Application passthrough is scrubbed for snap.yaml (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2914\"\u003e#2914\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003erust plugin: respect Cargo.lock if present in project (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2915\"\u003e#2915\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003erust plugin: fetch correct (locked) crates during pull (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2917\"\u003e#2917\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003emeta: initialize Snap at once in from_dict() (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2920\"\u003e#2920\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003eelf: ensure _GNU_VERSION_R section is of type GNUVerNeedSection (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2918\"\u003e#2918\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003eplugin handler: process elf files only if base is specified (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2926\"\u003e#2926\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003eelf: fixes for corrupt shared objects (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2929\"\u003e#2929\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003emeta: fix for missing content slot’s ‘content’ property (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2934\"\u003e#2934\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003espread tests: do not attempt to remove snapd snap (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2937\"\u003e#2937\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003eremote build: default to snapcraft’s stable channel (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2938\"\u003e#2938\u003c/a\u003e)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eHeather Ellsworth (2):\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRemove gsettings from comment in kde extension\u003c/li\u003e\n\u003cli\u003edocs: add punctuation rule for comments (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2844\"\u003e#2844\u003c/a\u003e)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eJames Henstridge:\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eelf: extract build ID and presence of debug info (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2229\"\u003e#2229\u003c/a\u003e)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eJeremie Deray:\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003ecatkin plugin: consider only ‘local’ workspaces (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2847\"\u003e#2847\u003c/a\u003e)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eKyle Fazzari:\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eelf: properly handle corrupted ELF files\u003c/li\u003e\n\u003cli\u003ewstool: don’t rely on host git (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2852\"\u003e#2852\u003c/a\u003e)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eMarcus Tomlinson:\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eextensions: use ensure_dir_exists instead of mkdir -p (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2886\"\u003e#2886\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003eextensions: symlink $XDG_RUNTIME_DIR/…/dconf/user for desktop parts (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2874\"\u003e#2874\u003c/a\u003e)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eMerlijn Sebrechts:\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eextensions: skip icon cache creation for theme and runtime snaps\u003c/li\u003e\n\u003cli\u003eextensions: Handle case when only user-dirs.locale doesn’t exist (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2930\"\u003e#2930\u003c/a\u003e)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eNickZ:\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003ebuild providers: fix multipass mount on win32 (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2894\"\u003e#2894\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003ecoherence checks: fix expressions so Windows paths are considered (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2919\"\u003e#2919\u003c/a\u003e)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eSergio Schvezov:\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003ecli: improve the remote-build upload messaging\u003c/li\u003e\n\u003cli\u003espread tests: update checkbox-ng dependency in plainbox run\u003c/li\u003e\n\u003cli\u003estatic tests: fix static tests\u003c/li\u003e\n\u003cli\u003estore cli: push title and license on push-metadata\u003c/li\u003e\n\u003cli\u003eappstream extractor: simplify the XSLT\u003c/li\u003e\n\u003cli\u003eappstream extractors: remove skips from tests\u003c/li\u003e\n\u003cli\u003eappstream extractor: add support for \u003ccode\u003e\u0026lt;em\u0026gt;\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eappstream extractor: add support for code\u003c/li\u003e\n\u003cli\u003eappstream extractor: take xml comments into account\u003c/li\u003e\n\u003cli\u003ego plugin: cleanup build procedure\u003c/li\u003e\n\u003cli\u003ego plugin: cleanup pull procedure\u003c/li\u003e\n\u003cli\u003ego plugin: add type annotations\u003c/li\u003e\n\u003cli\u003ego plugin: extract CGO_FLAGS into its own method\u003c/li\u003e\n\u003cli\u003ego plugin: support for go.mod\u003c/li\u003e\n\u003cli\u003espread tests: use source-depth: 1 for plainbox tests (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2863\"\u003e#2863\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003epython plugin: first try processing setup.py without PyPI (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2771\"\u003e#2771\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003ecli: implement progressive releases (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2868\"\u003e#2868\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003edocker: add core18 snap that snapcraft now uses as a base (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2883\"\u003e#2883\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003estatic: fix some valid flake8 issues (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2902\"\u003e#2902\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003etests: fix status test for staging store (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2903\"\u003e#2903\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003eci: publish the CI built snap to the Snap Store (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2900\"\u003e#2900\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003epython plugin: do not leak snapcraft’s site-packages (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2901\"\u003e#2901\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003eelf: search for host libraries within search paths (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2909\"\u003e#2909\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003estoreapi: remove exposure of series (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2921\"\u003e#2921\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003elogging: use .warning instead of deprecated .warn (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2928\"\u003e#2928\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003estore: improve platform detection (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2931\"\u003e#2931\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003ebuild providers: clean up LXD startup message (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2936\"\u003e#2936\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003ebuild providers: remove tzdata workaround (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2935\"\u003e#2935\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003estore: temprorarily remove support for progressive releases (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2946\"\u003e#2946\u003c/a\u003e)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eTed Kern:\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003ecatkin plugin: remove rospack workaround now that rosdep -i works (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2833\"\u003e#2833\u003c/a\u003e)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003edalance:\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003erust plugin: set rustup profile to minimal (\u003ca href=\"https://github.com/snapcore/snapcraft/pull/2767\"\u003e#2767\u003c/a\u003e)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/details\u003e","post_number":1,"post_type":1,"updated_at":"2021-12-09T09:32:07.612Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":119,"reads":28,"readers_count":27,"score":630.6,"yours":false,"topic_id":15773,"topic_slug":"release-notes-snapcraft-3-10","display_username":"Graham Morrison","primary_group_name":null,"primary_group_flair_url":null,"primary_group_flair_bg_color":null,"primary_group_flair_color":null,"version":2,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"link_counts":[{"url":"https://github.com/snapcore/snapcraft/releases/tag/3.10","internal":false,"reflection":false,"title":"Release Snapcraft 3.10 · snapcore/snapcraft · GitHub","clicks":5},{"url":"https://forum.snapcraft.io/t/remote-build/14400","internal":true,"reflection":false,"title":"Remote build","clicks":3},{"url":"https://forum.snapcraft.io/t/system-usernames/13386","internal":true,"reflection":false,"title":"System usernames","clicks":3},{"url":"https://forum.snapcraft.io/t/snapcraft-release-notes/10721","internal":true,"reflection":false,"title":"Snapcraft release notes","clicks":2},{"url":"https://github.com/snapcore/snapcraft/pull/2931","internal":false,"reflection":false,"title":"store: improve platform detection by sergiusens · Pull Request #2931 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2909","internal":false,"reflection":false,"title":"elf: search for host libraries within search paths by sergiusens · Pull Request #2909 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2883","internal":false,"reflection":false,"title":"docker: add core18 snap that snapcraft now uses as a base by sergiusens · Pull Request #2883 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2902","internal":false,"reflection":false,"title":"static: fix some valid flake8 issues by sergiusens · Pull Request #2902 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2868","internal":false,"reflection":false,"title":"cli: implement progressive releases by sergiusens · Pull Request #2868 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2874","internal":false,"reflection":false,"title":"Sync fixes from snapcraft-desktop-helpers (LP-1661626 \u0026 broken XDG link) by MarcusTomlinson · Pull Request #2874 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2886","internal":false,"reflection":false,"title":"Use ensure_dir_exists instead of mkdir -p by MarcusTomlinson · Pull Request #2886 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2937","internal":false,"reflection":false,"title":"spread tests: do not attempt to remove snapd snap by cjp256 · Pull Request #2937 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2938","internal":false,"reflection":false,"title":"remote build: default to snapcraft's stable channel by cjp256 · Pull Request #2938 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2929","internal":false,"reflection":false,"title":"elf: fixes for corrupt shared objects by cjp256 · Pull Request #2929 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2920","internal":false,"reflection":false,"title":"meta: initialize Snap at once in from_dict() by cjp256 · Pull Request #2920 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2917","internal":false,"reflection":false,"title":"rust plugin: fetch correct (locked) crates during pull by cjp256 · Pull Request #2917 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2905","internal":false,"reflection":false,"title":"requirements-devel: uprev pyinstaller to 3.6 by cjp256 · Pull Request #2905 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2913","internal":false,"reflection":false,"title":"spread: disable journal debug dump unless configured by cjp256 · Pull Request #2913 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2897","internal":false,"reflection":false,"title":"meta: include environment in hook wrappers by cjp256 · Pull Request #2897 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2895","internal":false,"reflection":false,"title":"lifecycle: raise detailed error if mksquashfs fails by cjp256 · Pull Request #2895 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2861","internal":false,"reflection":false,"title":"meta: remove Application's `prepend_command_chain` by cjp256 · Pull Request #2861 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2888","internal":false,"reflection":false,"title":"elf: read ELF type when extracting attributes by cjp256 · Pull Request #2888 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2867","internal":false,"reflection":false,"title":"elf: remove return parameters for ElfFile's _extract() by cjp256 · Pull Request #2867 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2857","internal":false,"reflection":false,"title":"meta: enable Snap to be fully initialized with __init__ parameters by cjp256 · Pull Request #2857 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2842","internal":false,"reflection":false,"title":"rust: add support for workspaces by cjp256 · Pull Request #2842 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2846","internal":false,"reflection":false,"title":"base plugin: use shlex quoting for logged command in run() by cjp256 · Pull Request #2846 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2740","internal":false,"reflection":false,"title":"crystal plugin: add flags to use during shards build by mamantoha · Pull Request #2740 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2850","internal":false,"reflection":false,"title":"hooks: enable command-chain by cjp256 · Pull Request #2850 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://blog.golang.org/using-go-modules","internal":false,"reflection":false,"title":"Using Go Modules - The Go Blog","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2767","internal":false,"reflection":false,"title":"rust plugin: add rustup profile by dalance · Pull Request #2767 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2946","internal":false,"reflection":false,"title":"store: temprorarily remove support for progressive releases by sergiusens · Pull Request #2946 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2935","internal":false,"reflection":false,"title":"build providers: remove tzdata workaround by sergiusens · Pull Request #2935 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2936","internal":false,"reflection":false,"title":"build providers: clean up LXD startup message by sergiusens · Pull Request #2936 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2901","internal":false,"reflection":false,"title":"python plugin: do not leak snapcraft's site-packages by sergiusens · Pull Request #2901 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2900","internal":false,"reflection":false,"title":"ci: publish the CI built snap to the Snap Store by sergiusens · Pull Request #2900 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2903","internal":false,"reflection":false,"title":"tests: fix status test for staging store by sergiusens · Pull Request #2903 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2771","internal":false,"reflection":false,"title":"python plugin: first try processing setup.py without PyPI by sergiusens · Pull Request #2771 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2863","internal":false,"reflection":false,"title":"spread tests: use source-depth: 1 for plainbox tests by sergiusens · Pull Request #2863 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2919","internal":false,"reflection":false,"title":"sanity_checks: fix sanity check on Windows by NickZ · Pull Request #2919 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2894","internal":false,"reflection":false,"title":"Fix issue with multipass mount on win32 by NickZ · Pull Request #2894 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2930","internal":false,"reflection":false,"clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2852","internal":false,"reflection":false,"clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2847","internal":false,"reflection":false,"clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2229","internal":false,"reflection":false,"title":"elf: extract build ID and presence of debug info by jhenstridge · Pull Request #2229 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2844","internal":false,"reflection":false,"title":"Add punctuation rule for comments by hellsworth · Pull Request #2844 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2934","internal":false,"reflection":false,"title":"meta: fix for missing content slot's 'content' property by cjp256 · Pull Request #2934 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2926","internal":false,"reflection":false,"title":"plugin handler: process elf files only if base is specified by cjp256 · Pull Request #2926 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2918","internal":false,"reflection":false,"title":"elf: ensure _GNU_VERSION_R section is of type GNUVerNeedSection by cjp256 · Pull Request #2918 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2915","internal":false,"reflection":false,"title":"rust plugin: respect Cargo.lock if present in project by cjp256 · Pull Request #2915 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2914","internal":false,"reflection":false,"title":"meta: ensure Application passthrough is scrubbed for snap.yaml by cjp256 · Pull Request #2914 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2912","internal":false,"reflection":false,"title":"meta: do not prime commands with adapter == \"none\" by cjp256 · Pull Request #2912 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2904","internal":false,"reflection":false,"title":"meta: move Snap's from_dict() system-username parsing into SystemUser by cjp256 · Pull Request #2904 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2898","internal":false,"reflection":false,"title":"meta: remove dead code from snap packaging by cjp256 · Pull Request #2898 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2889","internal":false,"reflection":false,"title":"meta: always generate snapcraft-runner to workaround classic PATH bug by cjp256 · Pull Request #2889 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2882","internal":false,"reflection":false,"title":"extensions: change extension merge-strategy to fix build-environment by cjp256 · Pull Request #2882 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2858","internal":false,"reflection":false,"title":"add support for system-usernames by cjp256 · Pull Request #2858 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2848","internal":false,"reflection":false,"title":"common: generate run scripts which can execute independently by cjp256 · Pull Request #2848 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2855","internal":false,"reflection":false,"title":"project: remove unused errors by cjp256 · Pull Request #2855 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2851","internal":false,"reflection":false,"title":"docker: test image builds with Travis CI by abitrolly · Pull Request #2851 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://doc.rust-lang.org/book/ch14-03-cargo-workspaces.html","internal":false,"reflection":false,"title":"Cargo Workspaces - The Rust Programming Language","clicks":0},{"url":"https://forum.snapcraft.io/t/snapcraft-overview/8940","internal":true,"reflection":false,"title":"Snapcraft overview","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2845","internal":false,"reflection":false,"title":"remote-build: configurable timeout/deadline for starting and monitoring build by cjp256 · Pull Request #2845 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2833","internal":false,"reflection":false,"title":"catkin: remove rospack workaround by Arnatious · Pull Request #2833 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2921","internal":false,"reflection":false,"title":"storeapi: remove exposure of series by sergiusens · Pull Request #2921 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://github.com/snapcore/snapcraft/pull/2928","internal":false,"reflection":false,"title":"logging: use .warning instead of deprecated .warn by sergiusens · Pull Request #2928 · snapcore/snapcraft · GitHub","clicks":0},{"url":"https://forum.snapcraft.io/t/snap-documentation/11127","internal":true,"reflection":true,"title":"Snap documentation","clicks":1}],"read":true,"user_title":null,"bookmarked":false,"actions_summary":[{"id":2,"count":2}],"moderator":true,"admin":true,"staff":true,"user_id":2772,"hidden":false,"trust_level":4,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":true,"last_wiki_edit":"2021-12-09T09:32:07.659Z","can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false}],"stream":[64085]},"timeline_lookup":[[1,1200]],"suggested_topics":[{"id":31049,"title":"Snapcraft How-to guides","fancy_title":"Snapcraft How-to guides","slug":"snapcraft-how-to-guides","posts_count":1,"reply_count":0,"highest_post_number":1,"image_url":null,"created_at":"2022-07-27T10:34:11.548Z","last_posted_at":"2022-07-27T10:34:11.663Z","bumped":true,"bumped_at":"2023-04-05T08:45:13.573Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags":[],"like_count":0,"views":1200,"category_id":15,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest single","description":"Original Poster, Most Recent Poster","user":{"id":2772,"username":"degville","name":"Graham Morrison","avatar_template":"/user_avatar/forum.snapcraft.io/degville/{size}/2021_2.png"}}]},{"id":31449,"title":"The gnome extension","fancy_title":"The gnome extension","slug":"the-gnome-extension","posts_count":4,"reply_count":1,"highest_post_number":5,"image_url":null,"created_at":"2022-08-24T15:47:37.290Z","last_posted_at":"2023-03-03T09:02:51.627Z","bumped":true,"bumped_at":"2023-03-03T09:02:51.627Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags":[],"like_count":0,"views":1500,"category_id":15,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":null,"description":"Original Poster","user":{"id":2772,"username":"degville","name":"Graham Morrison","avatar_template":"/user_avatar/forum.snapcraft.io/degville/{size}/2021_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":286,"username":"lucyllewy","name":"Lucy Llewellyn","avatar_template":"/user_avatar/forum.snapcraft.io/lucyllewy/{size}/9782_2.png"}},{"extras":"latest","description":"Most Recent Poster","user":{"id":14159,"username":"manuvarkey","name":"Manu Varkey","avatar_template":"/user_avatar/forum.snapcraft.io/manuvarkey/{size}/9635_2.png"}}]},{"id":34097,"title":"Set up classic confinement for a Makefile project","fancy_title":"Set up classic confinement for a Makefile project","slug":"set-up-classic-confinement-for-a-makefile-project","posts_count":2,"reply_count":0,"highest_post_number":2,"image_url":null,"created_at":"2023-02-27T16:32:26.768Z","last_posted_at":"2023-02-27T16:34:00.750Z","bumped":true,"bumped_at":"2023-02-27T16:34:00.750Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags":["how-to"],"like_count":0,"views":762,"category_id":15,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest single","description":"Original Poster, Most Recent Poster","user":{"id":14015,"username":"dboddie","name":"David Boddie","avatar_template":"/user_avatar/forum.snapcraft.io/dboddie/{size}/9564_2.png"}}]},{"id":32229,"title":"Library linter","fancy_title":"Library linter","slug":"library-linter","posts_count":2,"reply_count":0,"highest_post_number":2,"image_url":null,"created_at":"2022-10-18T17:35:43.980Z","last_posted_at":"2022-10-19T03:00:57.683Z","bumped":true,"bumped_at":"2022-10-19T03:00:57.683Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags":[],"like_count":3,"views":794,"category_id":15,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":null,"description":"Original Poster","user":{"id":3793,"username":"cmatsuoka","name":"Claudio Matsuoka","avatar_template":"/user_avatar/forum.snapcraft.io/cmatsuoka/{size}/9338_2.png"}},{"extras":"latest","description":"Most Recent Poster","user":{"id":393,"username":"jamesh","name":"James Henstridge","avatar_template":"/user_avatar/forum.snapcraft.io/jamesh/{size}/3947_2.png"}}]},{"id":31050,"title":"Snapcraft Explanation guides","fancy_title":"Snapcraft Explanation guides","slug":"snapcraft-explanation-guides","posts_count":2,"reply_count":0,"highest_post_number":2,"image_url":null,"created_at":"2022-07-27T11:41:43.445Z","last_posted_at":"2023-04-05T12:22:13.234Z","bumped":true,"bumped_at":"2023-04-05T12:22:13.234Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags":[],"like_count":2,"views":1139,"category_id":15,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":null,"description":"Original Poster","user":{"id":2772,"username":"degville","name":"Graham Morrison","avatar_template":"/user_avatar/forum.snapcraft.io/degville/{size}/2021_2.png"}},{"extras":"latest","description":"Most Recent Poster","user":{"id":11710,"username":"rpjday","name":"Robert P. J. Day","avatar_template":"/user_avatar/forum.snapcraft.io/rpjday/{size}/8457_2.png"}}]}],"tags":[],"id":15773,"title":"Release notes: Snapcraft 3.10","fancy_title":"Release notes: Snapcraft 3.10","posts_count":1,"created_at":"2020-03-03T09:13:24.950Z","views":4307,"reply_count":0,"like_count":2,"last_posted_at":"2020-03-03T09:13:25.218Z","visible":true,"closed":false,"archived":false,"has_summary":false,"archetype":"regular","slug":"release-notes-snapcraft-3-10","category_id":15,"word_count":2830,"deleted_at":null,"user_id":2772,"featured_link":null,"pinned_globally":false,"pinned_at":null,"pinned_until":null,"image_url":null,"slow_mode_seconds":0,"draft":null,"draft_key":"topic_15773","draft_sequence":null,"unpinned":null,"pinned":false,"current_post_number":1,"highest_post_number":1,"deleted_by":null,"actions_summary":[{"id":4,"count":0,"hidden":false,"can_act":false},{"id":8,"count":0,"hidden":false,"can_act":false},{"id":7,"count":0,"hidden":false,"can_act":false}],"chunk_size":20,"bookmarked":false,"topic_timer":null,"message_bus_last_id":0,"participant_count":1,"show_read_indicator":false,"thumbnails":null,"details":{"notification_level":1,"participants":[{"id":2772,"username":"degville","name":"Graham Morrison","avatar_template":"/user_avatar/forum.snapcraft.io/degville/{size}/2021_2.png","post_count":1,"primary_group_name":null,"primary_group_flair_url":null,"primary_group_flair_color":null,"primary_group_flair_bg_color":null}],"created_by":{"id":2772,"username":"degville","name":"Graham Morrison","avatar_template":"/user_avatar/forum.snapcraft.io/degville/{size}/2021_2.png"},"last_poster":{"id":2772,"username":"degville","name":"Graham Morrison","avatar_template":"/user_avatar/forum.snapcraft.io/degville/{size}/2021_2.png"},"links":[{"url":"https://github.com/snapcore/snapcraft/releases/tag/3.10","title":"Release Snapcraft 3.10 · snapcore/snapcraft · GitHub","internal":false,"attachment":false,"reflection":false,"clicks":5,"user_id":2772,"domain":"github.com","root_domain":"github.com"},{"url":"https://forum.snapcraft.io/t/remote-build/14400","title":"Remote build","internal":true,"attachment":false,"reflection":false,"clicks":3,"user_id":2772,"domain":"forum.snapcraft.io","root_domain":"snapcraft.io"},{"url":"https://forum.snapcraft.io/t/system-usernames/13386","title":"System usernames","internal":true,"attachment":false,"reflection":false,"clicks":3,"user_id":2772,"domain":"forum.snapcraft.io","root_domain":"snapcraft.io"},{"url":"https://forum.snapcraft.io/t/snapcraft-release-notes/10721","title":"Snapcraft release notes","internal":true,"attachment":false,"reflection":false,"clicks":2,"user_id":2772,"domain":"forum.snapcraft.io","root_domain":"snapcraft.io"},{"url":"https://forum.snapcraft.io/t/snap-documentation/11127","title":"Snap documentation","internal":true,"attachment":false,"reflection":true,"clicks":1,"user_id":898,"domain":"forum.snapcraft.io","root_domain":"snapcraft.io"}]}}