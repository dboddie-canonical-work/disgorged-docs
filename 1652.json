{"post_stream":{"posts":[{"id":7790,"name":"Jamie Strandboge","username":"jdstrand","avatar_template":"/user_avatar/forum.snapcraft.io/jdstrand/{size}/6376_2.png","created_at":"2017-08-11T15:08:17.510Z","cooked":"\u003cp\u003eToday, desktop applications can use the unity7 or x11 interfaces or both. The original idea behind these was that\u003c/p\u003e\n\u003col start=\"0\"\u003e\n\u003cli\u003ethey were transitional interfaces for legacy user session environments and\u003c/li\u003e\n\u003cli\u003eunity7 only could run on x11, so it duplicated the X policy so developers need only specify ‘unity7’\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eThe original idea is we would add interfaces for unity8, mir, wayland, gnome-shell, etc. Because of the time in which snapd involved (ie, we didn’t quite know where we were going: wayland, mir, unity8, gnome-shell, etc) the unity7 interface became a catchall for ‘legacy’ desktop security policy.\u003c/p\u003e\n\u003cp\u003eIn working with this policy and examining the current landscape, I think we should rethink our current plans. Since it is reasonable to assume that most developers want their snaps to work on as many desktops as possible and because we want to provide a path towards a future with non-transitional, secure desktop policy, \u003ca href=\"https://github.com/snapcore/snapd/pull/3719\"\u003eI propose we\u003c/a\u003e:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003egroup all contemporary Desktop Environment default policy into a new \u003ccode\u003edesktop\u003c/code\u003e interface. Contemporary  DE’s are defined to include those that can run without X. The policy shall be defined to be anything that can be reasonably confined[1] with access to common services (eg, gmenu). This interface will be autoconnected\u003c/li\u003e\n\u003cli\u003edisplay server policy shall not be duplicated in the \u003ccode\u003edesktop\u003c/code\u003e interface. Instead, snap developers specify which display server the snap is expected to work. In practice, they might \u003ccode\u003eplugs: [ desktop, mir, wayland, x11 ]\u003c/code\u003e. This is reasonable since developers would need to program their applications to work under different display servers and this declares where the snap is expected to work\u003c/li\u003e\n\u003cli\u003ebreak out accessibility into \u003ccode\u003edesktop-accessibility\u003c/code\u003e instead of having it included in \u003ccode\u003edesktop\u003c/code\u003e. a11y was not designed for application isolation and allows sniffing and injecting input events. The deficiencies of a11y were recently acknowledged within GNOME and, aiui, flatpaks currently can’t access the accessibility bus. We will allow specifying it as (possibly manually connected)[2] interface but as the security story improves upstream wrt accessibility, we can always add it to the \u003ccode\u003edesktop\u003c/code\u003e policy\u003c/li\u003e\n\u003cli\u003econtinue to have legacy DE policy in the unity7 interface, including duplicated x11 policy so that existing snaps continue to work like always\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eWith the above, we strive for \u003ccode\u003edesktop\u003c/code\u003e to be non-transitional, safe security policy and only add safe accesses to it. Unsafe/transitional accesses are broken out into other interfaces, like \u003ccode\u003edesktop-accessibility\u003c/code\u003e and \u003ccode\u003epassword-manager-service\u003c/code\u003e. Since applications need to be coded to work with different display servers and because we want users to be able to disconnect x11, display servers are also in their own interfaces instead of duplicated in the \u003ccode\u003edesktop\u003c/code\u003e interface.\u003c/p\u003e\n\u003cp\u003esnapcraft.yaml wanting to target today’s legacy DEs remains unchanged[3]:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eapps:\n  foo:\n    plugs:\n    - unity7\n    - x11\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003esnapcraft.yaml for applications that want to add the new contemporary DE policy to their existing legacy DE policy simply add \u003ccode\u003edesktop\u003c/code\u003e and optionally \u003ccode\u003edesktop-accessibility\u003c/code\u003e and \u003ccode\u003ewayland\u003c/code\u003e:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eapps:\n  foo:\n    plugs:\n    - unity7\n    - x11\n    - desktop\n    - desktop-accessibility\n    - wayland\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThe above allows the snap to work everywhere, but the security-conscious user running a wayland desktop can \u003ccode\u003esnap disconnect foo:x11 \u0026amp;\u0026amp; sudo snap disconnect foo:unity7\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003esnapcraft.yaml for applications expected to work only on contemporary DEs (eg, gnome-shell, plasma, sway) that may have an X fallback (eg, gnome-shell, plasma) simply adds the new \u003ccode\u003edesktop\u003c/code\u003e and \u003ccode\u003edesktop-accessibility\u003c/code\u003e interfaces:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eapps:\n  foo:\n    plugs:\n    - desktop\n    - desktop-accessibility\n    - wayland\n    - x11\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThe above allows the snap to work under X or Wayland, but the security-conscious user can \u003ccode\u003esnap disconnect foo:x11\u003c/code\u003e. In the future, when X11 is gone snap developers just drop \u003ccode\u003ex11\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eI believe the approach outlined in this topic allows us to remain compatible with all existing snaps, have reasonable snapcraft.yaml declarations for snap developers, provides a path forward for non-transitional and secure desktop policy and at the same time allows users to experiment today with disconnecting transitional policy.\u003c/p\u003e\n\u003cp\u003e[1] reasonably confined because it is not expected that every desktop DBus session service is currently coded with application isolation in mind. In other words, some things are still transitioning\u003cbr\u003e\n[2] we could consider this an auto-connectable transitional interface (eg, like gsettings). Because it is broken out into its own interface, a security-conscious user could always disconnect it.\u003cbr\u003e\n[3] as it happens, even though unity7 duplicates the policy in x11, most developers specify both (another reason to not duplicate with the new interfaces)\u003c/p\u003e","post_number":1,"post_type":1,"updated_at":"2017-08-11T15:08:17.510Z","reply_count":1,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":517,"reads":106,"readers_count":105,"score":2646.2,"yours":false,"topic_id":1652,"topic_slug":"desktop-interfaces-moving-forward","display_username":"Jamie Strandboge","primary_group_name":null,"primary_group_flair_url":null,"primary_group_flair_bg_color":null,"primary_group_flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"link_counts":[{"url":"https://github.com/snapcore/snapd/pull/3719","internal":false,"reflection":false,"title":"interfaces: add new desktop and desktop-accessibility by jdstrand · Pull Request #3719 · snapcore/snapd · GitHub","clicks":17},{"url":"https://forum.snapcraft.io/t/the-desktop-interfaces/2042","internal":true,"reflection":true,"title":"The desktop interfaces","clicks":2},{"url":"https://forum.snapcraft.io/t/desktop-allow-access-to-host-system-fonts/1796","internal":true,"reflection":true,"title":"Desktop: allow access to host system fonts","clicks":2}],"read":true,"user_title":"","bookmarked":false,"actions_summary":[{"id":2,"count":3}],"moderator":false,"admin":false,"staff":false,"user_id":21,"hidden":false,"trust_level":3,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":7791,"name":"Jamie Strandboge","username":"jdstrand","avatar_template":"/user_avatar/forum.snapcraft.io/jdstrand/{size}/6376_2.png","created_at":"2017-08-11T15:10:21.196Z","cooked":"\u003cp\u003e\u003ca class=\"mention\" href=\"/u/niemeyer\"\u003e@niemeyer\u003c/a\u003e and \u003ca class=\"mention\" href=\"/u/jamesh\"\u003e@jamesh\u003c/a\u003e -  when you get a chance, can you review/comment on this?\u003c/p\u003e","post_number":2,"post_type":1,"updated_at":"2017-08-11T15:10:21.196Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":1,"reads":85,"readers_count":84,"score":22.0,"yours":false,"topic_id":1652,"topic_slug":"desktop-interfaces-moving-forward","display_username":"Jamie Strandboge","primary_group_name":null,"primary_group_flair_url":null,"primary_group_flair_bg_color":null,"primary_group_flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":"","bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":21,"hidden":false,"trust_level":3,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":7801,"name":"Gustavo Niemeyer","username":"niemeyer","avatar_template":"/user_avatar/forum.snapcraft.io/niemeyer/{size}/4620_2.png","created_at":"2017-08-11T19:09:17.596Z","cooked":"\u003cp\u003eThat plan sounds great. It’s sort of where we were going towards as you mentioned, but adding that new desktop interface to the mix will greatly simplify the problem in terms of implementation and understanding.\u003c/p\u003e\n\u003cp\u003eThe one thing which might be worth changing is calling \u003cem\u003edesktop-accessibility\u003c/em\u003e simply as \u003cem\u003eaccessibility\u003c/em\u003e, similar to the other interfaces in this group. Do you see a reason for the explicit prefix in that case.\u003c/p\u003e","post_number":3,"post_type":1,"updated_at":"2017-08-11T19:09:17.596Z","reply_count":1,"reply_to_post_number":1,"quote_count":0,"incoming_link_count":0,"reads":80,"readers_count":79,"score":21.0,"yours":false,"topic_id":1652,"topic_slug":"desktop-interfaces-moving-forward","display_username":"Gustavo Niemeyer","primary_group_name":null,"primary_group_flair_url":null,"primary_group_flair_bg_color":null,"primary_group_flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"reply_to_user":{"username":"jdstrand","avatar_template":"/user_avatar/forum.snapcraft.io/jdstrand/{size}/6376_2.png"},"bookmarked":false,"actions_summary":[],"moderator":false,"admin":true,"staff":true,"user_id":1,"hidden":false,"trust_level":3,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":7807,"name":"Jamie Strandboge","username":"jdstrand","avatar_template":"/user_avatar/forum.snapcraft.io/jdstrand/{size}/6376_2.png","created_at":"2017-08-11T20:11:45.163Z","cooked":"\u003caside class=\"quote no-group\" data-username=\"niemeyer\" data-post=\"3\" data-topic=\"1652\"\u003e\n\u003cdiv class=\"title\"\u003e\n\u003cdiv class=\"quote-controls\"\u003e\u003c/div\u003e\n\u003cimg alt=\"\" width=\"20\" height=\"20\" src=\"https://forum.snapcraft.io/user_avatar/forum.snapcraft.io/niemeyer/40/4620_2.png\" class=\"avatar\"\u003e niemeyer:\u003c/div\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThe one thing which might be worth changing is calling desktop-accessibility simply as accessibility, similar to the other interfaces in this group. Do you see a reason for the explicit prefix in that case.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/aside\u003e\n\u003cp\u003eNo. I think \u003ccode\u003eaccessibility\u003c/code\u003e is better. I can’t really think of anything like that for cli/server installs so seems fine. I’ll update the PR.\u003c/p\u003e","post_number":4,"post_type":1,"updated_at":"2017-08-11T20:11:45.163Z","reply_count":0,"reply_to_post_number":3,"quote_count":1,"incoming_link_count":2,"reads":77,"readers_count":76,"score":70.4,"yours":false,"topic_id":1652,"topic_slug":"desktop-interfaces-moving-forward","display_username":"Jamie Strandboge","primary_group_name":null,"primary_group_flair_url":null,"primary_group_flair_bg_color":null,"primary_group_flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":"","bookmarked":false,"actions_summary":[{"id":2,"count":1}],"moderator":false,"admin":false,"staff":false,"user_id":21,"hidden":false,"trust_level":3,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":7959,"name":"James Henstridge","username":"jamesh","avatar_template":"/user_avatar/forum.snapcraft.io/jamesh/{size}/3947_2.png","created_at":"2017-08-15T07:40:58.736Z","cooked":"\u003cp\u003eMy main concern of splitting up the interfaces is that developers may only enable the interfaces that they personally need to get the app working.\u003c/p\u003e\n\u003cp\u003eI am particularly concerned about splitting off accessibility: GTK apps generally have some level of accessibility support by default, and we’d be cutting that off by default.  From a social perspective I’d prefer if the path of least resistance resulted in making the app usable to all.\u003c/p\u003e\n\u003cp\u003eI agree that the way a11y was exposed to the \u003ccode\u003eunity7\u003c/code\u003e interface is too open.  I guess it’s time to dig in to the what D-Bus calls are made over the a11y bus exactly, and whether we can have a confined app present itself in such a way that an unconfined a11y tool can control it.\u003c/p\u003e\n\u003cp\u003eAs for display server access, I think splitting them out sounds like a good idea.  It would be good if we could have Snapcraft do some form of linting to suggest people include both the \u003ccode\u003ewayland\u003c/code\u003e and \u003ccode\u003ex11\u003c/code\u003e interfaces together with \u003ccode\u003edesktop\u003c/code\u003e though so the snaps are future proofed.  This would also provide a way to ratchet down X11 access in future releases.  Perhaps something like the following:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eautoconnect both \u003ccode\u003ex11\u003c/code\u003e and \u003ccode\u003ewayland\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eautoconnect \u003ccode\u003ewayland\u003c/code\u003e, and only autoconnect \u003ccode\u003ex11\u003c/code\u003e if not used with \u003ccode\u003ewayland\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eonly autoconnect \u003ccode\u003ewayland\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003estop providing \u003ccode\u003ex11\u003c/code\u003e slot on core snap\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eThis way we could incrementally tighten things up while keeping 16.04 working.\u003c/p\u003e","post_number":5,"post_type":1,"updated_at":"2017-08-15T07:40:58.736Z","reply_count":3,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":0,"reads":70,"readers_count":69,"score":29.0,"yours":false,"topic_id":1652,"topic_slug":"desktop-interfaces-moving-forward","display_username":"James Henstridge","primary_group_name":null,"primary_group_flair_url":null,"primary_group_flair_bg_color":null,"primary_group_flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":393,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":7980,"name":"Jamie Strandboge","username":"jdstrand","avatar_template":"/user_avatar/forum.snapcraft.io/jdstrand/{size}/6376_2.png","created_at":"2017-08-15T13:07:53.365Z","cooked":"\u003cp\u003eI looked at the DBus calls before proposing this and the policy is here:\u003cbr\u003e\n\u003ca href=\"https://github.com/snapcore/snapd/pull/3719/files#diff-ab80baef68f0be37c567f9a89723373cR32\" class=\"onebox\" target=\"_blank\" rel=\"noopener\"\u003ehttps://github.com/snapcore/snapd/pull/3719/files#diff-ab80baef68f0be37c567f9a89723373cR32\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eFrom reading the policy you can see that it has a wide open ‘receive’ rule from any unconfined process using the accessibility bus. The problem is in the send rules and the way the API is designed, it uses integers rather than security labels for sending requests to a11y which means AppArmor can’t protect against attacks on the API (it can’t map the a11y application identifier to the security label). I did not write a POC to demonstrate how it could be abused because it is clear that the API today cannot be safely mediated and through discussions on the AppArmor mailing lists recently[1]:\u003c/p\u003e\n\u003cp\u003e“In the case of universal access technologies, we briefly looked at the\u003cbr\u003e\nAT-SPI accessibility bus during a GTK/Flatpak hackfest, and came to the\u003cbr\u003e\nconclusion that it is terrifying - it’s an ideal place to put a keylogger,\u003cbr\u003e\nor take control of windows outside the sandbox. That’s why Flatpak does\u003cbr\u003e\nnot give access to that bus. If we are going to have a11y that works for\u003cbr\u003e\nsandboxed apps and does not fundamentally undermine security, it will\u003cbr\u003e\nhave to be designed for the purpose by someone who understands both the\u003cbr\u003e\nsecurity model and the needs of a11y. At a minimum, it would need a\u003cbr\u003e\nconcept of more- and less-privileged peers on the bus, which it\u003cbr\u003e\ncurrently lacks.”\u003c/p\u003e\n\u003cp\u003eI then tested a11y in gnome-shell under confinement and also used the \u003ccode\u003echeck-a11y\u003c/code\u003e tool from \u003ca href=\"https://www.freedesktop.org/wiki/Accessibility/AT-SPI2/\"\u003ehttps://www.freedesktop.org/wiki/Accessibility/AT-SPI2/\u003c/a\u003e to see what typical accesses are, and it was clear that wide access is required for a11y to work. It is of course possible to modify a11y to be a trusted helper and either adjust its API or have it perform LSM checks at strategic points, but even if this was upstreamable, it would not be available to all distros any time soon and we would need this transitional interface.\u003c/p\u003e\n\u003cp\u003eAll combined, I decided to not pursue creating a crippled accessibility interface but instead to implement a fully functional interface that could be disconnected. Because of the nature of interfaces, it is not possible to disconnect parts of the interface[2].\u003c/p\u003e\n\u003cp\u003eSpecifically to this point: “My main concern of splitting up the interfaces is that developers may only enable the interfaces that they personally need to get the app working.” I don’t think this will be a problem in practice for several reasons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eas part of this work I plan to write a forum ‘doc’ topic on the subject, with example yaml and discussion of when to use what. This doc will suggest to always plugs both \u003ccode\u003edesktop\u003c/code\u003e and \u003ccode\u003eaccessibility\u003c/code\u003e (formerly \u003ccode\u003edesktop-accessibility\u003c/code\u003e).\u003c/li\u003e\n\u003cli\u003eif the developer forgets to plug the accessibility interface (or it is disconnected), when running the application, there will be denials logged just as part of application startup[3]. When putting an application in strict mode, one necessarily must look at the logs to see what interfaces to plug, so the need for the interface is discoverable[4]\u003c/li\u003e\n\u003cli\u003esnapcraft (parts) could reinforce what to add. Today the \u003ca href=\"https://wiki.ubuntu.com/snapcraft/parts\"\u003edesktop part\u003c/a\u003e has a list of things to add to ‘plugs’. This can be updated to include \u003ccode\u003edesktop\u003c/code\u003e and \u003ccode\u003eaccessibility\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003ewhen upstream has reworked the \u003ccode\u003ea11y\u003c/code\u003e system to be safe, we will simply add it to \u003ccode\u003edesktop\u003c/code\u003e, leaving \u003ccode\u003eaccessibility\u003c/code\u003e as a legacy transitional interface like x11\u003c/li\u003e\n\u003cli\u003eif a developer forgets to add the interface and someone reports the bug to the develoepr, it is trivial for the developer to add \u003ccode\u003eaccessibility\u003c/code\u003e to the \u003ccode\u003eplugs\u003c/code\u003e of the snap to fix the bug\u003c/li\u003e\n\u003cli\u003eif the above points aren’t enough, we can add a check to the review tools to warn if \u003ccode\u003eaccessibility\u003c/code\u003e is not specified with \u003ccode\u003edesktop\u003c/code\u003e (note, this strongly enforces they always be used together because not specifying accessibility would trigger a manual review in the store. I don’t recommend this)\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e[1]\u003ca href=\"https://lists.ubuntu.com/archives/apparmor/2017-August/010943.html\"\u003ehttps://lists.ubuntu.com/archives/apparmor/2017-August/010943.html\u003c/a\u003e\u003cbr\u003e\n[2]it is actually possible via attributes (see the docker snap), but this is opt-in by the developer and is much more complicated than simply adding the interface to \u003ccode\u003eplugs\u003c/code\u003e\u003cbr\u003e\n[3]\u003ccode\u003eapparmor=\"DENIED\" operation=\"dbus_method_call\"  bus=\"accessibility\" path=\"/org/freedesktop/DBus\" interface=\"org.freedesktop.DBus\" member=\"Hello\" mask=\"send\" name=\"org.freedesktop.DBus\" pid=9841 label=\"snap.gedit.gedit\" peer_label=\"unconfined\"\u003c/code\u003e\u003cbr\u003e\n[4]snappy-debug will suggest the interface too, once parsing DBus rules is supported by the tool\u003c/p\u003e","post_number":6,"post_type":1,"updated_at":"2017-08-15T13:12:50.805Z","reply_count":0,"reply_to_post_number":5,"quote_count":0,"incoming_link_count":3,"reads":59,"readers_count":58,"score":26.8,"yours":false,"topic_id":1652,"topic_slug":"desktop-interfaces-moving-forward","display_username":"Jamie Strandboge","primary_group_name":null,"primary_group_flair_url":null,"primary_group_flair_bg_color":null,"primary_group_flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"link_counts":[{"url":"https://github.com/snapcore/snapd/pull/3719/files#diff-ab80baef68f0be37c567f9a89723373cR32","internal":false,"reflection":false,"title":"interfaces: add new desktop and desktop-accessibility by jdstrand · Pull Request #3719 · snapcore/snapd · GitHub","clicks":5},{"url":"https://www.freedesktop.org/wiki/Accessibility/AT-SPI2/","internal":false,"reflection":false,"title":"AT-SPI2","clicks":3},{"url":"https://lists.ubuntu.com/archives/apparmor/2017-August/010943.html","internal":false,"reflection":false,"title":"[apparmor] RFC: draft proposal for enabling AppArmor by default in Debian","clicks":3},{"url":"https://wiki.ubuntu.com/snapcraft/parts","internal":false,"reflection":false,"title":"snapcraft/parts - Ubuntu Wiki","clicks":0}],"read":true,"user_title":"","reply_to_user":{"username":"jamesh","avatar_template":"/user_avatar/forum.snapcraft.io/jamesh/{size}/3947_2.png"},"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":21,"hidden":false,"trust_level":3,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":7981,"name":"Jamie Strandboge","username":"jdstrand","avatar_template":"/user_avatar/forum.snapcraft.io/jdstrand/{size}/6376_2.png","created_at":"2017-08-15T13:09:17.623Z","cooked":"\u003caside class=\"quote no-group\" data-username=\"jamesh\" data-post=\"5\" data-topic=\"1652\"\u003e\n\u003cdiv class=\"title\"\u003e\n\u003cdiv class=\"quote-controls\"\u003e\u003c/div\u003e\n\u003cimg alt=\"\" width=\"20\" height=\"20\" src=\"https://forum.snapcraft.io/user_avatar/forum.snapcraft.io/jamesh/40/3947_2.png\" class=\"avatar\"\u003e jamesh:\u003c/div\u003e\n\u003cblockquote\u003e\n\u003cp\u003eAs for display server access, I think splitting them out sounds like a good idea.  It would be good if we could have Snapcraft do some form of linting to suggest people include both the wayland and x11 interfaces together with desktop though so the snaps are future proofed.  This would also provide a way to ratchet down X11 access in future releases.  Perhaps something like the following:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eautoconnect both x11 and wayland\u003c/li\u003e\n\u003cli\u003eautoconnect wayland, and only autoconnect x11 if not used with wayland\u003c/li\u003e\n\u003cli\u003eonly autoconnect wayland\u003c/li\u003e\n\u003cli\u003estop providing x11 slot on core snap\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThis way we could incrementally tighten things up while keeping 16.04 working.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/aside\u003e\n\u003cp\u003eThis makes a lot of sense and is along the lines of what I was thinking too.\u003c/p\u003e","post_number":7,"post_type":1,"updated_at":"2017-08-15T13:09:17.623Z","reply_count":0,"reply_to_post_number":5,"quote_count":1,"incoming_link_count":0,"reads":46,"readers_count":45,"score":9.2,"yours":false,"topic_id":1652,"topic_slug":"desktop-interfaces-moving-forward","display_username":"Jamie Strandboge","primary_group_name":null,"primary_group_flair_url":null,"primary_group_flair_bg_color":null,"primary_group_flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":"","bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":21,"hidden":false,"trust_level":3,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":8020,"name":"Gustavo Niemeyer","username":"niemeyer","avatar_template":"/user_avatar/forum.snapcraft.io/niemeyer/{size}/4620_2.png","created_at":"2017-08-15T16:11:29.871Z","cooked":"\u003caside class=\"quote no-group\" data-username=\"jamesh\" data-post=\"5\" data-topic=\"1652\"\u003e\n\u003cdiv class=\"title\"\u003e\n\u003cdiv class=\"quote-controls\"\u003e\u003c/div\u003e\n\u003cimg alt=\"\" width=\"20\" height=\"20\" src=\"https://forum.snapcraft.io/user_avatar/forum.snapcraft.io/jamesh/40/3947_2.png\" class=\"avatar\"\u003e jamesh:\u003c/div\u003e\n\u003cblockquote\u003e\n\u003cp\u003eI am particularly concerned about splitting off accessibility: GTK apps generally have some level of accessibility support by default, and we’d be cutting that off by default.  From a social perspective I’d prefer if the path of least resistance resulted in making the app usable to all.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/aside\u003e\n\u003cp\u003eThis topic is part of the continued tension between usability and confinement. The path of least resistance and least trouble is to make everything wide open and accessible to everyone. That’s why we have classic confinement in place. This path is also the one that leads to no protection to the system and to the user.\u003c/p\u003e\n\u003cp\u003eIf we find a way to enable accessibility in a confined way, then obviously that’s the best outcome. If we can’t confine it properly, then we need to make a decision about whether to split it out, or whether to not split anything at all. Splitting x11 from wayland for safety and then making the application widely exposed via a different API won’t help much.\u003c/p\u003e\n\u003caside class=\"quote no-group\" data-username=\"jamesh\" data-post=\"5\" data-topic=\"1652\"\u003e\n\u003cdiv class=\"title\"\u003e\n\u003cdiv class=\"quote-controls\"\u003e\u003c/div\u003e\n\u003cimg alt=\"\" width=\"20\" height=\"20\" src=\"https://forum.snapcraft.io/user_avatar/forum.snapcraft.io/jamesh/40/3947_2.png\" class=\"avatar\"\u003e jamesh:\u003c/div\u003e\n\u003cblockquote\u003e\n\u003cp\u003eI agree that the way a11y was exposed to the unity7 interface is too open.  I guess it’s time to dig in to the what D-Bus calls are made over the a11y bus exactly, and whether we can have a confined app present itself in such a way that an unconfined a11y tool can control it.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/aside\u003e\n\u003cp\u003eThanks for looking into this. Again, that would be the best outcome.\u003c/p\u003e","post_number":8,"post_type":1,"updated_at":"2017-08-15T16:11:29.871Z","reply_count":1,"reply_to_post_number":5,"quote_count":1,"incoming_link_count":0,"reads":45,"readers_count":44,"score":14.0,"yours":false,"topic_id":1652,"topic_slug":"desktop-interfaces-moving-forward","display_username":"Gustavo Niemeyer","primary_group_name":null,"primary_group_flair_url":null,"primary_group_flair_bg_color":null,"primary_group_flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":true,"staff":true,"user_id":1,"hidden":false,"trust_level":3,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":8063,"name":"James Henstridge","username":"jamesh","avatar_template":"/user_avatar/forum.snapcraft.io/jamesh/{size}/3947_2.png","created_at":"2017-08-16T05:46:32.154Z","cooked":"\u003caside class=\"quote no-group\" data-username=\"niemeyer\" data-post=\"8\" data-topic=\"1652\"\u003e\n\u003cdiv class=\"title\"\u003e\n\u003cdiv class=\"quote-controls\"\u003e\u003c/div\u003e\n\u003cimg alt=\"\" width=\"20\" height=\"20\" src=\"https://forum.snapcraft.io/user_avatar/forum.snapcraft.io/niemeyer/40/4620_2.png\" class=\"avatar\"\u003e niemeyer:\u003c/div\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThis topic is part of the continued tension between usability and confinement. The path of least resistance and least trouble is to make everything wide open and accessible to everyone. That’s why we have classic confinement in place. This path is also the one that leads to no protection to the system and to the user.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/aside\u003e\n\u003cp\u003eThat sounds like an argument about whether or not the accessibility framework should be exposed to confined apps.  But here we’re talking about whether it should be in its own interface or merged into the main \u003ccode\u003edesktop\u003c/code\u003e interface.  And if we decide to autoconnect the \u003ccode\u003eaccessibility\u003c/code\u003e interface, we’re in pretty much the same situation as if it was in \u003ccode\u003edesktop\u003c/code\u003e: the only difference is that developers can now accidentally make their app unaccessible.\u003c/p\u003e\n\u003cp\u003eI’m not sure what the best solution is, but I think it’d be good to have a solid rationale for whatever we decide.  Even if we go for separate interfaces in the short term, I think it would be good to aim to add “secure next gen a11y” to the \u003ccode\u003edesktop\u003c/code\u003e interface in the future.\u003c/p\u003e","post_number":9,"post_type":1,"updated_at":"2017-08-16T05:46:32.154Z","reply_count":1,"reply_to_post_number":8,"quote_count":1,"incoming_link_count":0,"reads":48,"readers_count":47,"score":14.6,"yours":false,"topic_id":1652,"topic_slug":"desktop-interfaces-moving-forward","display_username":"James Henstridge","primary_group_name":null,"primary_group_flair_url":null,"primary_group_flair_bg_color":null,"primary_group_flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":393,"hidden":false,"trust_level":2,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":8102,"name":"Jamie Strandboge","username":"jdstrand","avatar_template":"/user_avatar/forum.snapcraft.io/jdstrand/{size}/6376_2.png","created_at":"2017-08-16T13:22:46.308Z","cooked":"\u003cp\u003eI gave the rationale: you are right that in practice there is no difference for most people if we auto-connect them than if we had them in the desktop interface to begin with. The point is to move to a future world where a desktop snap doesn’t need any unsafe accesses-- keeping \u003ccode\u003edesktop\u003c/code\u003e as safe as we can and having additional transitional interfaces on the side until we get there is a step towards that. If it (a11y, but the same applies to \u003ccode\u003edesktop-input\u003c/code\u003e) is in the \u003ccode\u003edesktop\u003c/code\u003e interface, there is no way to move forward and remove unsafe accesses without breaking applications.\u003c/p\u003e\n\u003cp\u003eIf it is separate:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ewe can add to \u003ccode\u003edesktop\u003c/code\u003e the future safe accesses for accessibility and desktop-input\u003c/li\u003e\n\u003cli\u003epeople can choose to experiment with accessibility and desktop-input as disconnected interfaces, thus helping us make sure \u003ccode\u003edesktop\u003c/code\u003e is solid. This happens to provide immediate benefit \u003cem\u003etoday\u003c/em\u003e for security-conscious users that opt into it\u003c/li\u003e\n\u003cli\u003ewe ensure compatibility going forward. As \u003ccode\u003edesktop\u003c/code\u003e evolves and has safe \u003ccode\u003ea11y\u003c/code\u003e and input methods, snap developers on a stable series (ie, series 16) can choose to remove \u003ccode\u003eaccessibility\u003c/code\u003e and \u003ccode\u003edesktop-input\u003c/code\u003e during that series, without having to wait for a future series 18 or 20 to remove the unsafe accesses from the \u003ccode\u003edesktop\u003c/code\u003e interface. Snaps that are slow to change continue to work fine\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eI also mentioned that through documentation, snapcraft parts, snappy-debug, etc, etc we can make this easy for snap developers. The typical user will not need to understand any of this.\u003c/p\u003e","post_number":10,"post_type":1,"updated_at":"2017-08-16T13:24:00.688Z","reply_count":0,"reply_to_post_number":9,"quote_count":0,"incoming_link_count":2,"reads":48,"readers_count":47,"score":49.6,"yours":false,"topic_id":1652,"topic_slug":"desktop-interfaces-moving-forward","display_username":"Jamie Strandboge","primary_group_name":null,"primary_group_flair_url":null,"primary_group_flair_bg_color":null,"primary_group_flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"read":true,"user_title":"","reply_to_user":{"username":"jamesh","avatar_template":"/user_avatar/forum.snapcraft.io/jamesh/{size}/3947_2.png"},"bookmarked":false,"actions_summary":[{"id":2,"count":2}],"moderator":false,"admin":false,"staff":false,"user_id":21,"hidden":false,"trust_level":3,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":9015,"name":"Jamie Strandboge","username":"jdstrand","avatar_template":"/user_avatar/forum.snapcraft.io/jdstrand/{size}/6376_2.png","created_at":"2017-08-25T19:30:00.847Z","cooked":"\u003cp\u003eFrom \u003ca href=\"https://github.com/snapcore/snapd/pull/3719#issuecomment-325010569:\"\u003ehttps://github.com/snapcore/snapd/pull/3719#issuecomment-325010569:\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\"Ok, Gustavo and I talked about this with James’ comments in mind. The plan of action is:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ecreate the ‘desktop’ interface that contains only safe accesses (ie, what is proposed)\u003c/li\u003e\n\u003cli\u003ecreate a ‘desktop-legacy’ interface that is auto-connected today that contains accessibility and input methods\u003c/li\u003e\n\u003cli\u003eadjust the snapcraft desktop part to suggest adding these interfaces\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eWhat this allows is:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eany snaps that currently use unity7, x11, etc continue to work without modification\u003c/li\u003e\n\u003cli\u003efor snaps that add desktop and desktop-legacy\n\u003cul\u003e\n\u003cli\u003ethey get support for gnome-shell, plasma, sway, etc\u003c/li\u003e\n\u003cli\u003ewe’ll add safe accesses to the desktop interface as they arrive (eg, portals, upstream ibus changes, etc) and snaps benefit without modification of snapcraft.yaml\u003c/li\u003e\n\u003cli\u003ewe have the opportunity to add other unsafe accesses to the ‘desktop-legacy’ catch-all interface in case there are other services/etc that should be added and snaps benefit without modification of snapcraft.yaml\u003c/li\u003e\n\u003cli\u003esometime in the future, when ‘desktop’ has everything a desktop snap reasonably needs, we’ll make desktop-legacy, x11 and unity7 manually connected (not necessarily at the same time). This will allow snaps using standard toolkits to continue to work without needing to update their snapcraft.yaml (ie, they may continue to plugs both, but only ‘desktop’ is auto-connected). Snaps legitimately needing desktop-legacy can have a snap declartation for it\u003c/li\u003e\n\u003cli\u003esecurity-conscious people and developers improving desktop security can experiment with disconnecting ‘desktop-legacy’ today\"\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e","post_number":11,"post_type":1,"updated_at":"2017-08-25T19:30:00.847Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":4,"reads":44,"readers_count":43,"score":28.8,"yours":false,"topic_id":1652,"topic_slug":"desktop-interfaces-moving-forward","display_username":"Jamie Strandboge","primary_group_name":null,"primary_group_flair_url":null,"primary_group_flair_bg_color":null,"primary_group_flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"link_counts":[{"url":"https://github.com/snapcore/snapd/pull/3719#issuecomment-325010569:","internal":false,"reflection":false,"title":"interfaces: add desktop and desktop-legacy by jdstrand · Pull Request #3719 · snapcore/snapd · GitHub","clicks":6}],"read":true,"user_title":"","bookmarked":false,"actions_summary":[],"moderator":false,"admin":false,"staff":false,"user_id":21,"hidden":false,"trust_level":3,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false}],"stream":[7790,7791,7801,7807,7959,7980,7981,8020,8063,8102,9015]},"timeline_lookup":[[1,2134],[5,2131],[8,2130],[11,2120]],"suggested_topics":[{"id":35348,"title":"Changes to shared-memory slot aren't applied on refresh/install","fancy_title":"Changes to shared-memory slot aren\u0026rsquo;t applied on refresh/install","slug":"changes-to-shared-memory-slot-arent-applied-on-refresh-install","posts_count":2,"reply_count":0,"highest_post_number":2,"image_url":null,"created_at":"2023-05-26T20:14:48.695Z","last_posted_at":"2023-06-02T20:48:32.728Z","bumped":true,"bumped_at":"2023-06-02T20:48:32.728Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags":[],"like_count":0,"views":78,"category_id":5,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":null,"description":"Original Poster","user":{"id":12892,"username":"amarteyp","name":"","avatar_template":"/letter_avatar/amarteyp/{size}/5_6d6f4cde2641c35611d5cac2fb97c77e.png"}},{"extras":"latest","description":"Most Recent Poster","user":{"id":10511,"username":"alexclewontin","name":"Alex Lewontin","avatar_template":"/letter_avatar/alexclewontin/{size}/5_6d6f4cde2641c35611d5cac2fb97c77e.png"}}]},{"id":35290,"title":"Apparmor denial in new snap-store despite connected packagekit-control interface","fancy_title":"Apparmor denial in new snap-store despite connected packagekit-control interface","slug":"apparmor-denial-in-new-snap-store-despite-connected-packagekit-control-interface","posts_count":2,"reply_count":0,"highest_post_number":2,"image_url":null,"created_at":"2023-05-24T12:48:16.725Z","last_posted_at":"2023-06-12T14:47:02.601Z","bumped":true,"bumped_at":"2023-06-12T14:47:02.601Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags":[],"like_count":1,"views":111,"category_id":5,"featured_link":null,"has_accepted_answer":true,"posters":[{"extras":"latest single","description":"Original Poster, Most Recent Poster","user":{"id":14611,"username":"loose","name":"Dennis Loose","avatar_template":"/letter_avatar/loose/{size}/5_6d6f4cde2641c35611d5cac2fb97c77e.png"}}]},{"id":35602,"title":"How to allow snap access to \"/dev/pts/0\" devices","fancy_title":"How to allow snap access to \u0026ldquo;/dev/pts/0\u0026rdquo; devices","slug":"how-to-allow-snap-access-to-dev-pts-0-devices","posts_count":2,"reply_count":0,"highest_post_number":2,"image_url":null,"created_at":"2023-06-13T20:22:54.176Z","last_posted_at":"2023-06-14T09:10:53.918Z","bumped":true,"bumped_at":"2023-06-14T09:10:53.918Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags":[],"like_count":1,"views":47,"category_id":5,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":null,"description":"Original Poster","user":{"id":14625,"username":"vvavrychuk","name":"Vasyl Vavrychuk","avatar_template":"/user_avatar/forum.snapcraft.io/vvavrychuk/{size}/9864_2.png"}},{"extras":"latest","description":"Most Recent Poster","user":{"id":13169,"username":"SamAlex","name":"","avatar_template":"/user_avatar/forum.snapcraft.io/samalex/{size}/9155_2.png"}}]},{"id":31608,"title":"Help cleaning snaps in Ubuntu 22.04","fancy_title":"Help cleaning snaps in Ubuntu 22.04","slug":"help-cleaning-snaps-in-ubuntu-22-04","posts_count":3,"reply_count":1,"highest_post_number":3,"image_url":null,"created_at":"2022-09-04T18:08:59.949Z","last_posted_at":"2022-09-05T09:03:22.766Z","bumped":true,"bumped_at":"2022-09-05T09:03:22.766Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags":[],"like_count":1,"views":412,"category_id":5,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":13129,"username":"edufissure","name":"Eduardo","avatar_template":"/letter_avatar/edufissure/{size}/5_6d6f4cde2641c35611d5cac2fb97c77e.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":860,"username":"alan_g","name":"Alan Griffiths","avatar_template":"/user_avatar/forum.snapcraft.io/alan_g/{size}/4484_2.png"}}]},{"id":30911,"title":"Something amiss with classic snaps - EACCES error trying to access /var/lib/snapd/void (specifically node)","fancy_title":"Something amiss with classic snaps - EACCES error trying to access /var/lib/snapd/void (specifically node)","slug":"something-amiss-with-classic-snaps-eacces-error-trying-to-access-var-lib-snapd-void-specifically-node","posts_count":9,"reply_count":6,"highest_post_number":9,"image_url":null,"created_at":"2022-07-15T17:14:29.086Z","last_posted_at":"2022-07-15T19:45:10.853Z","bumped":true,"bumped_at":"2022-07-15T19:45:10.853Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags":[],"like_count":3,"views":757,"category_id":5,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":286,"username":"lucyllewy","name":"Lucy Llewellyn","avatar_template":"/user_avatar/forum.snapcraft.io/lucyllewy/{size}/9782_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":4339,"username":"ppd","name":"Maximilian Federle","avatar_template":"/user_avatar/forum.snapcraft.io/ppd/{size}/8639_2.png"}}]}],"tags":[],"id":1652,"title":"Desktop interfaces moving forward","fancy_title":"Desktop interfaces moving forward","posts_count":11,"created_at":"2017-08-11T15:08:17.414Z","views":3249,"reply_count":7,"like_count":6,"last_posted_at":"2017-08-25T19:30:00.847Z","visible":true,"closed":false,"archived":false,"has_summary":false,"archetype":"regular","slug":"desktop-interfaces-moving-forward","category_id":5,"word_count":2990,"deleted_at":null,"user_id":21,"featured_link":null,"pinned_globally":false,"pinned_at":null,"pinned_until":null,"image_url":null,"slow_mode_seconds":0,"draft":null,"draft_key":"topic_1652","draft_sequence":null,"unpinned":null,"pinned":false,"current_post_number":1,"highest_post_number":11,"deleted_by":null,"actions_summary":[{"id":4,"count":0,"hidden":false,"can_act":false},{"id":8,"count":0,"hidden":false,"can_act":false},{"id":7,"count":0,"hidden":false,"can_act":false}],"chunk_size":20,"bookmarked":false,"topic_timer":null,"message_bus_last_id":0,"participant_count":3,"show_read_indicator":false,"thumbnails":null,"details":{"notification_level":1,"participants":[{"id":21,"username":"jdstrand","name":"Jamie Strandboge","avatar_template":"/user_avatar/forum.snapcraft.io/jdstrand/{size}/6376_2.png","post_count":7,"primary_group_name":null,"primary_group_flair_url":null,"primary_group_flair_color":null,"primary_group_flair_bg_color":null},{"id":1,"username":"niemeyer","name":"Gustavo Niemeyer","avatar_template":"/user_avatar/forum.snapcraft.io/niemeyer/{size}/4620_2.png","post_count":2,"primary_group_name":null,"primary_group_flair_url":null,"primary_group_flair_color":null,"primary_group_flair_bg_color":null},{"id":393,"username":"jamesh","name":"James Henstridge","avatar_template":"/user_avatar/forum.snapcraft.io/jamesh/{size}/3947_2.png","post_count":2,"primary_group_name":null,"primary_group_flair_url":null,"primary_group_flair_color":null,"primary_group_flair_bg_color":null}],"created_by":{"id":21,"username":"jdstrand","name":"Jamie Strandboge","avatar_template":"/user_avatar/forum.snapcraft.io/jdstrand/{size}/6376_2.png"},"last_poster":{"id":21,"username":"jdstrand","name":"Jamie Strandboge","avatar_template":"/user_avatar/forum.snapcraft.io/jdstrand/{size}/6376_2.png"},"links":[{"url":"https://github.com/snapcore/snapd/pull/3719","title":"interfaces: add new desktop and desktop-accessibility by jdstrand · Pull Request #3719 · snapcore/snapd · GitHub","internal":false,"attachment":false,"reflection":false,"clicks":17,"user_id":21,"domain":"github.com","root_domain":"github.com"},{"url":"https://github.com/snapcore/snapd/pull/3719#issuecomment-325010569:","title":"interfaces: add desktop and desktop-legacy by jdstrand · Pull Request #3719 · snapcore/snapd · GitHub","internal":false,"attachment":false,"reflection":false,"clicks":6,"user_id":21,"domain":"github.com","root_domain":"github.com"},{"url":"https://github.com/snapcore/snapd/pull/3719/files#diff-ab80baef68f0be37c567f9a89723373cR32","title":"interfaces: add new desktop and desktop-accessibility by jdstrand · Pull Request #3719 · snapcore/snapd · GitHub","internal":false,"attachment":false,"reflection":false,"clicks":5,"user_id":21,"domain":"github.com","root_domain":"github.com"},{"url":"https://lists.ubuntu.com/archives/apparmor/2017-August/010943.html","title":"[apparmor] RFC: draft proposal for enabling AppArmor by default in Debian","internal":false,"attachment":false,"reflection":false,"clicks":3,"user_id":21,"domain":"lists.ubuntu.com","root_domain":"ubuntu.com"},{"url":"https://www.freedesktop.org/wiki/Accessibility/AT-SPI2/","title":"AT-SPI2","internal":false,"attachment":false,"reflection":false,"clicks":3,"user_id":21,"domain":"www.freedesktop.org","root_domain":"freedesktop.org"},{"url":"https://forum.snapcraft.io/t/the-desktop-interfaces/2042","title":"The desktop interfaces","internal":true,"attachment":false,"reflection":true,"clicks":2,"user_id":21,"domain":"forum.snapcraft.io","root_domain":"snapcraft.io"},{"url":"https://forum.snapcraft.io/t/desktop-allow-access-to-host-system-fonts/1796","title":"Desktop: allow access to host system fonts","internal":true,"attachment":false,"reflection":true,"clicks":2,"user_id":393,"domain":"forum.snapcraft.io","root_domain":"snapcraft.io"}]}}