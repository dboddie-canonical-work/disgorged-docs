{"post_stream":{"posts":[{"id":2741,"name":"Wiki Content","username":"wiki","avatar_template":"/user_avatar/forum.snapcraft.io/wiki/{size}/425_2.png","created_at":"2017-05-11T17:04:33.428Z","cooked":"\u003cp\u003eWithout custom flags at installation, or subsequent \u003ca href=\"/t/interface-management/6154\"\u003einterface connections\u003c/a\u003e, snaps are confined to a restrictive security sandbox with no access to system resources outside of the snap.\u003c/p\u003e\n\u003cp\u003eSnap developers need to be aware of the scope their applications have from within the snap.\u003c/p\u003e\n\u003cp\u003eSecurity policies and store policies work together to allow developers to quickly update their applications, and to provide safety to end users, and this document describes the sandbox and how to configure and work with the security policies for snaps you publish.\u003c/p\u003e\n\u003cp\u003eFor more general details on what confinement entails, see \u003ca href=\"/t/snap-confinement/6233\"\u003eSnap confinement\u003c/a\u003e, and see below for implementation details:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"#heading--walkthrough\"\u003eSecurity policy overview\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#heading--permissions\"\u003eAppArmor, Seccomp and device permissions\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#heading--refresh\"\u003eRefresh awareness security policy\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#heading--interface\"\u003eInterface security policies\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eFor help resolving issues that may arise from a snap’s security policy, see \u003ca href=\"/t/debugging-snaps/18420\"\u003eDebugging snaps\u003c/a\u003e.\u003c/p\u003e\n\u003ch2 id=\"heading--walkthrough\"\u003eSecurity policy overview\u003c/h2\u003e\n\u003cp\u003eApplication developers should not need to know about, or understand, the low-level implementation details of how a security policy is enforced.\u003c/p\u003e\n\u003cp\u003eEach command declared with the \u003ccode\u003eapps\u003c/code\u003e \u003ca href=\"/t/the-snap-format/698#heading--snapyaml\"\u003esnap metadata\u003c/a\u003e is tracked by the system assigning a security label to the command.\u003c/p\u003e\n\u003cp\u003eThis security label takes the form of \u003ccode\u003esnap.\u0026lt;snap\u0026gt;.\u0026lt;app\u0026gt;\u003c/code\u003e where \u003ccode\u003e\u0026lt;snap\u0026gt;\u003c/code\u003e is the name of the snap, and \u003ccode\u003e\u0026lt;app\u0026gt;\u003c/code\u003e is the application name.\u003c/p\u003e\n\u003cp\u003eFor example, the following is an app declaration from \u003ccode\u003esnap.yaml\u003c/code\u003e:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-yaml\"\u003ename: foo\nversion: 1.0\napps:\n  bar:\n    command: bar\n  baz:\n    command: baz\n    daemon: simple\n    plugs: [network]\n\u003c/code\u003e\u003c/pre\u003e\n\u003cul\u003e\n\u003cli\u003ethe security label for  \u003ccode\u003ebar\u003c/code\u003e  is  \u003ccode\u003esnap.foo.bar\u003c/code\u003e . It uses only the default policy.\u003c/li\u003e\n\u003cli\u003ethe security label for  \u003ccode\u003ebaz\u003c/code\u003e  is  \u003ccode\u003esnap.foo.baz\u003c/code\u003e . It uses the  \u003ccode\u003edefault\u003c/code\u003e  policy plus the  \u003ccode\u003enetwork\u003c/code\u003e  interface security policy as provided by the core snap.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThis security label is used throughout the system, including during the process confinement phase when running the application.\u003c/p\u003e\n\u003cp\u003eUnder the hood, the application runner does the following:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eSets up various environment variables:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003eHOME\u003c/code\u003e: set to \u003ccode\u003eSNAP_USER_DATA\u003c/code\u003e for all commands\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eSNAP\u003c/code\u003e: read-only install directory\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eSNAP_ARCH\u003c/code\u003e: the architecture of device (eg, amd64, arm64, armhf, i386, etc)\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eSNAP_DATA\u003c/code\u003e: writable area for a particular revision of the snap\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eSNAP_COMMON\u003c/code\u003e: writable area common across all revisions of the snap\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eSNAP_LIBRARY_PATH\u003c/code\u003e: additional directories which should be added to \u003ccode\u003eLD_LIBRARY_PATH\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eSNAP_NAME\u003c/code\u003e: snap name\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eSNAP_INSTANCE_NAME\u003c/code\u003e: snap instance name incl. instance key if one is set (snapd 2.36+)\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eSNAP_INSTANCE_KEY\u003c/code\u003e: instance key if any (snapd 2.36+)\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eSNAP_REVISION\u003c/code\u003e: store revision of the snap\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eSNAP_USER_DATA\u003c/code\u003e: per-user writable area for a particular revision of the snap\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eSNAP_USER_COMMON\u003c/code\u003e: per-user writable area common across all revisions of the snap\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eSNAP_VERSION\u003c/code\u003e: snap version (from \u003ccode\u003esnap.yaml\u003c/code\u003e)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eWhen hardware is assigned to the snap, a device cgroup is set up with default devices (eg, /dev/null, /dev/urandom, etc) and any devices that are assigned to this snap. Hardware is assigned with \u003cem\u003einterface\u003c/em\u003e connections.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eSets up a private mount namespace shared across all the commands in the snap.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eSets up a private \u003ccode\u003e/tmp\u003c/code\u003e directory using a per-snap private mount namespace and mounting a per-snap directory on /tmp.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eSets up a new instance of \u003cem\u003edevpts\u003c/em\u003e per command.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eSets up the seccomp filter for the command.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eExecutes the command under the command-specific AppArmor profile under a default nice value.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"heading--permissions\"\u003eAppArmor, Seccomp and device permissions\u003c/h2\u003e\n\u003cp\u003eWhen a snap is installed, its metadata is examined and is used to derive \u003cstrong\u003eAppArmor\u003c/strong\u003e profiles, \u003cstrong\u003eSeccomp\u003c/strong\u003e filters and device \u003cstrong\u003ecgroup\u003c/strong\u003e rules, alongside \u003cstrong\u003etraditional permissions\u003c/strong\u003e. This combination provides strong application confinement and isolation:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003ch3 id=\"heading--apparmor\"\u003eAppArmor\u003c/h3\u003e\n\u003cp\u003eAppArmor profiles are generated for each command. These have the appropriate security label and command-specific AppArmor rules to mediate file access, application execution, Linux capabilities, mount, ptrace, IPC, signals, coarse-grained networking.\u003c/p\u003e\n\u003cp\u003eAs already mentioned, each command runs under an app-specific default policy that may be extended through declared interfaces which are expressed in the metadata as \u003ccode\u003eplugs\u003c/code\u003e and \u003ccode\u003eslots\u003c/code\u003e. AppArmor policy violations in strict mode snaps will be denied access, and typically have errno set to \u003ccode\u003eEACCES\u003c/code\u003e. The violation will typically be logged.\u003c/p\u003e\n\u003cp\u003eSee \u003ca href=\"/t/debugging-snaps/18420#heading--apparmor\"\u003eAppArmor violations\u003c/a\u003e for help tracking AppArmor problems.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ch3 id=\"heading--seccomp\"\u003eSeccomp\u003c/h3\u003e\n\u003cp\u003eA seccomp filter is generated for each command in a snap to run under, enabling allowlist syscall filtering, which can then be extended through declared interfaces expressed in the metadata as \u003ccode\u003eplugs\u003c/code\u003e and \u003ccode\u003eslots\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eProcesses with seccomp policy violations will be denied access to the system call with errno set to \u003ccode\u003eEPERM\u003c/code\u003e (snapd releases prior to 2.32 receive \u003ccode\u003eSIGSYS\u003c/code\u003e) and the violation is logged.\u003c/p\u003e\n\u003cp\u003eSee \u003ca href=\"/t/debugging-snaps/18420#heading--seccomp\"\u003eSeccomp violations\u003c/a\u003e for help tracking Seccomp problems.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ch3 id=\"heading--cgroup\"\u003eDevice cgroup\u003c/h3\u003e\n\u003cp\u003eudev rules are generated for each command to tag devices so they may be added/removed to the command’s device cgroup. By default, however, no devices are tagged and the device cgroup is not used, with AppArmor used to mediate access.\u003c/p\u003e\n\u003cp\u003eAs determined by snapd, a device cgroup may be used in addition to AppArmor when a dependent interface is declared, as expressed through \u003ccode\u003eplugs\u003c/code\u003e and \u003ccode\u003eslots\u003c/code\u003e in the metadata.\u003c/p\u003e\n\u003cp\u003eProcesses accessing devices not in the snap-specific device cgroup will be denied access with errno set to \u003ccode\u003eEPERM\u003c/code\u003e. Access violations are not logged.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ch3 id=\"heading--permissions\"\u003eTraditional permissions\u003c/h3\u003e\n\u003cp\u003eTraditional file permissions (owner, group, file ACLs and others) are also enforced with snaps.\u003c/p\u003e\n\u003cp\u003eProcesses trying to access resources which the traditional file permissions do not allow are denied access with errno typically set to \u003ccode\u003eEACCES\u003c/code\u003e (see the man page for the operation for specifics). Access violations are not logged.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eConsequently, all snaps run under a default security policy which can be extended through the use of \u003ca href=\"/t/adding-interfaces/13123\"\u003einterfaces\u003c/a\u003e.\u003c/p\u003e\n\u003ch2 id=\"heading--refresh\"\u003eRefresh awareness\u003c/h2\u003e\n\u003cp\u003eBy default, a service running from a snap needs to be restarted whenever the snap is refreshed (see \u003ca\u003eServices and daemons\u003c/a\u003e for more details).\u003c/p\u003e\n\u003cp\u003eStopping and starting a service is a requirement to support \u003ca\u003esnap revert\u003c/a\u003e and its copying of a snap’s system data from the current version to the new version.\u003c/p\u003e\n\u003cp\u003eSystem data typically includes databases, data files, and configuration files (see \u003ca href=\"/t/data-locations/24905\"\u003eData locations\u003c/a\u003e), although all of this is up to the snap developer.\u003c/p\u003e\n\u003cp\u003eReverting a snap with \u003ccode\u003esnap revert\u003c/code\u003e restores a snap’s system data to its prior state, and services accessing this data need to be stopped to protect the integrity of the data and also to facilitate changes to security policy that are required when a snap updates its system data location.\u003c/p\u003e\n\u003cp\u003eTo help mitigate any potential issues when a restart is required, \u003cem\u003esnapd\u003c/em\u003e will check for running processes associated with the snap before each refresh:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eif \u003cstrong\u003eno processes are running\u003c/strong\u003e, the refresh is performed.\u003c/li\u003e\n\u003cli\u003eif \u003cstrong\u003esystemd-initiated processes\u003c/strong\u003e are detected, their associated units are first stopped, the snap refreshed, and those units started again.\u003c/li\u003e\n\u003cli\u003eif other \u003cstrong\u003esnap-initiated processes\u003c/strong\u003e are detected, \u003ca href=\"/t/refresh-awareness/31152\"\u003erefresh awareness\u003c/a\u003e is used to mediate the update.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"heading--refresh-policy\"\u003eRefresh security policy\u003c/h3\u003e\n\u003cp\u003eThe snap daemon uses AppArmor and Seccomp to create a security policy that is linked to a specific snap revision. This governs what a snap can access on your system. AppArmor profiles and Seccomp filters are created for each command, and while AppArmor profiles can be changed and reloaded while a process is running, Seccomp filters cannot.\u003c/p\u003e\n\u003cp\u003eSnap security policy permits read and write access for the current revision, and read-only access for other revisions to preserve the capabilities of \u003cem\u003esnap revert\u003c/em\u003e. More specifically, if \u003ccode\u003e123\u003c/code\u003e is the current revision, AppArmor policy is set to allow \u003ccode\u003erw\u003c/code\u003e on \u003ccode\u003eSNAP_DATA=/var/snap/foo/123\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eBefore \u003cem\u003erefresh awareness\u003c/em\u003e became available, if a refresh occurred while a snap was running, its AppArmor policy would be updated to allow \u003ccode\u003ew\u003c/code\u003e (write) on the new version and \u003ccode\u003er\u003c/code\u003e (read) on the older versions, including the running version. The policy was applied immediately, which meant that write operations would start to fail for running processes.\u003c/p\u003e\n\u003ch2 id=\"heading--interface\"\u003eInterface security policies\u003c/h2\u003e\n\u003cp\u003eInterfaces are implemented as plugs and slots. A plug in one snap may connect to a slot in another and this provides access to the resources required.\u003c/p\u003e\n\u003cp\u003eThe \u003cem\u003esnap connections\u003c/em\u003e command can be used to see available interfaces alongside their slots and plugs.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003e$ snap connections\nInterface           Plug                                Slot               Notes\nhome                wormhole:home                       :home              -\nlog-observe         gnome-logs:log-observe              :log-observe       -\nmount-observe       gnome-system-monitor:mount-observe  :mount-observe     -\n[...]\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eIn the above example output, the  \u003ccode\u003egnome-logs\u003c/code\u003e  snap is connected to the \u003ccode\u003elog-observe\u003c/code\u003e  interface, which means the security policy from  \u003ccode\u003elog-observe\u003c/code\u003e  has been added to \u003ccode\u003egnome-logs\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eInterfaces can be declared either per-snap or per-command:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eif declared per-snap, all the commands within the snap have the interface security policy added to each command’s security policy when the interface is connected\u003c/li\u003e\n\u003cli\u003eif declared per-command, only the commands within the snap that declare use of the interface have the specified interface security policy added to them\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eAn interface may either auto-connect upon install, or require the user to manually connect them. Interface connections and disconnections are performed via the  \u003ccode\u003esnap connect\u003c/code\u003e  and  \u003ccode\u003esnap disconnect\u003c/code\u003e commands. See \u003ca href=\"/t/interfaces/6154\"\u003einterfaces\u003c/a\u003e for details.\u003c/p\u003e","post_number":1,"post_type":1,"updated_at":"2023-03-30T14:43:20.433Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":3815,"reads":221,"readers_count":220,"score":19245.2,"yours":false,"topic_id":554,"topic_slug":"security-policy-and-sandboxing","display_username":"Wiki Content","primary_group_name":null,"primary_group_flair_url":null,"primary_group_flair_bg_color":null,"primary_group_flair_color":null,"version":31,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"link_counts":[{"url":"https://forum.snapcraft.io/t/interface-management/6154","internal":true,"reflection":false,"title":"Interface management","clicks":9},{"url":"https://forum.snapcraft.io/t/the-snap-format/698","internal":true,"reflection":false,"title":"The snap format","clicks":8},{"url":"https://forum.snapcraft.io/t/refresh-awareness/31152","internal":true,"reflection":false,"title":"Refresh awareness","clicks":2},{"url":"https://forum.snapcraft.io/t/adding-interfaces/13123","internal":true,"reflection":false,"title":"Adding interfaces","clicks":1},{"url":"https://forum.snapcraft.io/t/data-locations/24905","internal":true,"reflection":false,"title":"Data locations","clicks":1},{"url":"https://forum.snapcraft.io/t/snap-confinement/6233","internal":true,"reflection":true,"title":"Snap confinement","clicks":20},{"url":"https://forum.snapcraft.io/t/debugging-snaps/18420","internal":true,"reflection":true,"title":"Debugging snaps","clicks":16},{"url":"https://forum.snapcraft.io/t/the-desktop-interfaces/2042","internal":true,"reflection":true,"title":"The desktop interfaces","clicks":3},{"url":"https://forum.snapcraft.io/t/classic-confinement-for-pcsxr-2017/6345/2","internal":true,"reflection":true,"title":"Classic confinement for pcsxr-2017","clicks":3},{"url":"https://forum.snapcraft.io/t/create-security-documentation/5502/2","internal":true,"reflection":true,"title":"Create Security documentation","clicks":1},{"url":"https://forum.snapcraft.io/t/how-are-snaps-claiming-to-have-no-internet-plug-regulated/18755/22","internal":true,"reflection":true,"title":"How Are SNAPS claiming to have no internet plug regulated?","clicks":0},{"url":"https://forum.snapcraft.io/t/can-someone-tell-me-how-the-snapcraft-triage-process-works/22315/2","internal":true,"reflection":true,"title":"Can someone tell me how the Snapcraft triage process works?","clicks":0},{"url":"https://forum.snapcraft.io/t/request-classic-confinement-for-glpi-agent/22304/10","internal":true,"reflection":true,"title":"Request classic confinement for glpi-agent","clicks":0},{"url":"https://forum.snapcraft.io/t/snap-documentation/11127","internal":true,"reflection":true,"title":"Snap documentation","clicks":0},{"url":"https://forum.snapcraft.io/t/request-classic-confinement-for-glpi-agent/22304/11","internal":true,"reflection":true,"title":"Request classic confinement for glpi-agent","clicks":0},{"url":"https://forum.snapcraft.io/t/udev-backend-in-snapd/1319","internal":true,"reflection":true,"title":"Udev backend in snapd","clicks":0},{"url":"https://forum.snapcraft.io/t/request-for-classic-confinement-for-quicknav/23173/4","internal":true,"reflection":true,"title":"Request for classic confinement for Quicknav","clicks":0},{"url":"https://forum.snapcraft.io/t/snaping-musicbrainz-picard-problems-with-gconf/813/5","internal":true,"reflection":true,"title":"Snaping MusicBrainz Picard \u0026 problems with gconf","clicks":0},{"url":"https://forum.snapcraft.io/t/classic-confinement/33649","internal":true,"reflection":true,"title":"Classic confinement","clicks":0},{"url":"https://forum.snapcraft.io/t/sanitisation-of-snaps-requested-interfaces/739/4","internal":true,"reflection":true,"title":"Sanitisation of snaps' requested interfaces","clicks":0},{"url":"https://forum.snapcraft.io/t/snapping-cups-printing-stack-avahi-support-system-users-groups/1502/54","internal":true,"reflection":true,"title":"Snapping CUPS Printing Stack: Avahi support, system users/groups","clicks":0},{"url":"https://forum.snapcraft.io/t/snap-rejected-because-of-use-of-browser-support/3089/9","internal":true,"reflection":true,"title":"Snap rejected because of use of browser-support","clicks":0},{"url":"https://forum.snapcraft.io/t/how-to-move-from-devmode-to-strict-confinement/541/3","internal":true,"reflection":true,"title":"How to move from devmode to strict confinement?","clicks":0},{"url":"https://forum.snapcraft.io/t/how-to-move-from-devmode-to-strict-confinement/541/2","internal":true,"reflection":true,"title":"How to move from devmode to strict confinement?","clicks":0},{"url":"https://forum.snapcraft.io/t/confinement-policy-inheritence/4152/2","internal":true,"reflection":true,"title":"Confinement policy inheritence","clicks":0},{"url":"https://forum.snapcraft.io/t/strict-mode-seccomp-policy-violations-now-set-errno-to-eperm-instead-of-killing-the-process/4397","internal":true,"reflection":true,"title":"Strict mode seccomp policy violations now set errno to EPERM instead of killing the process","clicks":0},{"url":"https://forum.snapcraft.io/t/classic-confinement-for-paraemu-snap/5727/5","internal":true,"reflection":true,"title":"Classic confinement for paraemu snap","clicks":0},{"url":"https://forum.snapcraft.io/t/segfault-with-older-glib/5754/4","internal":true,"reflection":true,"title":"Segfault with older glib","clicks":0},{"url":"https://forum.snapcraft.io/t/snap-reference/30854","internal":true,"reflection":true,"title":"Snap Reference","clicks":0},{"url":"https://forum.snapcraft.io/t/mysterymentor-request-for-classic-confinement/6880/9","internal":true,"reflection":true,"title":"MysteryMentor: Request for classic confinement","clicks":0},{"url":"https://forum.snapcraft.io/t/unable-to-change-modify-write-app-data/7311/2","internal":true,"reflection":true,"title":"Unable to change/modify/write app data","clicks":0},{"url":"https://forum.snapcraft.io/t/porting-ubuntu-core-to-imx6-am335x-issue/7089/31","internal":true,"reflection":true,"title":"Porting ubuntu core to IMX6/am335x issue?","clicks":0},{"url":"https://forum.snapcraft.io/t/systemd-journald-use-high-cpu/7582/2","internal":true,"reflection":true,"title":"Systemd-journald use high CPU","clicks":0},{"url":"https://forum.snapcraft.io/t/snappy-debug-improvements/9042","internal":true,"reflection":true,"title":"Snappy-debug improvements","clicks":0},{"url":"https://forum.snapcraft.io/t/manual-review-request-for-curiosity-app/28321/8","internal":true,"reflection":true,"title":"Manual review request for Curiosity app","clicks":0},{"url":"https://forum.snapcraft.io/t/whats-new/20117","internal":true,"reflection":true,"title":"What's new","clicks":0},{"url":"https://forum.snapcraft.io/t/request-for-personal-files-confinement-for-kafkactl-snap/19348/19","internal":true,"reflection":true,"title":"Request for personal-files confinement for kafkactl snap","clicks":0}],"read":true,"user_title":null,"bookmarked":false,"actions_summary":[{"id":2,"count":4}],"moderator":false,"admin":false,"staff":false,"user_id":1044,"hidden":false,"trust_level":1,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":true,"last_wiki_edit":"2023-03-30T14:43:20.465Z","can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false},{"id":2742,"name":"Gustavo Niemeyer","username":"niemeyer","avatar_template":"/user_avatar/forum.snapcraft.io/niemeyer/{size}/4620_2.png","created_at":"2017-05-11T17:05:29.000Z","cooked":"\u003cp\u003eContent moved \u003ca href=\"https://github.com/snapcore/snapd/wiki/Security\"\u003eout of the wiki\u003c/a\u003e.\u003c/p\u003e","post_number":2,"post_type":1,"updated_at":"2017-05-11T17:06:27.944Z","reply_count":0,"reply_to_post_number":null,"quote_count":0,"incoming_link_count":11,"reads":119,"readers_count":118,"score":78.8,"yours":false,"topic_id":554,"topic_slug":"security-policy-and-sandboxing","display_username":"Gustavo Niemeyer","primary_group_name":null,"primary_group_flair_url":null,"primary_group_flair_bg_color":null,"primary_group_flair_color":null,"version":1,"can_edit":false,"can_delete":false,"can_recover":false,"can_wiki":false,"link_counts":[{"url":"https://github.com/snapcore/snapd/wiki/Security","internal":false,"reflection":false,"title":"Security · snapcore/snapd Wiki · GitHub","clicks":71}],"read":true,"user_title":null,"bookmarked":false,"actions_summary":[],"moderator":false,"admin":true,"staff":true,"user_id":1,"hidden":false,"trust_level":3,"deleted_at":null,"user_deleted":false,"edit_reason":null,"can_view_edit_history":true,"wiki":false,"can_accept_answer":false,"can_unaccept_answer":false,"accepted_answer":false}],"stream":[2741,2742]},"timeline_lookup":[[1,2226]],"suggested_topics":[{"id":30990,"title":"The steam-support interface","fancy_title":"The steam-support interface","slug":"the-steam-support-interface","posts_count":2,"reply_count":0,"highest_post_number":2,"image_url":null,"created_at":"2022-07-22T12:51:00.480Z","last_posted_at":"2022-07-27T09:14:33.468Z","bumped":true,"bumped_at":"2022-07-27T09:14:33.468Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags":[],"like_count":2,"views":1025,"category_id":15,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest single","description":"Original Poster, Most Recent Poster","user":{"id":2772,"username":"degville","name":"Graham Morrison","avatar_template":"/user_avatar/forum.snapcraft.io/degville/{size}/2021_2.png"}}]},{"id":31214,"title":"ROS 2 shared memory in snaps","fancy_title":"ROS 2 shared memory in snaps","slug":"ros-2-shared-memory-in-snaps","posts_count":3,"reply_count":1,"highest_post_number":3,"image_url":null,"created_at":"2022-08-09T13:28:52.600Z","last_posted_at":"2022-08-23T09:55:20.580Z","bumped":true,"bumped_at":"2022-08-23T09:55:20.580Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags":[],"like_count":1,"views":1271,"category_id":15,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":null,"description":"Original Poster","user":{"id":11989,"username":"gbeuzeboc","name":"","avatar_template":"/letter_avatar/gbeuzeboc/{size}/5_6d6f4cde2641c35611d5cac2fb97c77e.png"}},{"extras":"latest","description":"Most Recent Poster","user":{"id":2772,"username":"degville","name":"Graham Morrison","avatar_template":"/user_avatar/forum.snapcraft.io/degville/{size}/2021_2.png"}}]},{"id":30848,"title":"Snap Tutorials","fancy_title":"Snap Tutorials","slug":"snap-tutorials","posts_count":1,"reply_count":0,"highest_post_number":1,"image_url":null,"created_at":"2022-07-12T10:04:41.667Z","last_posted_at":"2022-07-12T10:04:41.817Z","bumped":true,"bumped_at":"2023-03-31T17:48:24.106Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags":[],"like_count":0,"views":1682,"category_id":15,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest single","description":"Original Poster, Most Recent Poster","user":{"id":2772,"username":"degville","name":"Graham Morrison","avatar_template":"/user_avatar/forum.snapcraft.io/degville/{size}/2021_2.png"}}]},{"id":32229,"title":"Library linter","fancy_title":"Library linter","slug":"library-linter","posts_count":2,"reply_count":0,"highest_post_number":2,"image_url":null,"created_at":"2022-10-18T17:35:43.980Z","last_posted_at":"2022-10-19T03:00:57.683Z","bumped":true,"bumped_at":"2022-10-19T03:00:57.683Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags":[],"like_count":3,"views":793,"category_id":15,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":null,"description":"Original Poster","user":{"id":3793,"username":"cmatsuoka","name":"Claudio Matsuoka","avatar_template":"/user_avatar/forum.snapcraft.io/cmatsuoka/{size}/9338_2.png"}},{"extras":"latest","description":"Most Recent Poster","user":{"id":393,"username":"jamesh","name":"James Henstridge","avatar_template":"/user_avatar/forum.snapcraft.io/jamesh/{size}/3947_2.png"}}]},{"id":34099,"title":"Set up classic confinement for an autotools project","fancy_title":"Set up classic confinement for an autotools project","slug":"set-up-classic-confinement-for-an-autotools-project","posts_count":3,"reply_count":1,"highest_post_number":3,"image_url":null,"created_at":"2023-02-27T17:10:47.688Z","last_posted_at":"2023-03-29T11:52:25.139Z","bumped":true,"bumped_at":"2023-03-29T11:52:25.139Z","archetype":"regular","unseen":false,"pinned":false,"unpinned":null,"visible":true,"closed":false,"archived":false,"bookmarked":null,"liked":null,"tags":["how-to"],"like_count":2,"views":807,"category_id":15,"featured_link":null,"has_accepted_answer":false,"posters":[{"extras":"latest","description":"Original Poster, Most Recent Poster","user":{"id":14015,"username":"dboddie","name":"David Boddie","avatar_template":"/user_avatar/forum.snapcraft.io/dboddie/{size}/9564_2.png"}},{"extras":null,"description":"Frequent Poster","user":{"id":14252,"username":"zhsj","name":"Shengjing Zhu","avatar_template":"/user_avatar/forum.snapcraft.io/zhsj/{size}/9689_2.png"}}]}],"tags":[],"id":554,"title":"Security policy and sandboxing","fancy_title":"Security policy and sandboxing","posts_count":2,"created_at":"2017-05-11T17:04:33.234Z","views":13740,"reply_count":0,"like_count":4,"last_posted_at":"2017-05-11T17:05:29.000Z","visible":true,"closed":false,"archived":false,"has_summary":false,"archetype":"regular","slug":"security-policy-and-sandboxing","category_id":15,"word_count":1603,"deleted_at":null,"user_id":1044,"featured_link":null,"pinned_globally":false,"pinned_at":null,"pinned_until":null,"image_url":null,"slow_mode_seconds":0,"draft":null,"draft_key":"topic_554","draft_sequence":null,"unpinned":null,"pinned":false,"current_post_number":1,"highest_post_number":2,"deleted_by":null,"actions_summary":[{"id":4,"count":0,"hidden":false,"can_act":false},{"id":8,"count":0,"hidden":false,"can_act":false},{"id":7,"count":0,"hidden":false,"can_act":false}],"chunk_size":20,"bookmarked":false,"topic_timer":null,"message_bus_last_id":0,"participant_count":2,"show_read_indicator":false,"thumbnails":null,"details":{"notification_level":1,"participants":[{"id":1,"username":"niemeyer","name":"Gustavo Niemeyer","avatar_template":"/user_avatar/forum.snapcraft.io/niemeyer/{size}/4620_2.png","post_count":1,"primary_group_name":null,"primary_group_flair_url":null,"primary_group_flair_color":null,"primary_group_flair_bg_color":null},{"id":1044,"username":"wiki","name":"Wiki Content","avatar_template":"/user_avatar/forum.snapcraft.io/wiki/{size}/425_2.png","post_count":1,"primary_group_name":null,"primary_group_flair_url":null,"primary_group_flair_color":null,"primary_group_flair_bg_color":null}],"created_by":{"id":1044,"username":"wiki","name":"Wiki Content","avatar_template":"/user_avatar/forum.snapcraft.io/wiki/{size}/425_2.png"},"last_poster":{"id":1,"username":"niemeyer","name":"Gustavo Niemeyer","avatar_template":"/user_avatar/forum.snapcraft.io/niemeyer/{size}/4620_2.png"},"links":[{"url":"https://github.com/snapcore/snapd/wiki/Security","title":"Security · snapcore/snapd Wiki · GitHub","internal":false,"attachment":false,"reflection":false,"clicks":71,"user_id":1,"domain":"github.com","root_domain":"github.com"},{"url":"https://forum.snapcraft.io/t/snap-confinement/6233","title":"Snap confinement","internal":true,"attachment":false,"reflection":true,"clicks":20,"user_id":14,"domain":"forum.snapcraft.io","root_domain":"snapcraft.io"},{"url":"https://forum.snapcraft.io/t/debugging-snaps/18420","title":"Debugging snaps","internal":true,"attachment":false,"reflection":true,"clicks":16,"user_id":2772,"domain":"forum.snapcraft.io","root_domain":"snapcraft.io"},{"url":"https://forum.snapcraft.io/t/interface-management/6154","title":"Interface management","internal":true,"attachment":false,"reflection":false,"clicks":9,"user_id":1044,"domain":"forum.snapcraft.io","root_domain":"snapcraft.io"},{"url":"https://forum.snapcraft.io/t/the-snap-format/698","title":"The snap format","internal":true,"attachment":false,"reflection":false,"clicks":8,"user_id":1044,"domain":"forum.snapcraft.io","root_domain":"snapcraft.io"},{"url":"https://forum.snapcraft.io/t/the-desktop-interfaces/2042","title":"The desktop interfaces","internal":true,"attachment":false,"reflection":true,"clicks":3,"user_id":21,"domain":"forum.snapcraft.io","root_domain":"snapcraft.io"},{"url":"https://forum.snapcraft.io/t/classic-confinement-for-pcsxr-2017/6345/2","title":"Classic confinement for pcsxr-2017","internal":true,"attachment":false,"reflection":true,"clicks":3,"user_id":393,"domain":"forum.snapcraft.io","root_domain":"snapcraft.io"},{"url":"https://forum.snapcraft.io/t/refresh-awareness/31152","title":"Refresh awareness","internal":true,"attachment":false,"reflection":false,"clicks":2,"user_id":1044,"domain":"forum.snapcraft.io","root_domain":"snapcraft.io"},{"url":"https://forum.snapcraft.io/t/create-security-documentation/5502/2","title":"Create Security documentation","internal":true,"attachment":false,"reflection":true,"clicks":1,"user_id":9,"domain":"forum.snapcraft.io","root_domain":"snapcraft.io"},{"url":"https://forum.snapcraft.io/t/adding-interfaces/13123","title":"Adding interfaces","internal":true,"attachment":false,"reflection":false,"clicks":1,"user_id":1044,"domain":"forum.snapcraft.io","root_domain":"snapcraft.io"},{"url":"https://forum.snapcraft.io/t/data-locations/24905","title":"Data locations","internal":true,"attachment":false,"reflection":false,"clicks":1,"user_id":1044,"domain":"forum.snapcraft.io","root_domain":"snapcraft.io"}]}}